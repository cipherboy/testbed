{"version":3,"sources":["../../src/asn1.js","../node_modules/pvutils/src/utils.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/pkijs/src/AlgorithmIdentifier.js","../node_modules/pkijs/src/common.js","../node_modules/react/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/pkijs/src/Attribute.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/pkijs/src/EncryptedContentInfo.js","../node_modules/pkijs/src/PublicKeyInfo.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/pkijs/src/ECPublicKey.js","../node_modules/pkijs/src/PrivateKeyInfo.js","../node_modules/pkijs/src/PBKDF2Params.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/pkijs/src/AttributeTypeAndValue.js","../node_modules/pkijs/src/RelativeDistinguishedNames.js","../node_modules/pkijs/src/GeneralName.js","../node_modules/pkijs/src/AccessDescription.js","../node_modules/pkijs/src/AltName.js","../node_modules/pkijs/src/Time.js","../node_modules/pkijs/src/SubjectDirectoryAttributes.js","../node_modules/pkijs/src/PrivateKeyUsagePeriod.js","../node_modules/pkijs/src/BasicConstraints.js","../node_modules/pkijs/src/IssuingDistributionPoint.js","../node_modules/pkijs/src/GeneralNames.js","../node_modules/pkijs/src/GeneralSubtree.js","../node_modules/pkijs/src/NameConstraints.js","../node_modules/pkijs/src/DistributionPoint.js","../node_modules/pkijs/src/CRLDistributionPoints.js","../node_modules/pkijs/src/PolicyQualifierInfo.js","../node_modules/pkijs/src/PolicyInformation.js","../node_modules/pkijs/src/CertificatePolicies.js","../node_modules/pkijs/src/PolicyMapping.js","../node_modules/pkijs/src/PolicyMappings.js","../node_modules/pkijs/src/AuthorityKeyIdentifier.js","../node_modules/pkijs/src/PolicyConstraints.js","../node_modules/pkijs/src/ExtKeyUsage.js","../node_modules/pkijs/src/InfoAccess.js","../node_modules/bytestreamjs/src/bytestream.js","../node_modules/pkijs/src/SignedCertificateTimestampList.js","../node_modules/pkijs/src/CertificateTemplate.js","../node_modules/pkijs/src/CAVersion.js","../node_modules/pkijs/src/QCStatements.js","../node_modules/pkijs/src/Extension.js","../node_modules/pkijs/src/Extensions.js","../node_modules/pkijs/src/Certificate.js","../node_modules/pkijs/src/CertificationRequest.js","../node_modules/pkijs/src/KeyBag.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/pkijs/src/OtherPrimeInfo.js","../node_modules/pkijs/src/RSASSAPSSParams.js","../node_modules/pkijs/src/RSAPublicKey.js","../node_modules/pkijs/src/ECPrivateKey.js","../node_modules/pkijs/src/RSAPrivateKey.js","../node_modules/pkijs/src/PBES2Params.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/pkijs/src/CryptoEngine.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/object-assign/index.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/asn1js/node_modules/pvutils/src/utils.js","../node_modules/process/browser.js","../node_modules/webpack/buildin/global.js"],"names":["inputBuffer","inputSchema","verified","result","error","asn1","fromBER","compareSchema","json","powers2","Uint8Array","constructor","parameters","this","getParametersValue","valueBeforeDecode","ArrayBuffer","blockName","blockLength","warnings","bufferToHexCodes","HexBlock","BaseClass","checkBufferParams","inputOffset","intBuffer","sizeOnly","isHexOnly","valueHex","slice","object","firstOctet","tagNumber","retBuf","retView","number","encodedBuf","utilToBase","encodedView","size","i","byteLength","curView","tagNumberMask","count","tagNumberBufferMaxLength","intTagNumberBuffer","tempBuffer","tempBufferView","utilFromBase","tagClass","isIndefiniteForm","longFormUsed","lengthBufferView","push","length","TypeError","valueBlockType","LocalIdentificationBlock","LocalLengthBlock","resultOffset","valueBlock","lenBlock","idBlock","idBlockBuf","toBER","valueBlockSizeBuf","lenBlockBuf","utilConcatBuf","valueBlockBuf","indefBuf","indefView","primitiveSchema","valueHexView","initialOffset","initialLength","currentOffset","checkLen","indefiniteLength","returnObject","LocalFromBER","inputLength","EndOfContent","value","valueBuf","paramaters","view","utilDecodeTC","isConstructed","LocalConstructedValueBlock","currentBlockName","OctetString","octetString","JSON","BitString","unusedBits","bitString","expectedLength","offset","updatedValueHex","_valueHex","updatedView","c","firstView","secondView","firstViewCopy","firstViewCopyLength","secondViewCopy","secondViewCopyLength","counter","utilConcatView","n","p","digits","newValue","b","firstBit","bitNumber","asn1View","flag","byteNumber","currentByte","viewSub","power2","viewAdd","digitsString","_value","_valueDec","utilEncodeTC","otherValue","isEqualBuffer","valueDec","integer","Integer","tempValueHex","tempView","sidValue","sidBlock","pos1","pos2","sid","string","plus","parsedSID","parseInt","isNaN","sidStr","String","decodeURIComponent","escape","str","unescape","encodeURIComponent","strLen","ex","copyBuffer","valueView","temp","Uint16Array","strLength","inputString","codeBuf","codeView","dif","j","Uint32Array","buffer","inputDate","Date","month","parserArray","parser","year","outputArray","Array","padNumber","isUTC","timeString","dateTimeString","fractionPart","hourDifference","minuteDifference","Number","Error","multiplier","differencePosition","differenceString","fractionPointPosition","fractionPartCheck","fractionResult","Math","tempDate","millisecond","incomingOffset","BaseBlock","baseBlock","newASN1Type","newObject","inputObject","localChangeType","root","inputData","_result","encodedId","schemaView","admission","maxLength","_optional","arrayRoot","name","defaultValue","Object","insertSpace","item","toString","toUpperCase","trim","inputBase","pow","base","reserved","internalReserved","internalValue","biggest","basis","floor","outputLength","prevLength","buffers","set","inputBuffer1","inputBuffer2","view1","view2","base64Template","base64UrlTemplate","toBase64","input","useUrlTemplate","skipPadding","skipLeadingZeros","flag1","flag2","output","template","nonZeroPosition","charCodeAt","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charAt","fromBase64","cutTailZeros","indexof","toSearch","test","incoming","fromCharCode","nonZeroStart","arrayBufferToString","resultString","element","stringToArrayBuffer","stringLength","resultBuffer","resultView","log2","log","nearestPowerOf2","round","clearProps","propsArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","prototype","AlgorithmIdentifier","algorithmId","defaultValues","algorithmParams","fromSchema","schema","asn1js","names","algorithmIdentifier","algorithm","params","toJSON","stringify","memberName","memberValue","optional","engine","crypto","subtle","getEngine","process","global","window","_engine","pid","pkijs","getCrypto","getRandomValues","getOIDByAlgorithm","createCMSECDSASignature","signatureBuffer","rBuffer","rInteger","sBuffer","sInteger","convertToDER","stringPrep","isSpace","cuttedResult","toLowerCase","createECDSASignatureFromCMS","cmsSignature","rValue","convertFromDER","sValue","correctedLength","rValueView","rValueBufferCorrected","rValueViewCorrected","sValueView","sValueBufferCorrected","sValueViewCorrected","getAlgorithmByOID","oid","kdfWithCounter","hashFunction","Zbuffer","Counter","SharedInfo","Promise","reject","counterBuffer","counterView","combinedBuffer","digest","then","kdf","keydatalen","hashLength","maxCounter","kdfArray","quotient","all","incomingResult","currentCounter","found","newBuffer","newView","combinedView","self","subtleObject","engineName","cryptoObject","webkitSubtle","CryptoEngine","setEngine","module","exports","require","_createForOfIteratorHelper","o","Symbol","iterator","isArray","F","s","done","e","_e","f","it","err","normalCompletion","didErr","step","next","_e2","Attribute","type","values","from","setName","EncryptedContentInfo","contentType","contentEncryptionAlgorithm","encryptedContent","constrString","pieceView","_array","_view","sequenceLengthBlock","toSchema","encryptedValue","_object","isEqual","PublicKeyInfo","subjectPublicKey","parsedKey","fromJSON","ECPublicKey","namedCurve","publicKeyASN1","RSAPublicKey","jwk","kty","publicKeyJWK","keys","publicKey","sequence","resolve","_this","exportKey","exportedKey","exception","asyncGeneratorStep","gen","_next","_throw","arg","info","_asyncToGenerator","fn","args","arguments","apply","undefined","_toConsumableArray","arr","arrayLikeToArray","iter","unsupportedIterableToArray","x","y","coordinateLength","data","crvName","crv","coodinateLength","convertBuffer","convertBufferView","PrivateKeyInfo","version","privateKeyAlgorithm","privateKey","attributes","privateKeyASN1","RSAPrivateKey","ECPrivateKey","PBKDF2Params","salt","iterationCount","keyLength","prf","saltPrimitive","saltConstructed","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","call","_typeof","obj","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","Super","NewTarget","_setPrototypeOf","_inherits","subClass","superClass","create","_slicedToArray","_arr","_n","_d","_s","_i","AttributeTypeAndValue","typeValue","compareTo","stringBlockNames","isString","thisName","value1","value2","localeCompare","RelativeDistinguishedNames","typesAndValues","repeatedSet","RDN","entries","index","repeatedSequence","typeAndValue","builtInStandardAttributes","country_name","administration_domain_name","network_address","terminal_identifier","private_domain_name","organization_name","numeric_user_identifier","personal_name","organizational_unit_names","builtInDomainDefinedAttributes","extensionAttributes","GeneralName","otherName","rfc822Name","dNSName","x400Address","directoryName","ediPartyName","uniformResourceIdentifier","iPAddress","registeredID","valueBER","AccessDescription","accessMethod","accessLocation","AltName","altNames","Time","utcTimeName","generalTimeName","toDate","valueDate","SubjectDirectoryAttributes","PrivateKeyUsagePeriod","notBefore","notAfter","localNotBefore","fromBuffer","localNotAfter","BasicConstraints","cA","pathLenConstraint","IssuingDistributionPoint","distributionPoint","onlyContainsUserCerts","onlyContainsCACerts","onlySomeReasons","indirectCRL","onlyContainsAttributeCerts","distributionPointNames","GeneralNames","generalNames","GeneralSubtree","minimum","maximum","valueMinimum","valueMaximum","NameConstraints","permittedSubtrees","excludedSubtrees","DistributionPoint","reasons","cRLIssuer","cRLIssuerNames","CRLDistributionPoints","distributionPoints","PolicyQualifierInfo","policyQualifierId","qualifier","PolicyInformation","policyIdentifier","policyQualifiers","CertificatePolicies","certificatePolicies","PolicyMapping","issuerDomainPolicy","subjectDomainPolicy","PolicyMappings","mappings","AuthorityKeyIdentifier","keyIdentifier","authorityCertIssuer","authorityCertSerialNumber","PolicyConstraints","requireExplicitPolicy","inhibitPolicyMapping","field1","ber1","int1","field2","ber2","int2","ExtKeyUsage","keyPurposes","InfoAccess","accessDescriptions","ByteStream","clear","stub","fromUint8Array","fromArrayBuffer","fromString","fromHexString","hexstring","_buffer","array","start","hexString","hexMap","Map","get","stream","end","initialSize","streamViewLength","copyView","realloc","pattern","backward","patternLength","patternArray","equal","equalStart","patterns","id","position","findPattern","valid","patternFound","findFirstIn","left","right","currentLength","findFirstNotIn","firstIn","skipNotPatterns","firstNotIn","skipPatterns","findFirstSequence","leftPattern","rightPattern","currentPositionLeft","leftPatterns","findAllPatternIn","rightPatterns","splice","sort","a","inputLeftPatterns","inputRightPatterns","findAllIn","searchPattern","replacePattern","findAllResult","status","searchPatternPositions","replacePatternPositions","patternDifference","changedBuffer","changedView","currentPosition","k","SeqStream","_length","_start","appendBlock","prevStart","gap","_stream","findAllNotIn","findAllSequences","findPairedPatterns","findPairedArrays","char","changeLength","block","getBlock","Int16Array","Int32Array","SignedCertificateTimestamp","logID","timestamp","extensions","hashAlgorithm","signatureAlgorithm","signature","fromStream","seqStream","getUint16","extensionsLength","signatureLength","signatureData","toStream","appendUint16","appendChar","appendView","_hashAlgorithm","_signatureAlgorithm","timeBuffer","timeView","baseArray","valueOf","_signature","logs","dataType","logId","publicKeyBase64","log_id","publicKeyInfo","appendUint24","verifyWithPublicKey","SignedCertificateTimestampList","timestamps","overallLength","timestampsData","timestampStream","CertificateTemplate","templateID","templateMajorVersion","templateMinorVersion","extnID","CAVersion","certificateIndex","keyIndex","tempValue","keyIndexBuffer","keyIndexView8","keyIndexView16","certificateIndexBuffer","certificateIndexView8","certificateIndexView16","QCStatement","QCStatements","Extension","critical","extnValue","parsedValue","parsingError","Extensions","extension","tbsCertificate","tbsCertificateVersion","tbsCertificateSerialNumber","issuer","tbsCertificateValidity","subject","subjectPublicKeyInfo","tbsCertificateIssuerUniqueID","tbsCertificateSubjectUniqueID","Certificate","tbs","serialNumber","issuerUniqueID","subjectUniqueID","signatureValue","encodeFlag","tbsSchema","encodeTBS","getPublicKey","getSignatureParameters","signWithPrivateKey","issuerCertificate","CertificationRequestInfo","CertificationRequestInfoVersion","CertificationRequestInfoAttributes","CertificationRequest","certificationRequestInfo","_unsupportedIterableToArray","minLen","OtherPrimeInfo","prime","exponent","coefficient","r","d","t","RSASSAPSSParams","maskGenAlgorithm","saltLength","trailerField","modulus","publicExponent","publicKeyData","compareWithDefault","privateKeyJSON","publicKeyJSON","privateExponent","prime1","prime2","exponent1","exponent2","otherPrimeInfos","otherPrimeInfo","q","dp","dq","qi","oth","otherPrimeInfosName","PBES2Params","keyDerivationFunc","encryptionScheme","_arrayLikeToArray","len","arr2","makePKCS12B2Key","cryptoEngine","password","u","v","passwordViewInitial","passwordTransformed","passwordTransformedView","D","dView","sLen","ceil","S","sView","saltView","passwordLength","pLen","P","pView","passwordView","sPlusPLength","I","iView","internalSequence","_I","dAndI","dAndIView","roundBuffer","B","bView","iRound","sliceStart","sliceLength","chunk","l","format","keyData","extractable","keyUsages","importKey","hash","alg","ext","key_ops","privateKeyInfo","parse","inputFormat","outputFormat","encrypt","decrypt","sign","verify","generateKey","deriveKey","deriveBits","wrapKey","unwrapKey","algorithmName","operation","usages","modulusLength","public","iv","iterations","contentEncryptionOID","pbkdf2OID","hmacOID","hmacHashAlgorithm","ivBuffer","ivView","saltBuffer","contentView","contentToEncrypt","pbkdf2Params","pbes2Parameters","encryptedContentInfo","dataBuffer","content","hmacAlgorithm","contentToStamp","signatureToVerify","contentToVerify","getAlgorithmParameters","paramsObject","hashAlgorithmOID","pssParameters","shaAlgorithm","getHashAlgorithm","algorithmObject","algorithmParamsChecked","curveObject","fillPublicKeyParameters","publicKeyInfoSchema","publicKeyInfoBuffer","publicKeyInfoView","hashAlgo","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","assign","test1","getOwnPropertyNames","test2","map","join","test3","split","forEach","letter","shouldUseNative","source","symbols","to","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","w","z","A","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","context","refs","updater","G","H","isReactComponent","setState","forceUpdate","isPureReactComponent","J","current","K","L","ref","__self","__source","M","g","children","h","m","defaultProps","$$typeof","_owner","O","Q","R","pop","keyPrefix","func","V","T","U","replace","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_ctor","_status","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","onError","da","ea","fa","ha","ia","ja","la","ma","na","oa","currentTarget","ka","pa","qa","ra","indexOf","sa","extractEvents","eventTypes","ta","phasedRegistrationNames","ua","registrationName","va","wa","dependencies","xa","ya","document","za","Aa","Ba","Ca","stateNode","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","Pa","Qa","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","Ua","Va","xlinkHref","Wa","Xa","Sa","Ta","Ra","removeAttribute","setAttribute","setAttributeNS","Ya","Za","$a","ab","bb","cb","db","eb","fb","gb","hb","ib","jb","kb","lb","mb","nb","pb","displayName","qb","tag","_debugOwner","_debugSource","fileName","lineNumber","rb","sb","nodeName","xb","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","tb","yb","checked","zb","defaultChecked","_wrapperState","initialChecked","Ab","initialValue","controlled","Bb","Cb","Db","Eb","ownerDocument","activeElement","Gb","Fb","Hb","options","selected","defaultSelected","disabled","Ib","dangerouslySetInnerHTML","Jb","Kb","Lb","textContent","Mb","Nb","Ob","Pb","Qb","MSApp","execUnsafeLocalFunction","namespaceURI","innerHTML","firstChild","removeChild","appendChild","Rb","lastChild","nodeType","nodeValue","Sb","Tb","animationend","animationiteration","animationstart","transitionend","Ub","Vb","Wb","style","animation","transition","Xb","Yb","Zb","$b","ac","bc","WeakMap","cc","dc","alternate","effectTag","ec","memoizedState","dehydrated","fc","hc","child","sibling","gc","ic","concat","jc","kc","lc","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","mc","nc","srcElement","correspondingUseElement","parentNode","oc","pc","qc","topLevelType","nativeEvent","targetInst","ancestors","rc","eventSystemFlags","sc","containerInfo","tc","uc","has","vc","wc","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Kc","blockedOn","container","Lc","pointerId","Mc","Nc","Pc","unstable_runWithPriority","priority","hydrate","Qc","Rc","Sc","Tc","shift","Uc","unstable_scheduleCallback","unstable_NormalPriority","Vc","Wc","Yc","Zc","$c","ad","bubbled","captured","eventPriority","bd","cd","dd","unstable_UserBlockingPriority","ed","fd","gd","hd","addEventListener","Oc","jd","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","kd","ld","md","setProperty","substring","nd","menuitem","area","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","od","pd","is","qd","rd","sd","td","body","ud","vd","node","nextSibling","xd","HTMLIFrameElement","contentWindow","location","href","yd","contentEditable","Dd","Ed","Fd","autoFocus","Gd","__html","Hd","setTimeout","Id","clearTimeout","Jd","Kd","previousSibling","Ld","random","Md","Nd","Od","Pd","Qd","Rd","Sd","Td","dispatchConfig","Ud","_targetInst","Vd","Wd","Xd","Yd","Zd","$d","ae","be","ce","Interface","isDefaultPrevented","defaultPrevented","returnValue","ee","eventPool","fe","destructor","de","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","extend","ge","he","ie","je","ke","documentMode","le","me","ne","oe","beforeInput","compositionEnd","compositionStart","compositionUpdate","pe","qe","keyCode","re","detail","se","ve","locale","which","te","ctrlKey","altKey","metaKey","ue","we","color","date","datetime","email","range","search","tel","text","time","url","week","xe","ye","change","ze","Ae","Be","Ce","De","Ee","Fe","Ge","detachEvent","He","Ie","attachEvent","Je","Ke","Le","Me","_isInputEventSupported","Ne","Oe","Alt","Control","Meta","Shift","Pe","getModifierState","Qe","Re","Se","Te","Ue","Ve","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","We","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Xe","mouseEnter","mouseLeave","pointerEnter","pointerLeave","Ye","defaultView","parentWindow","$e","af","bf","cf","df","select","ef","ff","gf","hf","jf","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","kf","onSelect","lf","animationName","elapsedTime","pseudoElement","mf","clipboardData","nf","of","charCode","pf","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","qf","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","rf","repeat","sf","dataTransfer","tf","touches","targetTouches","changedTouches","uf","vf","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","wf","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","yf","zf","Af","Bf","Cf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Df","Ef","Ff","getChildContext","Gf","__reactInternalMemoizedMergedChildContext","Hf","If","Jf","Kf","unstable_cancelCallback","Lf","unstable_requestPaint","Mf","unstable_now","Nf","unstable_getCurrentPriorityLevel","Of","unstable_ImmediatePriority","Pf","Qf","Rf","unstable_LowPriority","Sf","unstable_IdlePriority","Tf","Uf","unstable_shouldYield","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","childExpirationTime","qg","firstContext","expirationTime","rg","sg","observedBits","responders","tg","ug","updateQueue","baseState","baseQueue","shared","pending","effects","vg","wg","suspenseConfig","payload","callback","xg","yg","zg","ca","Ag","Bg","Cg","Dg","Eg","Fg","Jg","_reactInternalFiber","Gg","Hg","Ig","Kg","shouldComponentUpdate","Lg","contextType","state","Mg","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ng","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Og","Pg","_stringRef","Qg","Rg","lastEffect","nextEffect","firstEffect","Sg","Tg","mode","elementType","Ug","implementation","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","documentElement","tagName","eh","fh","gh","hh","memoizedProps","revealOrder","ih","responder","jh","kh","lh","mh","nh","oh","ph","qh","rh","sh","th","queue","uh","vh","wh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","xh","yh","zh","Ah","destroy","deps","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","readContext","useResponder","useDeferredValue","useTransition","Oh","Ph","Qh","Rh","Sh","Th","pendingProps","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","ei","fi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","gi","getDerivedStateFromError","hi","pendingContext","ni","pi","ii","retryTime","ji","fallback","unstable_avoidThisFallback","ki","li","isBackwards","rendering","renderingStartTime","last","tail","tailExpiration","tailMode","mi","ri","si","wasMultiple","multiple","onClick","onclick","createElementNS","createTextNode","ti","ui","vi","wi","xi","yi","zi","Ai","stack","Bi","WeakSet","Set","Ci","Fi","Ei","Gi","__reactInternalSnapshotBeforeUpdate","Hi","Ii","Ji","focus","Ki","Li","componentWillUnmount","Di","Mi","Ni","Oi","Pi","Qi","insertBefore","_reactRootContainer","Ri","Si","Ti","display","Ui","Vi","add","Wi","Xi","Yi","Zi","$i","componentDidCatch","aj","componentStack","Rj","bj","cj","dj","kj","lj","mj","nj","oj","qj","rj","sj","tj","uj","vj","wj","timeoutMs","xj","yj","zj","lastExpiredTime","Aj","firstPendingTime","lastPingedTime","nextKnownPendingLevel","callbackExpirationTime","callbackPriority","callbackNode","Bj","timeout","Cj","Dj","Ej","Fj","Gj","Hj","finishedWork","finishedExpirationTime","lastSuspendedTime","Ij","timeoutHandle","Jj","busyMinDurationMs","busyDelayMs","Kj","Mj","Nj","pingCache","Oj","ub","Pj","Xc","Qj","Sj","firstSuspendedTime","rangeCount","wb","activeElementDetached","focusedElem","selectionRange","Tj","wd","contains","compareDocumentPosition","min","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","vb","Uj","Vj","Wj","hidden","ob","Xj","unstable_observedBits","Zj","pendingChildren","ak","bk","ck","dk","ek","fk","Jc","_internalRoot","gk","ik","hasAttribute","hk","jk","kk","unmount","querySelectorAll","form","Lj","lk","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Yj","overrideHookState","overrideProps","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","bundleType","rendererPackageName","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","MessageChannel","unstable_forceFrameRate","performance","cancelAnimationFrame","requestAnimationFrame","port2","port1","onmessage","postMessage","sortIndex","startTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","skipTempReset","prev","stop","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","superPropBase","_get","property","receiver","desc","isNativeReflectConstruct","possibleConstructorReturn","assertThisInitialized","getUTCDate","getTime","getTimezoneOffset","views","buf","condition1","condition2","bigIntBuffer","bigIntView","bigInt","smallIntBuffer","smallIntView","modValue","tempBuf","inputNumber","fullLength","padding","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"static/js/2.7b155ac9.chunk.js","sourcesContent":["/* eslint-disable indent */\r\n/*\r\n * Copyright (c) 2016-2018, Peculiar Ventures\r\n * All rights reserved.\r\n *\r\n * Author 2016-2018, Yury Strozhevsky <www.strozhevsky.com>.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its contributors\r\n *    may be used to endorse or promote products derived from this software without\r\n *    specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\r\n * OF SUCH DAMAGE.\r\n *\r\n */\r\n//**************************************************************************************\r\nimport { getParametersValue, padNumber, isEqualBuffer, bufferToHexCodes, checkBufferParams, utilToBase, utilFromBase, utilEncodeTC, utilDecodeTC, utilConcatBuf, utilConcatView } from \"pvutils\";\r\n//**************************************************************************************\r\n//region Declaration of global variables\r\n//**************************************************************************************\r\nconst powers2 = [new Uint8Array([1])];\r\nconst digitsString = \"0123456789\";\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration for \"LocalBaseBlock\" class\r\n//**************************************************************************************\r\n/**\r\n * Class used as a base block for all remaining ASN.1 classes\r\n * @typedef LocalBaseBlock\r\n * @interface\r\n * @property {number} blockLength\r\n * @property {string} error\r\n * @property {Array.<string>} warnings\r\n * @property {ArrayBuffer} valueBeforeDecode\r\n */\r\nclass LocalBaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalBaseBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueBeforeDecode]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {number} blockLength\r\n\t\t */\r\n\t\tthis.blockLength = getParametersValue(parameters, \"blockLength\", 0);\r\n\t\t/**\r\n\t\t * @type {string} error\r\n\t\t */\r\n\t\tthis.error = getParametersValue(parameters, \"error\", \"\");\r\n\t\t/**\r\n\t\t * @type {Array.<string>} warnings\r\n\t\t */\r\n\t\tthis.warnings = getParametersValue(parameters, \"warnings\", []);\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer} valueBeforeDecode\r\n\t\t */\r\n\t\tif(\"valueBeforeDecode\" in parameters)\r\n\t\t\tthis.valueBeforeDecode = parameters.valueBeforeDecode.slice(0);\r\n\t\telse\r\n\t\t\tthis.valueBeforeDecode = new ArrayBuffer(0);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"baseBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tblockName: this.constructor.blockName(),\r\n\t\t\tblockLength: this.blockLength,\r\n\t\t\terror: this.error,\r\n\t\t\twarnings: this.warnings,\r\n\t\t\tvalueBeforeDecode: bufferToHexCodes(this.valueBeforeDecode, 0, this.valueBeforeDecode.byteLength)\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Description for \"HexBlock\" class\r\n//**************************************************************************************\r\n/**\r\n * Class used as a base block for all remaining ASN.1 classes\r\n * @extends LocalBaseBlock\r\n * @typedef HexBlock\r\n * @property {number} blockLength\r\n * @property {string} error\r\n * @property {Array.<string>} warnings\r\n * @property {ArrayBuffer} valueBeforeDecode\r\n * @property {boolean} isHexOnly\r\n * @property {ArrayBuffer} valueHex\r\n */\r\n//noinspection JSUnusedLocalSymbols\r\nexport const HexBlock = BaseClass => class LocalHexBlockMixin extends BaseClass\r\n{\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Constructor for \"HexBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.isHexOnly = getParametersValue(parameters, \"isHexOnly\", false);\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t */\r\n\t\tif(\"valueHex\" in parameters)\r\n\t\t\tthis.valueHex = parameters.valueHex.slice(0);\r\n\t\telse\r\n\t\t\tthis.valueHex = new ArrayBuffer(0);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"hexBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\t//region Getting Uint8Array from ArrayBuffer\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\t\t//endregion\r\n\r\n\t\t//region Initial checks\r\n\t\tif(intBuffer.length === 0)\r\n\t\t{\r\n\t\t\tthis.warnings.push(\"Zero buffer length\");\r\n\t\t\treturn inputOffset;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Copy input buffer to internal buffer\r\n\t\tthis.valueHex = inputBuffer.slice(inputOffset, inputOffset + inputLength);\r\n\t\t//endregion\r\n\r\n\t\tthis.blockLength = inputLength;\r\n\r\n\t\treturn (inputOffset + inputLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\tif(this.isHexOnly !== true)\r\n\t\t{\r\n\t\t\tthis.error = \"Flag \\\"isHexOnly\\\" is not set, abort\";\r\n\t\t\treturn new ArrayBuffer(0);\r\n\t\t}\r\n\r\n\t\tif(sizeOnly === true)\r\n\t\t\treturn new ArrayBuffer(this.valueHex.byteLength);\r\n\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\treturn this.valueHex.slice(0);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.blockName = this.constructor.blockName();\r\n\t\tobject.isHexOnly = this.isHexOnly;\r\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n};\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of identification block class\r\n//**************************************************************************************\r\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalBaseBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [idBlock]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif(\"idBlock\" in parameters)\r\n\t\t{\r\n\t\t\t//region Properties from hexBlock class\r\n\t\t\tthis.isHexOnly = getParametersValue(parameters.idBlock, \"isHexOnly\", false);\r\n\t\t\tthis.valueHex = getParametersValue(parameters.idBlock, \"valueHex\", new ArrayBuffer(0));\r\n\t\t\t//endregion\r\n\r\n\t\t\tthis.tagClass = getParametersValue(parameters.idBlock, \"tagClass\", (-1));\r\n\t\t\tthis.tagNumber = getParametersValue(parameters.idBlock, \"tagNumber\", (-1));\r\n\t\t\tthis.isConstructed = getParametersValue(parameters.idBlock, \"isConstructed\", false);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.tagClass = (-1);\r\n\t\t\tthis.tagNumber = (-1);\r\n\t\t\tthis.isConstructed = false;\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"identificationBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet firstOctet = 0;\r\n\t\tlet retBuf;\r\n\t\tlet retView;\r\n\t\t//endregion\r\n\r\n\t\tswitch(this.tagClass)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\tfirstOctet |= 0x00; // UNIVERSAL\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfirstOctet |= 0x40; // APPLICATION\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tfirstOctet |= 0x80; // CONTEXT-SPECIFIC\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tfirstOctet |= 0xC0; // PRIVATE\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.error = \"Unknown tag class\";\r\n\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t}\r\n\r\n\t\tif(this.isConstructed)\r\n\t\t\tfirstOctet |= 0x20;\r\n\r\n\t\tif((this.tagNumber < 31) && (!this.isHexOnly))\r\n\t\t{\r\n\t\t\tretBuf = new ArrayBuffer(1);\r\n\t\t\tretView = new Uint8Array(retBuf);\r\n\r\n\t\t\tif(!sizeOnly)\r\n\t\t\t{\r\n\t\t\t\tlet number = this.tagNumber;\r\n\t\t\t\tnumber &= 0x1F;\r\n\t\t\t\tfirstOctet |= number;\r\n\r\n\t\t\t\tretView[0] = firstOctet;\r\n\t\t\t}\r\n\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\r\n\t\tif(this.isHexOnly === false)\r\n\t\t{\r\n\t\t\tconst encodedBuf = utilToBase(this.tagNumber, 7);\r\n\t\t\tconst encodedView = new Uint8Array(encodedBuf);\r\n\t\t\tconst size = encodedBuf.byteLength;\r\n\r\n\t\t\tretBuf = new ArrayBuffer(size + 1);\r\n\t\t\tretView = new Uint8Array(retBuf);\r\n\t\t\tretView[0] = (firstOctet | 0x1F);\r\n\r\n\t\t\tif(!sizeOnly)\r\n\t\t\t{\r\n\t\t\t\tfor(let i = 0; i < (size - 1); i++)\r\n\t\t\t\t\tretView[i + 1] = encodedView[i] | 0x80;\r\n\r\n\t\t\t\tretView[size] = encodedView[size - 1];\r\n\t\t\t}\r\n\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\r\n\t\tretBuf = new ArrayBuffer(this.valueHex.byteLength + 1);\r\n\t\tretView = new Uint8Array(retBuf);\r\n\r\n\t\tretView[0] = (firstOctet | 0x1F);\r\n\r\n\t\tif(sizeOnly === false)\r\n\t\t{\r\n\t\t\tconst curView = new Uint8Array(this.valueHex);\r\n\r\n\t\t\tfor(let i = 0; i < (curView.length - 1); i++)\r\n\t\t\t\tretView[i + 1] = curView[i] | 0x80;\r\n\r\n\t\t\tretView[this.valueHex.byteLength] = curView[curView.length - 1];\r\n\t\t}\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number}\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\t//region Getting Uint8Array from ArrayBuffer\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\t\t//endregion\r\n\r\n\t\t//region Initial checks\r\n\t\tif(intBuffer.length === 0)\r\n\t\t{\r\n\t\t\tthis.error = \"Zero buffer length\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Find tag class\r\n\t\tconst tagClassMask = intBuffer[0] & 0xC0;\r\n\r\n\t\tswitch(tagClassMask)\r\n\t\t{\r\n\t\t\tcase 0x00:\r\n\t\t\t\tthis.tagClass = (1); // UNIVERSAL\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x40:\r\n\t\t\t\tthis.tagClass = (2); // APPLICATION\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x80:\r\n\t\t\t\tthis.tagClass = (3); // CONTEXT-SPECIFIC\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0xC0:\r\n\t\t\t\tthis.tagClass = (4); // PRIVATE\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.error = \"Unknown tag class\";\r\n\t\t\t\treturn (-1);\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Find it's constructed or not\r\n\t\tthis.isConstructed = (intBuffer[0] & 0x20) === 0x20;\r\n\t\t//endregion\r\n\r\n\t\t//region Find tag number\r\n\t\tthis.isHexOnly = false;\r\n\r\n\t\tconst tagNumberMask = intBuffer[0] & 0x1F;\r\n\r\n\t\t//region Simple case (tag number < 31)\r\n\t\tif(tagNumberMask !== 0x1F)\r\n\t\t{\r\n\t\t\tthis.tagNumber = (tagNumberMask);\r\n\t\t\tthis.blockLength = 1;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region Tag number bigger or equal to 31\r\n\t\telse\r\n\t\t{\r\n\t\t\tlet count = 1;\r\n\r\n\t\t\tthis.valueHex = new ArrayBuffer(255);\r\n\t\t\tlet tagNumberBufferMaxLength = 255;\r\n\t\t\tlet intTagNumberBuffer = new Uint8Array(this.valueHex);\r\n\r\n\t\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\t\twhile(intBuffer[count] & 0x80)\r\n\t\t\t{\r\n\t\t\t\tintTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n\t\t\t\tcount++;\r\n\r\n\t\t\t\tif(count >= intBuffer.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.error = \"End of input reached before message was fully decoded\";\r\n\t\t\t\t\treturn (-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//region In case if tag number length is greater than 255 bytes (rare but possible case)\r\n\t\t\t\tif(count === tagNumberBufferMaxLength)\r\n\t\t\t\t{\r\n\t\t\t\t\ttagNumberBufferMaxLength += 255;\r\n\r\n\t\t\t\t\tconst tempBuffer = new ArrayBuffer(tagNumberBufferMaxLength);\r\n\t\t\t\t\tconst tempBufferView = new Uint8Array(tempBuffer);\r\n\r\n\t\t\t\t\tfor(let i = 0; i < intTagNumberBuffer.length; i++)\r\n\t\t\t\t\t\ttempBufferView[i] = intTagNumberBuffer[i];\r\n\r\n\t\t\t\t\tthis.valueHex = new ArrayBuffer(tagNumberBufferMaxLength);\r\n\t\t\t\t\tintTagNumberBuffer = new Uint8Array(this.valueHex);\r\n\t\t\t\t}\r\n\t\t\t\t//endregion\r\n\t\t\t}\r\n\r\n\t\t\tthis.blockLength = (count + 1);\r\n\t\t\tintTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F; // Write last byte to buffer\r\n\r\n\t\t\t//region Cut buffer\r\n\t\t\tconst tempBuffer = new ArrayBuffer(count);\r\n\t\t\tconst tempBufferView = new Uint8Array(tempBuffer);\r\n\r\n\t\t\tfor(let i = 0; i < count; i++)\r\n\t\t\t\ttempBufferView[i] = intTagNumberBuffer[i];\r\n\r\n\t\t\tthis.valueHex = new ArrayBuffer(count);\r\n\t\t\tintTagNumberBuffer = new Uint8Array(this.valueHex);\r\n\t\t\tintTagNumberBuffer.set(tempBufferView);\r\n\t\t\t//endregion\r\n\r\n\t\t\t//region Try to convert long tag number to short form\r\n\t\t\tif(this.blockLength <= 9)\r\n\t\t\t\tthis.tagNumber = utilFromBase(intTagNumberBuffer, 7);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.isHexOnly = true;\r\n\t\t\t\tthis.warnings.push(\"Tag too long, represented as hex-coded\");\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\r\n\t\t//region Check if constructed encoding was using for primitive type\r\n\t\tif(((this.tagClass === 1)) &&\r\n\t\t\t(this.isConstructed))\r\n\t\t{\r\n\t\t\tswitch(this.tagNumber)\r\n\t\t\t{\r\n\t\t\t\tcase 1:  // Boolean\r\n\t\t\t\tcase 2:  // REAL\r\n\t\t\t\tcase 5:  // Null\r\n\t\t\t\tcase 6:  // OBJECT IDENTIFIER\r\n\t\t\t\tcase 9:  // REAL\r\n\t\t\t\tcase 13: // RELATIVE OBJECT IDENTIFIER\r\n\t\t\t\tcase 14: // Time\r\n\t\t\t\tcase 23:\r\n\t\t\t\tcase 24:\r\n\t\t\t\tcase 31:\r\n\t\t\t\tcase 32:\r\n\t\t\t\tcase 33:\r\n\t\t\t\tcase 34:\r\n\t\t\t\t\tthis.error = \"Constructed encoding used for primitive type\";\r\n\t\t\t\t\treturn (-1);\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\treturn (inputOffset + this.blockLength); // Return current offset in input buffer\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {{blockName: string,\r\n\t *  tagClass: number,\r\n\t *  tagNumber: number,\r\n\t *  isConstructed: boolean,\r\n\t *  isHexOnly: boolean,\r\n\t *  valueHex: ArrayBuffer,\r\n\t *  blockLength: number,\r\n\t *  error: string, warnings: Array.<string>,\r\n\t *  valueBeforeDecode: string}}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.blockName = this.constructor.blockName();\r\n\t\tobject.tagClass = this.tagClass;\r\n\t\tobject.tagNumber = this.tagNumber;\r\n\t\tobject.isConstructed = this.isConstructed;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of length block class\r\n//**************************************************************************************\r\nclass LocalLengthBlock extends LocalBaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalLengthBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [lenBlock]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif(\"lenBlock\" in parameters)\r\n\t\t{\r\n\t\t\tthis.isIndefiniteForm = getParametersValue(parameters.lenBlock, \"isIndefiniteForm\", false);\r\n\t\t\tthis.longFormUsed = getParametersValue(parameters.lenBlock, \"longFormUsed\", false);\r\n\t\t\tthis.length = getParametersValue(parameters.lenBlock, \"length\", 0);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.isIndefiniteForm = false;\r\n\t\t\tthis.longFormUsed = false;\r\n\t\t\tthis.length = 0;\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"lengthBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number}\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\t//region Getting Uint8Array from ArrayBuffer\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\t\t//endregion\r\n\r\n\t\t//region Initial checks\r\n\t\tif(intBuffer.length === 0)\r\n\t\t{\r\n\t\t\tthis.error = \"Zero buffer length\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\r\n\t\tif(intBuffer[0] === 0xFF)\r\n\t\t{\r\n\t\t\tthis.error = \"Length block 0xFF is reserved by standard\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Check for length form type\r\n\t\tthis.isIndefiniteForm = intBuffer[0] === 0x80;\r\n\t\t//endregion\r\n\r\n\t\t//region Stop working in case of indefinite length form\r\n\t\tif(this.isIndefiniteForm === true)\r\n\t\t{\r\n\t\t\tthis.blockLength = 1;\r\n\t\t\treturn (inputOffset + this.blockLength);\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Check is long form of length encoding using\r\n\t\tthis.longFormUsed = !!(intBuffer[0] & 0x80);\r\n\t\t//endregion\r\n\r\n\t\t//region Stop working in case of short form of length value\r\n\t\tif(this.longFormUsed === false)\r\n\t\t{\r\n\t\t\tthis.length = (intBuffer[0]);\r\n\t\t\tthis.blockLength = 1;\r\n\t\t\treturn (inputOffset + this.blockLength);\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Calculate length value in case of long form\r\n\t\tconst count = intBuffer[0] & 0x7F;\r\n\r\n\t\tif(count > 8) // Too big length value\r\n\t\t{\r\n\t\t\tthis.error = \"Too big integer\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\r\n\t\tif((count + 1) > intBuffer.length)\r\n\t\t{\r\n\t\t\tthis.error = \"End of input reached before message was fully decoded\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\r\n\t\tconst lengthBufferView = new Uint8Array(count);\r\n\r\n\t\tfor(let i = 0; i < count; i++)\r\n\t\t\tlengthBufferView[i] = intBuffer[i + 1];\r\n\r\n\t\tif(lengthBufferView[count - 1] === 0x00)\r\n\t\t\tthis.warnings.push(\"Needlessly long encoded length\");\r\n\r\n\t\tthis.length = utilFromBase(lengthBufferView, 8);\r\n\r\n\t\tif(this.longFormUsed && (this.length <= 127))\r\n\t\t\tthis.warnings.push(\"Unneccesary usage of long length form\");\r\n\r\n\t\tthis.blockLength = count + 1;\r\n\t\t//endregion\r\n\r\n\t\treturn (inputOffset + this.blockLength); // Return current offset in input buffer\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet retBuf;\r\n\t\tlet retView;\r\n\t\t//endregion\r\n\r\n\t\tif(this.length > 127)\r\n\t\t\tthis.longFormUsed = true;\r\n\r\n\t\tif(this.isIndefiniteForm)\r\n\t\t{\r\n\t\t\tretBuf = new ArrayBuffer(1);\r\n\r\n\t\t\tif(sizeOnly === false)\r\n\t\t\t{\r\n\t\t\t\tretView = new Uint8Array(retBuf);\r\n\t\t\t\tretView[0] = 0x80;\r\n\t\t\t}\r\n\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\r\n\t\tif(this.longFormUsed === true)\r\n\t\t{\r\n\t\t\tconst encodedBuf = utilToBase(this.length, 8);\r\n\r\n\t\t\tif(encodedBuf.byteLength > 127)\r\n\t\t\t{\r\n\t\t\t\tthis.error = \"Too big length\";\r\n\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t\t}\r\n\r\n\t\t\tretBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\r\n\r\n\t\t\tif(sizeOnly === true)\r\n\t\t\t\treturn retBuf;\r\n\r\n\t\t\tconst encodedView = new Uint8Array(encodedBuf);\r\n\t\t\tretView = new Uint8Array(retBuf);\r\n\r\n\t\t\tretView[0] = encodedBuf.byteLength | 0x80;\r\n\r\n\t\t\tfor(let i = 0; i < encodedBuf.byteLength; i++)\r\n\t\t\t\tretView[i + 1] = encodedView[i];\r\n\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\r\n\t\tretBuf = new ArrayBuffer(1);\r\n\r\n\t\tif(sizeOnly === false)\r\n\t\t{\r\n\t\t\tretView = new Uint8Array(retBuf);\r\n\r\n\t\t\tretView[0] = this.length;\r\n\t\t}\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.blockName = this.constructor.blockName();\r\n\t\tobject.isIndefiniteForm = this.isIndefiniteForm;\r\n\t\tobject.longFormUsed = this.longFormUsed;\r\n\t\tobject.length = this.length;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of value block class\r\n//**************************************************************************************\r\nexport class ValueBlock extends LocalBaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"ValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"valueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedLocalSymbols,JSUnusedLocalSymbols,JSUnusedLocalSymbols\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number}\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Throw an exception for a function which needs to be specified in extended classes\r\n\t\tthrow TypeError(\"User need to make a specific function in a class which extends \\\"ValueBlock\\\"\");\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedLocalSymbols\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\t//region Throw an exception for a function which needs to be specified in extended classes\r\n\t\tthrow TypeError(\"User need to make a specific function in a class which extends \\\"ValueBlock\\\"\");\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of basic ASN.1 block class\r\n//**************************************************************************************\r\nexport class BaseBlock extends LocalBaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"BaseBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [primitiveSchema]\r\n\t * @property {string} [name]\r\n\t * @property {boolean} [optional]\r\n\t * @param valueBlockType Type of value block\r\n\t */\r\n\tconstructor(parameters = {}, valueBlockType = ValueBlock)\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tif(\"name\" in parameters)\r\n\t\t\tthis.name = parameters.name;\r\n\t\tif(\"optional\" in parameters)\r\n\t\t\tthis.optional = parameters.optional;\r\n\t\tif(\"primitiveSchema\" in parameters)\r\n\t\t\tthis.primitiveSchema = parameters.primitiveSchema;\r\n\r\n\t\tthis.idBlock = new LocalIdentificationBlock(parameters);\r\n\t\tthis.lenBlock = new LocalLengthBlock(parameters);\r\n\t\tthis.valueBlock = new valueBlockType(parameters);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"BaseBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number}\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\r\n\t\tif(resultOffset === (-1))\r\n\t\t{\r\n\t\t\tthis.error = this.valueBlock.error;\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\tif(this.valueBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\tlet retBuf;\r\n\r\n\t\tconst idBlockBuf = this.idBlock.toBER(sizeOnly);\r\n\t\tconst valueBlockSizeBuf = this.valueBlock.toBER(true);\r\n\r\n\t\tthis.lenBlock.length = valueBlockSizeBuf.byteLength;\r\n\t\tconst lenBlockBuf = this.lenBlock.toBER(sizeOnly);\r\n\r\n\t\tretBuf = utilConcatBuf(idBlockBuf, lenBlockBuf);\r\n\r\n\t\tlet valueBlockBuf;\r\n\r\n\t\tif(sizeOnly === false)\r\n\t\t\tvalueBlockBuf = this.valueBlock.toBER(sizeOnly);\r\n\t\telse\r\n\t\t\tvalueBlockBuf = new ArrayBuffer(this.lenBlock.length);\r\n\r\n\t\tretBuf = utilConcatBuf(retBuf, valueBlockBuf);\r\n\r\n\t\tif(this.lenBlock.isIndefiniteForm === true)\r\n\t\t{\r\n\t\t\tconst indefBuf = new ArrayBuffer(2);\r\n\r\n\t\t\tif(sizeOnly === false)\r\n\t\t\t{\r\n\t\t\t\tconst indefView = new Uint8Array(indefBuf);\r\n\r\n\t\t\t\tindefView[0] = 0x00;\r\n\t\t\t\tindefView[1] = 0x00;\r\n\t\t\t}\r\n\r\n\t\t\tretBuf = utilConcatBuf(retBuf, indefBuf);\r\n\t\t}\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.idBlock = this.idBlock.toJSON();\r\n\t\tobject.lenBlock = this.lenBlock.toJSON();\r\n\t\tobject.valueBlock = this.valueBlock.toJSON();\r\n\r\n\t\tif(\"name\" in this)\r\n\t\t\tobject.name = this.name;\r\n\t\tif(\"optional\" in this)\r\n\t\t\tobject.optional = this.optional;\r\n\t\tif(\"primitiveSchema\" in this)\r\n\t\t\tobject.primitiveSchema = this.primitiveSchema.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of basic block for all PRIMITIVE types\r\n//**************************************************************************************\r\nclass LocalPrimitiveValueBlock extends ValueBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalPrimitiveValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueBeforeDecode]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\t//region Variables from \"hexBlock\" class\r\n\t\tif(\"valueHex\" in parameters)\r\n\t\t\tthis.valueHex = parameters.valueHex.slice(0);\r\n\t\telse\r\n\t\t\tthis.valueHex = new ArrayBuffer(0);\r\n\r\n\t\tthis.isHexOnly = getParametersValue(parameters, \"isHexOnly\", true);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number}\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\t//region Getting Uint8Array from ArrayBuffer\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\t\t//endregion\r\n\r\n\t\t//region Initial checks\r\n\t\tif(intBuffer.length === 0)\r\n\t\t{\r\n\t\t\tthis.warnings.push(\"Zero buffer length\");\r\n\t\t\treturn inputOffset;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Copy input buffer into internal buffer\r\n\t\tthis.valueHex = new ArrayBuffer(intBuffer.length);\r\n\t\tconst valueHexView = new Uint8Array(this.valueHex);\r\n\r\n\t\tfor(let i = 0; i < intBuffer.length; i++)\r\n\t\t\tvalueHexView[i] = intBuffer[i];\r\n\t\t//endregion\r\n\r\n\t\tthis.blockLength = inputLength;\r\n\r\n\t\treturn (inputOffset + inputLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedLocalSymbols\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\treturn this.valueHex.slice(0);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"PrimitiveValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\r\n\t\tobject.isHexOnly = this.isHexOnly;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class Primitive extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Primitive\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalPrimitiveValueBlock);\r\n\r\n\t\tthis.idBlock.isConstructed = false;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"PRIMITIVE\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of basic block for all CONSTRUCTED types\r\n//**************************************************************************************\r\nclass LocalConstructedValueBlock extends ValueBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalConstructedValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.value = getParametersValue(parameters, \"value\", []);\r\n\t\tthis.isIndefiniteForm = getParametersValue(parameters, \"isIndefiniteForm\", false);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number}\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Store initial offset and length\r\n\t\tconst initialOffset = inputOffset;\r\n\t\tconst initialLength = inputLength;\r\n\t\t//endregion\r\n\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\t//region Getting Uint8Array from ArrayBuffer\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\t\t//endregion\r\n\r\n\t\t//region Initial checks\r\n\t\tif(intBuffer.length === 0)\r\n\t\t{\r\n\t\t\tthis.warnings.push(\"Zero buffer length\");\r\n\t\t\treturn inputOffset;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Aux function\r\n\t\tfunction checkLen(indefiniteLength, length)\r\n\t\t{\r\n\t\t\tif(indefiniteLength === true)\r\n\t\t\t\treturn 1;\r\n\r\n\t\t\treturn length;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\tlet currentOffset = inputOffset;\r\n\r\n\t\twhile(checkLen(this.isIndefiniteForm, inputLength) > 0)\r\n\t\t{\r\n\t\t\tconst returnObject = LocalFromBER(inputBuffer, currentOffset, inputLength);\r\n\t\t\tif(returnObject.offset === (-1))\r\n\t\t\t{\r\n\t\t\t\tthis.error = returnObject.result.error;\r\n\t\t\t\tthis.warnings.concat(returnObject.result.warnings);\r\n\t\t\t\treturn (-1);\r\n\t\t\t}\r\n\r\n\t\t\tcurrentOffset = returnObject.offset;\r\n\r\n\t\t\tthis.blockLength += returnObject.result.blockLength;\r\n\t\t\tinputLength -= returnObject.result.blockLength;\r\n\r\n\t\t\tthis.value.push(returnObject.result);\r\n\r\n\t\t\tif((this.isIndefiniteForm === true) && (returnObject.result.constructor.blockName() === EndOfContent.blockName()))\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(this.isIndefiniteForm === true)\r\n\t\t{\r\n\t\t\tif(this.value[this.value.length - 1].constructor.blockName() === EndOfContent.blockName())\r\n\t\t\t\tthis.value.pop();\r\n\t\t\telse\r\n\t\t\t\tthis.warnings.push(\"No EndOfContent block encoded\");\r\n\t\t}\r\n\r\n\t\t//region Copy \"inputBuffer\" to \"valueBeforeDecode\"\r\n\t\tthis.valueBeforeDecode = inputBuffer.slice(initialOffset, initialOffset + initialLength);\r\n\t\t//endregion\r\n\r\n\t\treturn currentOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\tlet retBuf = new ArrayBuffer(0);\r\n\r\n\t\tfor(let i = 0; i < this.value.length; i++)\r\n\t\t{\r\n\t\t\tconst valueBuf = this.value[i].toBER(sizeOnly);\r\n\t\t\tretBuf = utilConcatBuf(retBuf, valueBuf);\r\n\t\t}\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"ConstructedValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.isIndefiniteForm = this.isIndefiniteForm;\r\n\t\tobject.value = [];\r\n\t\tfor(let i = 0; i < this.value.length; i++)\r\n\t\t\tobject.value.push(this.value[i].toJSON());\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class Constructed extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Constructed\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalConstructedValueBlock);\r\n\r\n\t\tthis.idBlock.isConstructed = true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"CONSTRUCTED\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number}\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tthis.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n\r\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\r\n\t\tif(resultOffset === (-1))\r\n\t\t{\r\n\t\t\tthis.error = this.valueBlock.error;\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\tif(this.valueBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 EndOfContent type class\r\n//**************************************************************************************\r\nclass LocalEndOfContentValueBlock extends ValueBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalEndOfContentValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedLocalSymbols,JSUnusedLocalSymbols\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number}\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region There is no \"value block\" for EndOfContent type and we need to return the same offset\r\n\t\treturn inputOffset;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedLocalSymbols\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\treturn new ArrayBuffer(0);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"EndOfContentValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class EndOfContent extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\tconstructor(paramaters = {})\r\n\t{\r\n\t\tsuper(paramaters, LocalEndOfContentValueBlock);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 0; // EndOfContent\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"EndOfContent\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 Boolean type class\r\n//**************************************************************************************\r\nclass LocalBooleanValueBlock extends ValueBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalBooleanValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\t\t\r\n\t\tthis.value = getParametersValue(parameters, \"value\", false);\r\n\t\tthis.isHexOnly = getParametersValue(parameters, \"isHexOnly\", false);\r\n\t\t\r\n\t\tif(\"valueHex\" in parameters)\r\n\t\t\tthis.valueHex = parameters.valueHex.slice(0);\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.valueHex = new ArrayBuffer(1);\r\n\t\t\tif(this.value === true)\r\n\t\t\t{\r\n\t\t\t\tconst view = new Uint8Array(this.valueHex);\r\n\t\t\t\tview[0] = 0xFF;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\t//region Getting Uint8Array from ArrayBuffer\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\t\t//endregion\r\n\r\n\t\tif(inputLength > 1)\r\n\t\t\tthis.warnings.push(\"Boolean value encoded in more then 1 octet\");\r\n\r\n\t\tthis.isHexOnly = true;\r\n\r\n\t\t//region Copy input buffer to internal array\r\n\t\tthis.valueHex = new ArrayBuffer(intBuffer.length);\r\n\t\tconst view = new Uint8Array(this.valueHex);\r\n\r\n\t\tfor(let i = 0; i < intBuffer.length; i++)\r\n\t\t\tview[i] = intBuffer[i];\r\n\t\t//endregion\r\n\t\t\r\n\t\tif(utilDecodeTC.call(this) !== 0 )\r\n\t\t\tthis.value = true;\r\n\t\telse\r\n\t\t\tthis.value = false;\r\n\r\n\t\tthis.blockLength = inputLength;\r\n\r\n\t\treturn (inputOffset + inputLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedLocalSymbols\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\treturn this.valueHex;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"BooleanValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.value = this.value;\r\n\t\tobject.isHexOnly = this.isHexOnly;\r\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class Boolean extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Boolean\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalBooleanValueBlock);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 1; // Boolean\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Boolean\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 Sequence and Set type classes\r\n//**************************************************************************************\r\nexport class Sequence extends Constructed\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Sequence\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 16; // Sequence\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Sequence\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class Set extends Constructed\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Set\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 17; // Set\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Set\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 Null type class\r\n//**************************************************************************************\r\nexport class Null extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Null\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalBaseBlock); // We will not have a call to \"Null value block\" because of specified \"fromBER\" and \"toBER\" functions\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 5; // Null\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Null\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedLocalSymbols\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tif(this.lenBlock.length > 0)\r\n\t\t\tthis.warnings.push(\"Non-zero length of value block for Null type\");\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\t\t\r\n\t\tthis.blockLength += inputLength;\r\n\t\t\r\n\t\tif((inputOffset + inputLength) > inputBuffer.byteLength)\r\n\t\t{\r\n\t\t\tthis.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\t\t\r\n\t\treturn (inputOffset + inputLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\tconst retBuf = new ArrayBuffer(2);\r\n\r\n\t\tif(sizeOnly === true)\r\n\t\t\treturn retBuf;\r\n\r\n\t\tconst retView = new Uint8Array(retBuf);\r\n\t\tretView[0] = 0x05;\r\n\t\tretView[1] = 0x00;\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 OctetString type class\r\n//**************************************************************************************\r\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalOctetStringValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.isConstructed = getParametersValue(parameters, \"isConstructed\", false);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tlet resultOffset = 0;\r\n\r\n\t\tif(this.isConstructed === true)\r\n\t\t{\r\n\t\t\tthis.isHexOnly = false;\r\n\r\n\t\t\tresultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n\t\t\tif(resultOffset === (-1))\r\n\t\t\t\treturn resultOffset;\r\n\r\n\t\t\tfor(let i = 0; i < this.value.length; i++)\r\n\t\t\t{\r\n\t\t\t\tconst currentBlockName = this.value[i].constructor.blockName();\r\n\r\n\t\t\t\tif(currentBlockName === EndOfContent.blockName())\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.isIndefiniteForm === true)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\r\n\t\t\t\t\t\treturn (-1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentBlockName !== OctetString.blockName())\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.error = \"OCTET STRING may consists of OCTET STRINGs only\";\r\n\t\t\t\t\treturn (-1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.isHexOnly = true;\r\n\r\n\t\t\tresultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n\t\t\tthis.blockLength = inputLength;\r\n\t\t}\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\tif(this.isConstructed === true)\r\n\t\t\treturn LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly);\r\n\r\n\t\tlet retBuf = new ArrayBuffer(this.valueHex.byteLength);\r\n\r\n\t\tif(sizeOnly === true)\r\n\t\t\treturn retBuf;\r\n\r\n\t\tif(this.valueHex.byteLength === 0)\r\n\t\t\treturn retBuf;\r\n\r\n\t\tretBuf = this.valueHex.slice(0);\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"OctetStringValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.isConstructed = this.isConstructed;\r\n\t\tobject.isHexOnly = this.isHexOnly;\r\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class OctetString extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"OctetString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalOctetStringValueBlock);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 4; // OctetString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tthis.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n\t\tthis.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n\r\n\t\t//region Ability to encode empty OCTET STRING\r\n\t\tif(inputLength === 0)\r\n\t\t{\r\n\t\t\tif(this.idBlock.error.length === 0)\r\n\t\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\t\treturn inputOffset;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\treturn super.fromBER(inputBuffer, inputOffset, inputLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"OctetString\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Checking that two OCTETSTRINGs are equal\r\n\t * @param {OctetString} octetString\r\n\t */\r\n\tisEqual(octetString)\r\n\t{\r\n\t\t//region Check input type\r\n\t\tif((octetString instanceof OctetString) === false)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\r\n\t\t//region Compare two JSON strings\r\n\t\tif(JSON.stringify(this) !== JSON.stringify(octetString))\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 BitString type class\r\n//**************************************************************************************\r\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalBitStringValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.unusedBits = getParametersValue(parameters, \"unusedBits\", 0);\r\n\t\tthis.isConstructed = getParametersValue(parameters, \"isConstructed\", false);\r\n\t\tthis.blockLength = this.valueHex.byteLength;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Ability to decode zero-length BitString value\r\n\t\tif(inputLength === 0)\r\n\t\t\treturn inputOffset;\r\n\t\t//endregion\r\n\r\n\t\tlet resultOffset = (-1);\r\n\r\n\t\t//region If the BISTRING supposed to be a constructed value\r\n\t\tif(this.isConstructed === true)\r\n\t\t{\r\n\t\t\tresultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n\t\t\tif(resultOffset === (-1))\r\n\t\t\t\treturn resultOffset;\r\n\r\n\t\t\tfor(let i = 0; i < this.value.length; i++)\r\n\t\t\t{\r\n\t\t\t\tconst currentBlockName = this.value[i].constructor.blockName();\r\n\r\n\t\t\t\tif(currentBlockName === EndOfContent.blockName())\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.isIndefiniteForm === true)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\r\n\t\t\t\t\t\treturn (-1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentBlockName !== BitString.blockName())\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.error = \"BIT STRING may consists of BIT STRINGs only\";\r\n\t\t\t\t\treturn (-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif((this.unusedBits > 0) && (this.value[i].valueBlock.unusedBits > 0))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.error = \"Usign of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\r\n\t\t\t\t\treturn (-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.unusedBits = this.value[i].valueBlock.unusedBits;\r\n\t\t\t\tif(this.unusedBits > 7)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.error = \"Unused bits for BitString must be in range 0-7\";\r\n\t\t\t\t\treturn (-1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region If the BitString supposed to be a primitive value\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\r\n\t\tthis.unusedBits = intBuffer[0];\r\n\t\t\r\n\t\tif(this.unusedBits > 7)\r\n\t\t{\r\n\t\t\tthis.error = \"Unused bits for BitString must be in range 0-7\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\r\n\t\t//region Copy input buffer to internal buffer\r\n\t\tthis.valueHex = new ArrayBuffer(intBuffer.length - 1);\r\n\t\tconst view = new Uint8Array(this.valueHex);\r\n\t\tfor(let i = 0; i < (inputLength - 1); i++)\r\n\t\t\tview[i] = intBuffer[i + 1];\r\n\t\t//endregion\r\n\r\n\t\tthis.blockLength = intBuffer.length;\r\n\r\n\t\treturn (inputOffset + inputLength);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\tif(this.isConstructed === true)\r\n\t\t\treturn LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly);\r\n\r\n\t\tif(sizeOnly === true)\r\n\t\t\treturn (new ArrayBuffer(this.valueHex.byteLength + 1));\r\n\r\n\t\tif(this.valueHex.byteLength === 0)\r\n\t\t\treturn (new ArrayBuffer(0));\r\n\r\n\t\tconst curView = new Uint8Array(this.valueHex);\r\n\r\n\t\tconst retBuf = new ArrayBuffer(this.valueHex.byteLength + 1);\r\n\t\tconst retView = new Uint8Array(retBuf);\r\n\r\n\t\tretView[0] = this.unusedBits;\r\n\r\n\t\tfor(let i = 0; i < this.valueHex.byteLength; i++)\r\n\t\t\tretView[i + 1] = curView[i];\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"BitStringValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.unusedBits = this.unusedBits;\r\n\t\tobject.isConstructed = this.isConstructed;\r\n\t\tobject.isHexOnly = this.isHexOnly;\r\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class BitString extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"BitString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalBitStringValueBlock);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 3; // BitString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"BitString\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\t//region Ability to encode empty BitString\r\n\t\tif(inputLength === 0)\r\n\t\t\treturn inputOffset;\r\n\t\t//endregion\r\n\r\n\t\tthis.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n\t\tthis.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n\r\n\t\treturn super.fromBER(inputBuffer, inputOffset, inputLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Checking that two BITSTRINGs are equal\r\n\t * @param {BitString} bitString\r\n\t */\r\n\tisEqual(bitString)\r\n\t{\r\n\t\t//region Check input type\r\n\t\tif((bitString instanceof BitString) === false)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\r\n\t\t//region Compare two JSON strings\r\n\t\tif(JSON.stringify(this) !== JSON.stringify(bitString))\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 Integer type class\r\n//**************************************************************************************\r\n/**\r\n * @extends ValueBlock\r\n */\r\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalIntegerValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\tthis.valueDec = parameters.value;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"valueHex\"\r\n\t * @param {ArrayBuffer} _value\r\n\t */\r\n\tset valueHex(_value)\r\n\t{\r\n\t\tthis._valueHex = _value.slice(0);\r\n\r\n\t\tif(_value.byteLength >= 4)\r\n\t\t{\r\n\t\t\tthis.warnings.push(\"Too big Integer for decoding, hex only\");\r\n\t\t\tthis.isHexOnly = true;\r\n\t\t\tthis._valueDec = 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.isHexOnly = false;\r\n\r\n\t\t\tif(_value.byteLength > 0)\r\n\t\t\t\tthis._valueDec = utilDecodeTC.call(this);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"valueHex\"\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\tget valueHex()\r\n\t{\r\n\t\treturn this._valueHex;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"valueDec\"\r\n\t * @param {number} _value\r\n\t */\r\n\tset valueDec(_value)\r\n\t{\r\n\t\tthis._valueDec = _value;\r\n\r\n\t\tthis.isHexOnly = false;\r\n\t\tthis._valueHex = utilEncodeTC(_value);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"valueDec\"\r\n\t * @returns {number}\r\n\t */\r\n\tget valueDec()\r\n\t{\r\n\t\treturn this._valueDec;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from DER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 DER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 DER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @param {number} [expectedLength=0] Expected length of converted \"valueHex\" buffer\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0)\r\n\t{\r\n\t\tconst offset = this.fromBER(inputBuffer, inputOffset, inputLength);\r\n\t\tif(offset === (-1))\r\n\t\t\treturn offset;\r\n\r\n\t\tconst view = new Uint8Array(this._valueHex);\r\n\r\n\t\tif((view[0] === 0x00) && ((view[1] & 0x80) !== 0))\r\n\t\t{\r\n\t\t\tconst updatedValueHex = new ArrayBuffer(this._valueHex.byteLength - 1);\r\n\t\t\tconst updatedView = new Uint8Array(updatedValueHex);\r\n\r\n\t\t\tupdatedView.set(new Uint8Array(this._valueHex, 1, this._valueHex.byteLength - 1));\r\n\r\n\t\t\tthis._valueHex = updatedValueHex.slice(0);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(expectedLength !== 0)\r\n\t\t\t{\r\n\t\t\t\tif(this._valueHex.byteLength < expectedLength)\r\n\t\t\t\t{\r\n\t\t\t\t\tif((expectedLength - this._valueHex.byteLength) > 1)\r\n\t\t\t\t\t\texpectedLength = this._valueHex.byteLength + 1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst updatedValueHex = new ArrayBuffer(expectedLength);\r\n\t\t\t\t\tconst updatedView = new Uint8Array(updatedValueHex);\r\n\r\n\t\t\t\t\tupdatedView.set(view, expectedLength - this._valueHex.byteLength);\r\n\r\n\t\t\t\t\tthis._valueHex = updatedValueHex.slice(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn offset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (DER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoDER(sizeOnly = false)\r\n\t{\r\n\t\tconst view = new Uint8Array(this._valueHex);\r\n\r\n\t\tswitch(true)\r\n\t\t{\r\n\t\t\tcase ((view[0] & 0x80) !== 0):\r\n\t\t\t\t{\r\n\t\t\t\t\tconst updatedValueHex = new ArrayBuffer(this._valueHex.byteLength + 1);\r\n\t\t\t\t\tconst updatedView = new Uint8Array(updatedValueHex);\r\n\r\n\t\t\t\t\tupdatedView[0] = 0x00;\r\n\t\t\t\t\tupdatedView.set(view, 1);\r\n\r\n\t\t\t\t\tthis._valueHex = updatedValueHex.slice(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\r\n\t\t\t\t{\r\n\t\t\t\t\tconst updatedValueHex = new ArrayBuffer(this._valueHex.byteLength - 1);\r\n\t\t\t\t\tconst updatedView = new Uint8Array(updatedValueHex);\r\n\r\n\t\t\t\t\tupdatedView.set(new Uint8Array(this._valueHex, 1, this._valueHex.byteLength - 1));\r\n\r\n\t\t\t\t\tthis._valueHex = updatedValueHex.slice(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\r\n\t\treturn this.toBER(sizeOnly);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tconst resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n\t\tif(resultOffset === (-1))\r\n\t\t\treturn resultOffset;\r\n\r\n\t\tthis.blockLength = inputLength;\r\n\r\n\t\treturn (inputOffset + inputLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\treturn this.valueHex.slice(0);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"IntegerValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.valueDec = this.valueDec;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current value to decimal string representation\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\t//region Aux functions\r\n\t\tfunction viewAdd(first, second)\r\n\t\t{\r\n\t\t\t//region Initial variables\r\n\t\t\tconst c = new Uint8Array([0]);\r\n\t\t\t\r\n\t\t\tlet firstView = new Uint8Array(first);\r\n\t\t\tlet secondView = new Uint8Array(second);\r\n\t\t\t\r\n\t\t\tlet firstViewCopy = firstView.slice(0);\r\n\t\t\tconst firstViewCopyLength = firstViewCopy.length - 1;\r\n\t\t\tlet secondViewCopy = secondView.slice(0);\r\n\t\t\tconst secondViewCopyLength = secondViewCopy.length - 1;\r\n\t\t\t\r\n\t\t\tlet value = 0;\r\n\t\t\t\r\n\t\t\tconst max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\r\n\t\t\t\r\n\t\t\tlet counter = 0;\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\tfor(let i = max; i >= 0; i--, counter++)\r\n\t\t\t{\r\n\t\t\t\tswitch(true)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase (counter < secondViewCopy.length):\r\n\t\t\t\t\t\tvalue = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvalue = firstViewCopy[firstViewCopyLength - counter] + c[0];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tc[0] = value / 10;\r\n\t\t\t\t\r\n\t\t\t\tswitch(true)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase (counter >= firstViewCopy.length):\r\n\t\t\t\t\t\tfirstViewCopy = utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value % 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(c[0] > 0)\r\n\t\t\t\tfirstViewCopy = utilConcatView(c, firstViewCopy);\r\n\t\t\t\r\n\t\t\treturn firstViewCopy.slice(0);\r\n\t\t}\r\n\t\t\r\n\t\tfunction power2(n)\r\n\t\t{\r\n\t\t\tif(n >= powers2.length)\r\n\t\t\t{\r\n\t\t\t\tfor(let p = powers2.length; p <= n; p++)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst c = new Uint8Array([0]);\r\n\t\t\t\t\tlet digits = (powers2[p - 1]).slice(0);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(let i = (digits.length - 1); i >=0; i--)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\r\n\t\t\t\t\t\tc[0] = newValue[0] / 10;\r\n\t\t\t\t\t\tdigits[i] = newValue[0] % 10;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (c[0] > 0)\r\n\t\t\t\t\t\tdigits = utilConcatView(c, digits);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpowers2.push(digits);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn powers2[n];\r\n\t\t}\r\n\t\t\r\n\t\tfunction viewSub(first, second)\r\n\t\t{\r\n\t\t\t//region Initial variables\r\n\t\t\tlet b = 0;\r\n\t\t\t\r\n\t\t\tlet firstView = new Uint8Array(first);\r\n\t\t\tlet secondView = new Uint8Array(second);\r\n\t\t\t\r\n\t\t\tlet firstViewCopy = firstView.slice(0);\r\n\t\t\tconst firstViewCopyLength = firstViewCopy.length - 1;\r\n\t\t\tlet secondViewCopy = secondView.slice(0);\r\n\t\t\tconst secondViewCopyLength = secondViewCopy.length - 1;\r\n\t\t\t\r\n\t\t\tlet value;\r\n\t\t\t\r\n\t\t\tlet counter = 0;\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\tfor(let i = secondViewCopyLength; i >= 0; i--, counter++)\r\n\t\t\t{\r\n\t\t\t\tvalue = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\r\n\t\t\t\t\r\n\t\t\t\tswitch(true)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase (value < 0):\r\n\t\t\t\t\t\tb = 1;\r\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tb = 0;\r\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(b > 0)\r\n\t\t\t{\r\n\t\t\t\tfor(let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue = firstViewCopy[firstViewCopyLength - counter] - b;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(value < 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tb = 1;\r\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tb = 0;\r\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn firstViewCopy.slice();\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tconst firstBit = (this._valueHex.byteLength * 8) - 1;\r\n\t\t\r\n\t\tlet digits = new Uint8Array((this._valueHex.byteLength * 8) / 3);\r\n\t\tlet bitNumber = 0;\r\n\t\tlet currentByte;\r\n\t\t\r\n\t\tconst asn1View = new Uint8Array(this._valueHex);\r\n\t\t\r\n\t\tlet result = \"\";\r\n\t\t\r\n\t\tlet flag = false;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Calculate number\r\n\t\tfor(let byteNumber = (this._valueHex.byteLength - 1); byteNumber >= 0; byteNumber--)\r\n\t\t{\r\n\t\t\tcurrentByte = asn1View[byteNumber];\r\n\t\t\t\r\n\t\t\tfor(let i = 0; i < 8; i++)\r\n\t\t\t{\r\n\t\t\t\tif((currentByte & 1) === 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tswitch(bitNumber)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase firstBit:\r\n\t\t\t\t\t\t\tdigits = viewSub(power2(bitNumber), digits);\r\n\t\t\t\t\t\t\tresult = \"-\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tdigits = viewAdd(digits, power2(bitNumber));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbitNumber++;\r\n\t\t\t\tcurrentByte >>= 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Print number\r\n\t\tfor(let i = 0; i < digits.length; i++)\r\n\t\t{\r\n\t\t\tif(digits[i])\r\n\t\t\t\tflag = true;\r\n\t\t\t\r\n\t\t\tif(flag)\r\n\t\t\t\tresult += digitsString.charAt(digits[i]);\r\n\t\t}\r\n\t\t\r\n\t\tif(flag === false)\r\n\t\t\tresult += digitsString.charAt(0);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class Integer extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Integer\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalIntegerValueBlock);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 2; // Integer\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Integer\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Compare two Integer object, or Integer and ArrayBuffer objects\r\n\t * @param {!Integer|ArrayBuffer} otherValue\r\n\t * @returns {boolean}\r\n\t */\r\n\tisEqual(otherValue)\r\n\t{\r\n\t\tif(otherValue instanceof Integer)\r\n\t\t{\r\n\t\t\tif(this.valueBlock.isHexOnly && otherValue.valueBlock.isHexOnly) // Compare two ArrayBuffers\r\n\t\t\t\treturn isEqualBuffer(this.valueBlock.valueHex, otherValue.valueBlock.valueHex);\r\n\r\n\t\t\tif(this.valueBlock.isHexOnly === otherValue.valueBlock.isHexOnly)\r\n\t\t\t\treturn (this.valueBlock.valueDec === otherValue.valueBlock.valueDec);\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif(otherValue instanceof ArrayBuffer)\r\n\t\t\treturn isEqualBuffer(this.valueBlock.valueHex, otherValue);\r\n\r\n\t\treturn false;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current Integer value from BER into DER format\r\n\t * @returns {Integer}\r\n\t */\r\n\tconvertToDER()\r\n\t{\r\n\t\tconst integer = new Integer({ valueHex: this.valueBlock.valueHex });\r\n\t\tinteger.valueBlock.toDER();\r\n\r\n\t\treturn integer;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current Integer value from DER to BER format\r\n\t * @returns {Integer}\r\n\t */\r\n\tconvertFromDER()\r\n\t{\r\n\t\tconst expectedLength = (this.valueBlock.valueHex.byteLength % 2) ? (this.valueBlock.valueHex.byteLength + 1) : this.valueBlock.valueHex.byteLength;\r\n\t\tconst integer = new Integer({ valueHex: this.valueBlock.valueHex });\r\n\t\tinteger.valueBlock.fromDER(integer.valueBlock.valueHex, 0, integer.valueBlock.valueHex.byteLength, expectedLength);\r\n\t\t\r\n\t\treturn integer;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 Enumerated type class\r\n//**************************************************************************************\r\nexport class Enumerated extends Integer\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Enumerated\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 10; // Enumerated\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Enumerated\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 ObjectIdentifier type class\r\n//**************************************************************************************\r\nclass LocalSidValueBlock extends HexBlock(LocalBaseBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalSidValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {number} [valueDec]\r\n\t * @property {boolean} [isFirstSid]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.valueDec = getParametersValue(parameters, \"valueDec\", -1);\r\n\t\tthis.isFirstSid = getParametersValue(parameters, \"isFirstSid\", false);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"sidBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tif(inputLength === 0)\r\n\t\t\treturn inputOffset;\r\n\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\r\n\t\tthis.valueHex = new ArrayBuffer(inputLength);\r\n\t\tlet view = new Uint8Array(this.valueHex);\r\n\r\n\t\tfor(let i = 0; i < inputLength; i++)\r\n\t\t{\r\n\t\t\tview[i] = intBuffer[i] & 0x7F;\r\n\r\n\t\t\tthis.blockLength++;\r\n\r\n\t\t\tif((intBuffer[i] & 0x80) === 0x00)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//region Ajust size of valueHex buffer\r\n\t\tconst tempValueHex = new ArrayBuffer(this.blockLength);\r\n\t\tconst tempView = new Uint8Array(tempValueHex);\r\n\r\n\t\tfor(let i = 0; i < this.blockLength; i++)\r\n\t\t\ttempView[i] = view[i];\r\n\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tthis.valueHex = tempValueHex.slice(0);\r\n\t\tview = new Uint8Array(this.valueHex);\r\n\t\t//endregion\r\n\r\n\t\tif((intBuffer[this.blockLength - 1] & 0x80) !== 0x00)\r\n\t\t{\r\n\t\t\tthis.error = \"End of input reached before message was fully decoded\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\r\n\t\tif(view[0] === 0x00)\r\n\t\t\tthis.warnings.push(\"Needlessly long format of SID encoding\");\r\n\r\n\t\tif(this.blockLength <= 8)\r\n\t\t\tthis.valueDec = utilFromBase(view, 7);\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.isHexOnly = true;\r\n\t\t\tthis.warnings.push(\"Too big SID for decoding, hex only\");\r\n\t\t}\r\n\r\n\t\treturn (inputOffset + this.blockLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet retBuf;\r\n\t\tlet retView;\r\n\t\t//endregion\r\n\r\n\t\tif(this.isHexOnly)\r\n\t\t{\r\n\t\t\tif(sizeOnly === true)\r\n\t\t\t\treturn (new ArrayBuffer(this.valueHex.byteLength));\r\n\r\n\t\t\tconst curView = new Uint8Array(this.valueHex);\r\n\r\n\t\t\tretBuf = new ArrayBuffer(this.blockLength);\r\n\t\t\tretView = new Uint8Array(retBuf);\r\n\r\n\t\t\tfor(let i = 0; i < (this.blockLength - 1); i++)\r\n\t\t\t\tretView[i] = curView[i] | 0x80;\r\n\r\n\t\t\tretView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\r\n\t\tconst encodedBuf = utilToBase(this.valueDec, 7);\r\n\t\tif(encodedBuf.byteLength === 0)\r\n\t\t{\r\n\t\t\tthis.error = \"Error during encoding SID value\";\r\n\t\t\treturn (new ArrayBuffer(0));\r\n\t\t}\r\n\r\n\t\tretBuf = new ArrayBuffer(encodedBuf.byteLength);\r\n\r\n\t\tif(sizeOnly === false)\r\n\t\t{\r\n\t\t\tconst encodedView = new Uint8Array(encodedBuf);\r\n\t\t\tretView = new Uint8Array(retBuf);\r\n\r\n\t\t\tfor(let i = 0; i < (encodedBuf.byteLength - 1); i++)\r\n\t\t\t\tretView[i] = encodedView[i] | 0x80;\r\n\r\n\t\t\tretView[encodedBuf.byteLength - 1] = encodedView[encodedBuf.byteLength - 1];\r\n\t\t}\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create string representation of current SID block\r\n\t * @returns {string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tlet result = \"\";\r\n\r\n\t\tif(this.isHexOnly === true)\r\n\t\t\tresult = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(this.isFirstSid)\r\n\t\t\t{\r\n\t\t\t\tlet sidValue = this.valueDec;\r\n\r\n\t\t\t\tif(this.valueDec <= 39)\r\n\t\t\t\t\tresult = \"0.\";\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.valueDec <= 79)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tresult = \"1.\";\r\n\t\t\t\t\t\tsidValue -= 40;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tresult = \"2.\";\r\n\t\t\t\t\t\tsidValue -= 80;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult += sidValue.toString();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tresult = this.valueDec.toString();\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.valueDec = this.valueDec;\r\n\t\tobject.isFirstSid = this.isFirstSid;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nclass LocalObjectIdentifierValueBlock extends ValueBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalObjectIdentifierValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.fromString(getParametersValue(parameters, \"value\", \"\"));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tlet resultOffset = inputOffset;\r\n\r\n\t\twhile(inputLength > 0)\r\n\t\t{\r\n\t\t\tconst sidBlock = new LocalSidValueBlock();\r\n\t\t\tresultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n\t\t\tif(resultOffset === (-1))\r\n\t\t\t{\r\n\t\t\t\tthis.blockLength = 0;\r\n\t\t\t\tthis.error = sidBlock.error;\r\n\t\t\t\treturn resultOffset;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.value.length === 0)\r\n\t\t\t\tsidBlock.isFirstSid = true;\r\n\r\n\t\t\tthis.blockLength += sidBlock.blockLength;\r\n\t\t\tinputLength -= sidBlock.blockLength;\r\n\r\n\t\t\tthis.value.push(sidBlock);\r\n\t\t}\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\tlet retBuf = new ArrayBuffer(0);\r\n\r\n\t\tfor(let i = 0; i < this.value.length; i++)\r\n\t\t{\r\n\t\t\tconst valueBuf = this.value[i].toBER(sizeOnly);\r\n\t\t\tif(valueBuf.byteLength === 0)\r\n\t\t\t{\r\n\t\t\t\tthis.error = this.value[i].error;\r\n\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t\t}\r\n\r\n\t\t\tretBuf = utilConcatBuf(retBuf, valueBuf);\r\n\t\t}\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create \"LocalObjectIdentifierValueBlock\" class from string\r\n\t * @param {string} string Input string to convert from\r\n\t * @returns {boolean}\r\n\t */\r\n\tfromString(string)\r\n\t{\r\n\t\tthis.value = []; // Clear existing SID values\r\n\r\n\t\tlet pos1 = 0;\r\n\t\tlet pos2 = 0;\r\n\r\n\t\tlet sid = \"\";\r\n\r\n\t\tlet flag = false;\r\n\r\n\t\tdo\r\n\t\t{\r\n\t\t\tpos2 = string.indexOf(\".\", pos1);\r\n\t\t\tif(pos2 === (-1))\r\n\t\t\t\tsid = string.substr(pos1);\r\n\t\t\telse\r\n\t\t\t\tsid = string.substr(pos1, pos2 - pos1);\r\n\r\n\t\t\tpos1 = pos2 + 1;\r\n\r\n\t\t\tif(flag)\r\n\t\t\t{\r\n\t\t\t\tconst sidBlock = this.value[0];\r\n\r\n\t\t\t\tlet plus = 0;\r\n\r\n\t\t\t\tswitch(sidBlock.valueDec)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tplus = 40;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tplus = 80;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis.value = []; // clear SID array\r\n\t\t\t\t\t\treturn false; // ???\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst parsedSID = parseInt(sid, 10);\r\n\t\t\t\tif(isNaN(parsedSID))\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tsidBlock.valueDec = parsedSID + plus;\r\n\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconst sidBlock = new LocalSidValueBlock();\r\n\t\t\t\tsidBlock.valueDec = parseInt(sid, 10);\r\n\t\t\t\tif(isNaN(sidBlock.valueDec))\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tif(this.value.length === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tsidBlock.isFirstSid = true;\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.value.push(sidBlock);\r\n\t\t\t}\r\n\t\t} while(pos2 !== (-1));\r\n\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Converts \"LocalObjectIdentifierValueBlock\" class to string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tlet result = \"\";\r\n\t\tlet isHexOnly = false;\r\n\r\n\t\tfor(let i = 0; i < this.value.length; i++)\r\n\t\t{\r\n\t\t\tisHexOnly = this.value[i].isHexOnly;\r\n\r\n\t\t\tlet sidStr = this.value[i].toString();\r\n\r\n\t\t\tif(i !== 0)\r\n\t\t\t\tresult = `${result}.`;\r\n\r\n\t\t\tif(isHexOnly)\r\n\t\t\t{\r\n\t\t\t\tsidStr = `{${sidStr}}`;\r\n\r\n\t\t\t\tif(this.value[i].isFirstSid)\r\n\t\t\t\t\tresult = `2.{${sidStr} - 80}`;\r\n\t\t\t\telse\r\n\t\t\t\t\tresult += sidStr;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tresult += sidStr;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"ObjectIdentifierValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.value = this.toString();\r\n\t\tobject.sidArray = [];\r\n\t\tfor(let i = 0; i < this.value.length; i++)\r\n\t\t\tobject.sidArray.push(this.value[i].toJSON());\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends BaseBlock\r\n */\r\nexport class ObjectIdentifier extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"ObjectIdentifier\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalObjectIdentifierValueBlock);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 6; // OBJECT IDENTIFIER\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"ObjectIdentifier\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of all string's classes\r\n//**************************************************************************************\r\nclass LocalUtf8StringValueBlock extends HexBlock(LocalBaseBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Constructor for \"LocalUtf8StringValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.isHexOnly = true;\r\n\t\tthis.value = \"\"; // String representation of decoded ArrayBuffer\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Utf8StringValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.value = this.value;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends BaseBlock\r\n */\r\nexport class Utf8String extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Utf8String\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalUtf8StringValueBlock);\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\tthis.fromString(parameters.value);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 12; // Utf8String\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Utf8String\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\r\n\t\tif(resultOffset === (-1))\r\n\t\t{\r\n\t\t\tthis.error = this.valueBlock.error;\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\r\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\tif(this.valueBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ArrayBuffer into ASN.1 internal string\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t */\r\n\tfromBuffer(inputBuffer)\r\n\t{\r\n\t\tthis.valueBlock.value = String.fromCharCode.apply(null, new Uint8Array(inputBuffer));\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\t//noinspection JSDeprecatedSymbols\r\n\t\t\tthis.valueBlock.value = decodeURIComponent(escape(this.valueBlock.value));\r\n\t\t}\r\n\t\tcatch(ex)\r\n\t\t{\r\n\t\t\tthis.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting JavaScript string into ASN.1 internal class\r\n\t * @param {!string} inputString ASN.1 BER encoded array\r\n\t */\r\n\tfromString(inputString)\r\n\t{\r\n\t\t//noinspection JSDeprecatedSymbols\r\n\t\tconst str = unescape(encodeURIComponent(inputString));\r\n\t\tconst strLen = str.length;\r\n\r\n\t\tthis.valueBlock.valueHex = new ArrayBuffer(strLen);\r\n\t\tconst view = new Uint8Array(this.valueBlock.valueHex);\r\n\r\n\t\tfor(let i = 0; i < strLen; i++)\r\n\t\t\tview[i] = str.charCodeAt(i);\r\n\r\n\t\tthis.valueBlock.value = inputString;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//region Declaration of ASN.1 RelativeObjectIdentifier type class\r\n//**************************************************************************************\r\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalRelativeSidValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {number} [valueDec]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.valueDec = getParametersValue(parameters, \"valueDec\", -1);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"relativeSidBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tif (inputLength === 0)\r\n\t\t\treturn inputOffset;\r\n\r\n\t\t//region Basic check for parameters\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tif (checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\r\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\r\n\t\tthis.valueHex = new ArrayBuffer(inputLength);\r\n\t\tlet view = new Uint8Array(this.valueHex);\r\n\r\n\t\tfor (let i = 0; i < inputLength; i++)\r\n\t\t{\r\n\t\t\tview[i] = intBuffer[i] & 0x7F;\r\n\r\n\t\t\tthis.blockLength++;\r\n\r\n\t\t\tif ((intBuffer[i] & 0x80) === 0x00)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t//region Ajust size of valueHex buffer\r\n\t\tconst tempValueHex = new ArrayBuffer(this.blockLength);\r\n\t\tconst tempView = new Uint8Array(tempValueHex);\r\n\r\n\t\tfor (let i = 0; i < this.blockLength; i++)\r\n\t\t\ttempView[i] = view[i];\r\n\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tthis.valueHex = tempValueHex.slice(0);\r\n\t\tview = new Uint8Array(this.valueHex);\r\n\t\t//endregion\r\n\r\n\t\tif ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00)\r\n\t\t{\r\n\t\t\tthis.error = \"End of input reached before message was fully decoded\";\r\n\t\t\treturn (-1);\r\n\t\t}\r\n\r\n\t\tif (view[0] === 0x00)\r\n\t\t\tthis.warnings.push(\"Needlessly long format of SID encoding\");\r\n\r\n\t\tif (this.blockLength <= 8)\r\n\t\t\tthis.valueDec = utilFromBase(view, 7);\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.isHexOnly = true;\r\n\t\t\tthis.warnings.push(\"Too big SID for decoding, hex only\");\r\n\t\t}\r\n\r\n\t\treturn (inputOffset + this.blockLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet retBuf;\r\n\t\tlet retView;\r\n\t\t//endregion\r\n\r\n\t\tif (this.isHexOnly)\r\n\t\t{\r\n\t\t\tif (sizeOnly === true)\r\n\t\t\t\treturn (new ArrayBuffer(this.valueHex.byteLength));\r\n\r\n\t\t\tconst curView = new Uint8Array(this.valueHex);\r\n\r\n\t\t\tretBuf = new ArrayBuffer(this.blockLength);\r\n\t\t\tretView = new Uint8Array(retBuf);\r\n\r\n\t\t\tfor (let i = 0; i < (this.blockLength - 1); i++)\r\n\t\t\t\tretView[i] = curView[i] | 0x80;\r\n\r\n\t\t\tretView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\r\n\t\tconst encodedBuf = utilToBase(this.valueDec, 7);\r\n\t\tif (encodedBuf.byteLength === 0)\r\n\t\t{\r\n\t\t\tthis.error = \"Error during encoding SID value\";\r\n\t\t\treturn (new ArrayBuffer(0));\r\n\t\t}\r\n\r\n\t\tretBuf = new ArrayBuffer(encodedBuf.byteLength);\r\n\r\n\t\tif (sizeOnly === false)\r\n\t\t{\r\n\t\t\tconst encodedView = new Uint8Array(encodedBuf);\r\n\t\t\tretView = new Uint8Array(retBuf);\r\n\r\n\t\t\tfor (let i = 0; i < (encodedBuf.byteLength - 1); i++)\r\n\t\t\t\tretView[i] = encodedView[i] | 0x80;\r\n\r\n\t\t\tretView[encodedBuf.byteLength - 1] = encodedView[encodedBuf.byteLength - 1];\r\n\t\t}\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create string representation of current SID block\r\n\t * @returns {string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tlet result = \"\";\r\n\r\n\t\tif (this.isHexOnly === true)\r\n\t\t\tresult = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\r\n\t\telse {\r\n\t\t\tresult = this.valueDec.toString();\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry {\r\n\t\t\tobject = super.toJSON();\r\n\t\t} catch (ex) {}\r\n\t\t//endregion\r\n\r\n\t\tobject.valueDec = this.valueDec;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalRelativeObjectIdentifierValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.fromString(getParametersValue(parameters, \"value\", \"\"));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tlet resultOffset = inputOffset;\r\n\r\n\t\twhile (inputLength > 0)\r\n\t\t{\r\n\t\t\tconst sidBlock = new LocalRelativeSidValueBlock();\r\n\t\t\tresultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n\t\t\tif (resultOffset === (-1))\r\n\t\t\t{\r\n\t\t\t\tthis.blockLength = 0;\r\n\t\t\t\tthis.error = sidBlock.error;\r\n\t\t\t\treturn resultOffset;\r\n\t\t\t}\r\n\r\n\t\t\tthis.blockLength += sidBlock.blockLength;\r\n\t\t\tinputLength -= sidBlock.blockLength;\r\n\r\n\t\t\tthis.value.push(sidBlock);\r\n\t\t}\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\tlet retBuf = new ArrayBuffer(0);\r\n\r\n\t\tfor (let i = 0; i < this.value.length; i++)\r\n\t\t{\r\n\t\t\tconst valueBuf = this.value[i].toBER(sizeOnly);\r\n\t\t\tif (valueBuf.byteLength === 0)\r\n\t\t\t{\r\n\t\t\t\tthis.error = this.value[i].error;\r\n\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t\t}\r\n\r\n\t\t\tretBuf = utilConcatBuf(retBuf, valueBuf);\r\n\t\t}\r\n\r\n\t\treturn retBuf;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create \"LocalRelativeObjectIdentifierValueBlock\" class from string\r\n\t * @param {string} string Input string to convert from\r\n\t * @returns {boolean}\r\n\t */\r\n\tfromString(string)\r\n\t{\r\n\t\tthis.value = []; // Clear existing SID values\r\n\r\n\t\tlet pos1 = 0;\r\n\t\tlet pos2 = 0;\r\n\r\n\t\tlet sid = \"\";\r\n\r\n\t\tdo\r\n\t\t{\r\n\t\t\tpos2 = string.indexOf(\".\", pos1);\r\n\t\t\tif (pos2 === (-1))\r\n\t\t\t\tsid = string.substr(pos1);\r\n\t\t\telse\r\n\t\t\t\tsid = string.substr(pos1, pos2 - pos1);\r\n\r\n\t\t\tpos1 = pos2 + 1;\r\n\r\n\t\t\tconst sidBlock = new LocalRelativeSidValueBlock();\r\n\t\t\tsidBlock.valueDec = parseInt(sid, 10);\r\n\t\t\tif (isNaN(sidBlock.valueDec))\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tthis.value.push(sidBlock);\r\n\r\n\t\t} while (pos2 !== (-1));\r\n\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Converts \"LocalRelativeObjectIdentifierValueBlock\" class to string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tlet result = \"\";\r\n\t\tlet isHexOnly = false;\r\n\r\n\t\tfor (let i = 0; i < this.value.length; i++)\r\n\t\t{\r\n\t\t\tisHexOnly = this.value[i].isHexOnly;\r\n\r\n\t\t\tlet sidStr = this.value[i].toString();\r\n\r\n\t\t\tif (i !== 0)\r\n\t\t\t\tresult = `${result}.`;\r\n\r\n\t\t\tif (isHexOnly)\r\n\t\t\t{\r\n\t\t\t\tsidStr = `{${sidStr}}`;\r\n\t\t\t\tresult += sidStr;\r\n\t\t\t} else\r\n\t\t\t\tresult += sidStr;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"RelativeObjectIdentifierValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t} catch (ex) {}\r\n\t\t//endregion\r\n\r\n\t\tobject.value = this.toString();\r\n\t\tobject.sidArray = [];\r\n\t\tfor (let i = 0; i < this.value.length; i++)\r\n\t\t\tobject.sidArray.push(this.value[i].toJSON());\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends BaseBlock\r\n */\r\nexport class RelativeObjectIdentifier extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"RelativeObjectIdentifier\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {ArrayBuffer} [valueHex]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalRelativeObjectIdentifierValueBlock);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 13; // RELATIVE OBJECT IDENTIFIER\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"RelativeObjectIdentifier\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalBaseBlock\r\n * @extends HexBlock\r\n */\r\nclass LocalBmpStringValueBlock extends HexBlock(LocalBaseBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalBmpStringValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.isHexOnly = true;\r\n\t\tthis.value = \"\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"BmpStringValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.value = this.value;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends BaseBlock\r\n */\r\nexport class BmpString extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"BmpString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalBmpStringValueBlock);\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\tthis.fromString(parameters.value);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 30; // BmpString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"BmpString\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\r\n\t\tif(resultOffset === (-1))\r\n\t\t{\r\n\t\t\tthis.error = this.valueBlock.error;\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\r\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\tif(this.valueBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ArrayBuffer into ASN.1 internal string\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t */\r\n\tfromBuffer(inputBuffer)\r\n\t{\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tconst copyBuffer = inputBuffer.slice(0);\r\n\t\tconst valueView = new Uint8Array(copyBuffer);\r\n\r\n\t\tfor(let i = 0; i < valueView.length; i += 2)\r\n\t\t{\r\n\t\t\tconst temp = valueView[i];\r\n\r\n\t\t\tvalueView[i] = valueView[i + 1];\r\n\t\t\tvalueView[i + 1] = temp;\r\n\t\t}\r\n\r\n\t\tthis.valueBlock.value = String.fromCharCode.apply(null, new Uint16Array(copyBuffer));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting JavaScript string into ASN.1 internal class\r\n\t * @param {!string} inputString ASN.1 BER encoded array\r\n\t */\r\n\tfromString(inputString)\r\n\t{\r\n\t\tconst strLength = inputString.length;\r\n\r\n\t\tthis.valueBlock.valueHex = new ArrayBuffer(strLength * 2);\r\n\t\tconst valueHexView = new Uint8Array(this.valueBlock.valueHex);\r\n\r\n\t\tfor(let i = 0; i < strLength; i++)\r\n\t\t{\r\n\t\t\tconst codeBuf = utilToBase(inputString.charCodeAt(i), 8);\r\n\t\t\tconst codeView = new Uint8Array(codeBuf);\r\n\t\t\tif(codeView.length > 2)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tconst dif = 2 - codeView.length;\r\n\r\n\t\t\tfor(let j = (codeView.length - 1); j >= 0; j--)\r\n\t\t\t\tvalueHexView[i * 2 + j + dif] = codeView[j];\r\n\t\t}\r\n\r\n\t\tthis.valueBlock.value = inputString;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nclass LocalUniversalStringValueBlock extends HexBlock(LocalBaseBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalUniversalStringValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.isHexOnly = true;\r\n\t\tthis.value = \"\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"UniversalStringValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.value = this.value;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends BaseBlock\r\n */\r\nexport class UniversalString extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"UniversalString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalUniversalStringValueBlock);\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\tthis.fromString(parameters.value);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 28; // UniversalString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"UniversalString\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\r\n\t\tif(resultOffset === (-1))\r\n\t\t{\r\n\t\t\tthis.error = this.valueBlock.error;\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\r\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\tif(this.valueBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ArrayBuffer into ASN.1 internal string\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t */\r\n\tfromBuffer(inputBuffer)\r\n\t{\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tconst copyBuffer = inputBuffer.slice(0);\r\n\t\tconst valueView = new Uint8Array(copyBuffer);\r\n\r\n\t\tfor(let i = 0; i < valueView.length; i += 4)\r\n\t\t{\r\n\t\t\tvalueView[i] = valueView[i + 3];\r\n\t\t\tvalueView[i + 1] = valueView[i + 2];\r\n\t\t\tvalueView[i + 2] = 0x00;\r\n\t\t\tvalueView[i + 3] = 0x00;\r\n\t\t}\r\n\r\n\t\tthis.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting JavaScript string into ASN.1 internal class\r\n\t * @param {!string} inputString ASN.1 BER encoded array\r\n\t */\r\n\tfromString(inputString)\r\n\t{\r\n\t\tconst strLength = inputString.length;\r\n\r\n\t\tthis.valueBlock.valueHex = new ArrayBuffer(strLength * 4);\r\n\t\tconst valueHexView = new Uint8Array(this.valueBlock.valueHex);\r\n\r\n\t\tfor(let i = 0; i < strLength; i++)\r\n\t\t{\r\n\t\t\tconst codeBuf = utilToBase(inputString.charCodeAt(i), 8);\r\n\t\t\tconst codeView = new Uint8Array(codeBuf);\r\n\t\t\tif(codeView.length > 4)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tconst dif = 4 - codeView.length;\r\n\r\n\t\t\tfor(let j = (codeView.length - 1); j >= 0; j--)\r\n\t\t\t\tvalueHexView[i * 4 + j + dif] = codeView[j];\r\n\t\t}\r\n\r\n\t\tthis.valueBlock.value = inputString;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nclass LocalSimpleStringValueBlock extends HexBlock(LocalBaseBlock)\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalSimpleStringValueBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.value = \"\";\r\n\t\tthis.isHexOnly = true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"SimpleStringValueBlock\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.value = this.value;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends BaseBlock\r\n */\r\nclass LocalSimpleStringBlock extends BaseBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"LocalSimpleStringBlock\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters, LocalSimpleStringValueBlock);\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\tthis.fromString(parameters.value);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"SIMPLESTRING\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\r\n\t\tif(resultOffset === (-1))\r\n\t\t{\r\n\t\t\tthis.error = this.valueBlock.error;\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\r\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\tif(this.valueBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ArrayBuffer into ASN.1 internal string\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t */\r\n\tfromBuffer(inputBuffer)\r\n\t{\r\n\t\tthis.valueBlock.value = String.fromCharCode.apply(null, new Uint8Array(inputBuffer));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting JavaScript string into ASN.1 internal class\r\n\t * @param {!string} inputString ASN.1 BER encoded array\r\n\t */\r\n\tfromString(inputString)\r\n\t{\r\n\t\tconst strLen = inputString.length;\r\n\r\n\t\tthis.valueBlock.valueHex = new ArrayBuffer(strLen);\r\n\t\tconst view = new Uint8Array(this.valueBlock.valueHex);\r\n\r\n\t\tfor(let i = 0; i < strLen; i++)\r\n\t\t\tview[i] = inputString.charCodeAt(i);\r\n\r\n\t\tthis.valueBlock.value = inputString;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class NumericString extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"NumericString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 18; // NumericString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"NumericString\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class PrintableString extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"PrintableString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 19; // PrintableString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"PrintableString\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class TeletexString extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"TeletexString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 20; // TeletexString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"TeletexString\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class VideotexString extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"VideotexString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 21; // VideotexString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"VideotexString\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class IA5String extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"IA5String\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 22; // IA5String\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"IA5String\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class GraphicString extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"GraphicString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 25; // GraphicString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"GraphicString\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class VisibleString extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"VisibleString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 26; // VisibleString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"VisibleString\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class GeneralString extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"GeneralString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 27; // GeneralString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"GeneralString\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends LocalSimpleStringBlock\r\n */\r\nexport class CharacterString extends LocalSimpleStringBlock\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"CharacterString\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 29; // CharacterString\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"CharacterString\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of all date and time classes\r\n//**************************************************************************************\r\n/**\r\n * @extends VisibleString\r\n */\r\nexport class UTCTime extends VisibleString\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"UTCTime\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {string} [value] String representatio of the date\r\n\t * @property {Date} [valueDate] JavaScript \"Date\" object\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.year = 0;\r\n\t\tthis.month = 0;\r\n\t\tthis.day = 0;\r\n\t\tthis.hour = 0;\r\n\t\tthis.minute = 0;\r\n\t\tthis.second = 0;\r\n\r\n\t\t//region Create UTCTime from ASN.1 UTC string value\r\n\t\tif(\"value\" in parameters)\r\n\t\t{\r\n\t\t\tthis.fromString(parameters.value);\r\n\r\n\t\t\tthis.valueBlock.valueHex = new ArrayBuffer(parameters.value.length);\r\n\t\t\tconst view = new Uint8Array(this.valueBlock.valueHex);\r\n\r\n\t\t\tfor(let i = 0; i < parameters.value.length; i++)\r\n\t\t\t\tview[i] = parameters.value.charCodeAt(i);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region Create GeneralizedTime from JavaScript Date type\r\n\t\tif(\"valueDate\" in parameters)\r\n\t\t{\r\n\t\t\tthis.fromDate(parameters.valueDate);\r\n\t\t\tthis.valueBlock.valueHex = this.toBuffer();\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 23; // UTCTime\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\r\n\t\tif(resultOffset === (-1))\r\n\t\t{\r\n\t\t\tthis.error = this.valueBlock.error;\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\r\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\tif(this.valueBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ArrayBuffer into ASN.1 internal string\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t */\r\n\tfromBuffer(inputBuffer)\r\n\t{\r\n\t\tthis.fromString(String.fromCharCode.apply(null, new Uint8Array(inputBuffer)));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ASN.1 internal string into ArrayBuffer\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBuffer()\r\n\t{\r\n\t\tconst str = this.toString();\r\n\r\n\t\tconst buffer = new ArrayBuffer(str.length);\r\n\t\tconst view = new Uint8Array(buffer);\r\n\r\n\t\tfor(let i = 0; i < str.length; i++)\r\n\t\t\tview[i] = str.charCodeAt(i);\r\n\r\n\t\treturn buffer;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting \"Date\" object into ASN.1 internal string\r\n\t * @param {!Date} inputDate JavaScript \"Date\" object\r\n\t */\r\n\tfromDate(inputDate)\r\n\t{\r\n\t\tthis.year = inputDate.getUTCFullYear();\r\n\t\tthis.month = inputDate.getUTCMonth() + 1;\r\n\t\tthis.day = inputDate.getUTCDate();\r\n\t\tthis.hour = inputDate.getUTCHours();\r\n\t\tthis.minute = inputDate.getUTCMinutes();\r\n\t\tthis.second = inputDate.getUTCSeconds();\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Function converting ASN.1 internal string into \"Date\" object\r\n\t * @returns {Date}\r\n\t */\r\n\ttoDate()\r\n\t{\r\n\t\treturn (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting JavaScript string into ASN.1 internal class\r\n\t * @param {!string} inputString ASN.1 BER encoded array\r\n\t */\r\n\tfromString(inputString)\r\n\t{\r\n\t\t//region Parse input string\r\n\t\tconst parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\r\n\t\tconst parserArray = parser.exec(inputString);\r\n\t\tif(parserArray === null)\r\n\t\t{\r\n\t\t\tthis.error = \"Wrong input string for convertion\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Store parsed values\r\n\t\tconst year = parseInt(parserArray[1], 10);\r\n\t\tif(year >= 50)\r\n\t\t\tthis.year = 1900 + year;\r\n\t\telse\r\n\t\t\tthis.year = 2000 + year;\r\n\r\n\t\tthis.month = parseInt(parserArray[2], 10);\r\n\t\tthis.day = parseInt(parserArray[3], 10);\r\n\t\tthis.hour = parseInt(parserArray[4], 10);\r\n\t\tthis.minute = parseInt(parserArray[5], 10);\r\n\t\tthis.second = parseInt(parserArray[6], 10);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ASN.1 internal class into JavaScript string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tconst outputArray = new Array(7);\r\n\r\n\t\toutputArray[0] = padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\r\n\t\toutputArray[1] = padNumber(this.month, 2);\r\n\t\toutputArray[2] = padNumber(this.day, 2);\r\n\t\toutputArray[3] = padNumber(this.hour, 2);\r\n\t\toutputArray[4] = padNumber(this.minute, 2);\r\n\t\toutputArray[5] = padNumber(this.second, 2);\r\n\t\toutputArray[6] = \"Z\";\r\n\r\n\t\treturn outputArray.join(\"\");\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"UTCTime\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.year = this.year;\r\n\t\tobject.month = this.month;\r\n\t\tobject.day = this.day;\r\n\t\tobject.hour = this.hour;\r\n\t\tobject.minute = this.minute;\r\n\t\tobject.second = this.second;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends VisibleString\r\n */\r\nexport class GeneralizedTime extends VisibleString\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"GeneralizedTime\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {string} [value] String representatio of the date\r\n\t * @property {Date} [valueDate] JavaScript \"Date\" object\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.year = 0;\r\n\t\tthis.month = 0;\r\n\t\tthis.day = 0;\r\n\t\tthis.hour = 0;\r\n\t\tthis.minute = 0;\r\n\t\tthis.second = 0;\r\n\t\tthis.millisecond = 0;\r\n\r\n\t\t//region Create UTCTime from ASN.1 UTC string value\r\n\t\tif(\"value\" in parameters)\r\n\t\t{\r\n\t\t\tthis.fromString(parameters.value);\r\n\r\n\t\t\tthis.valueBlock.valueHex = new ArrayBuffer(parameters.value.length);\r\n\t\t\tconst view = new Uint8Array(this.valueBlock.valueHex);\r\n\r\n\t\t\tfor(let i = 0; i < parameters.value.length; i++)\r\n\t\t\t\tview[i] = parameters.value.charCodeAt(i);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region Create GeneralizedTime from JavaScript Date type\r\n\t\tif(\"valueDate\" in parameters)\r\n\t\t{\r\n\t\t\tthis.fromDate(parameters.valueDate);\r\n\t\t\tthis.valueBlock.valueHex = this.toBuffer();\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 24; // GeneralizedTime\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\r\n\t\tif(resultOffset === (-1))\r\n\t\t{\r\n\t\t\tthis.error = this.valueBlock.error;\r\n\t\t\treturn resultOffset;\r\n\t\t}\r\n\r\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\r\n\r\n\t\tif(this.idBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.idBlock.blockLength;\r\n\r\n\t\tif(this.lenBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\r\n\r\n\t\tif(this.valueBlock.error.length === 0)\r\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\r\n\r\n\t\treturn resultOffset;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ArrayBuffer into ASN.1 internal string\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t */\r\n\tfromBuffer(inputBuffer)\r\n\t{\r\n\t\tthis.fromString(String.fromCharCode.apply(null, new Uint8Array(inputBuffer)));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ASN.1 internal string into ArrayBuffer\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBuffer()\r\n\t{\r\n\t\tconst str = this.toString();\r\n\r\n\t\tconst buffer = new ArrayBuffer(str.length);\r\n\t\tconst view = new Uint8Array(buffer);\r\n\r\n\t\tfor(let i = 0; i < str.length; i++)\r\n\t\t\tview[i] = str.charCodeAt(i);\r\n\r\n\t\treturn buffer;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting \"Date\" object into ASN.1 internal string\r\n\t * @param {!Date} inputDate JavaScript \"Date\" object\r\n\t */\r\n\tfromDate(inputDate)\r\n\t{\r\n\t\tthis.year = inputDate.getUTCFullYear();\r\n\t\tthis.month = inputDate.getUTCMonth() + 1;\r\n\t\tthis.day = inputDate.getUTCDate();\r\n\t\tthis.hour = inputDate.getUTCHours();\r\n\t\tthis.minute = inputDate.getUTCMinutes();\r\n\t\tthis.second = inputDate.getUTCSeconds();\r\n\t\tthis.millisecond = inputDate.getUTCMilliseconds();\r\n\t}\r\n\t//**********************************************************************************\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Function converting ASN.1 internal string into \"Date\" object\r\n\t * @returns {Date}\r\n\t */\r\n\ttoDate()\r\n\t{\r\n\t\treturn (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting JavaScript string into ASN.1 internal class\r\n\t * @param {!string} inputString ASN.1 BER encoded array\r\n\t */\r\n\tfromString(inputString)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet isUTC = false;\r\n\r\n\t\tlet timeString = \"\";\r\n\t\tlet dateTimeString = \"\";\r\n\t\tlet fractionPart = 0;\r\n\r\n\t\tlet parser;\r\n\r\n\t\tlet hourDifference = 0;\r\n\t\tlet minuteDifference = 0;\r\n\t\t//endregion\r\n\r\n\t\t//region Convert as UTC time\r\n\t\tif(inputString[inputString.length - 1] === \"Z\")\r\n\t\t{\r\n\t\t\ttimeString = inputString.substr(0, inputString.length - 1);\r\n\r\n\t\t\tisUTC = true;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region Convert as local time\r\n\t\telse\r\n\t\t{\r\n\t\t\t//noinspection JSPrimitiveTypeWrapperUsage\r\n\t\t\tconst number = new Number(inputString[inputString.length - 1]);\r\n\r\n\t\t\tif(isNaN(number.valueOf()))\r\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\r\n\t\t\ttimeString = inputString;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Check that we do not have a \"+\" and \"-\" symbols inside UTC time\r\n\t\tif(isUTC)\r\n\t\t{\r\n\t\t\tif(timeString.indexOf(\"+\") !== (-1))\r\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\r\n\t\t\tif(timeString.indexOf(\"-\") !== (-1))\r\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region Get \"UTC time difference\" in case of local time\r\n\t\telse\r\n\t\t{\r\n\t\t\tlet multiplier = 1;\r\n\t\t\tlet differencePosition = timeString.indexOf(\"+\");\r\n\t\t\tlet differenceString = \"\";\r\n\r\n\t\t\tif(differencePosition === (-1))\r\n\t\t\t{\r\n\t\t\t\tdifferencePosition = timeString.indexOf(\"-\");\r\n\t\t\t\tmultiplier = (-1);\r\n\t\t\t}\r\n\r\n\t\t\tif(differencePosition !== (-1))\r\n\t\t\t{\r\n\t\t\t\tdifferenceString = timeString.substr(differencePosition + 1);\r\n\t\t\t\ttimeString = timeString.substr(0, differencePosition);\r\n\r\n\t\t\t\tif((differenceString.length !== 2) && (differenceString.length !== 4))\r\n\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\r\n\t\t\t\t//noinspection JSPrimitiveTypeWrapperUsage\r\n\t\t\t\tlet number = new Number(differenceString.substr(0, 2));\r\n\r\n\t\t\t\tif(isNaN(number.valueOf()))\r\n\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\r\n\t\t\t\thourDifference = multiplier * number;\r\n\r\n\t\t\t\tif(differenceString.length === 4)\r\n\t\t\t\t{\r\n\t\t\t\t\t//noinspection JSPrimitiveTypeWrapperUsage\r\n\t\t\t\t\tnumber = new Number(differenceString.substr(2, 2));\r\n\r\n\t\t\t\t\tif(isNaN(number.valueOf()))\r\n\t\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\r\n\t\t\t\t\tminuteDifference = multiplier * number;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Get position of fraction point\r\n\t\tlet fractionPointPosition = timeString.indexOf(\".\"); // Check for \"full stop\" symbol\r\n\t\tif(fractionPointPosition === (-1))\r\n\t\t\tfractionPointPosition = timeString.indexOf(\",\"); // Check for \"comma\" symbol\r\n\t\t//endregion\r\n\r\n\t\t//region Get fraction part\r\n\t\tif(fractionPointPosition !== (-1))\r\n\t\t{\r\n\t\t\t//noinspection JSPrimitiveTypeWrapperUsage\r\n\t\t\tconst fractionPartCheck = new Number(`0${timeString.substr(fractionPointPosition)}`);\r\n\r\n\t\t\tif(isNaN(fractionPartCheck.valueOf()))\r\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\r\n\t\t\tfractionPart = fractionPartCheck.valueOf();\r\n\r\n\t\t\tdateTimeString = timeString.substr(0, fractionPointPosition);\r\n\t\t}\r\n\t\telse\r\n\t\t\tdateTimeString = timeString;\r\n\t\t//endregion\r\n\r\n\t\t//region Parse internal date\r\n\t\tswitch(true)\r\n\t\t{\r\n\t\t\tcase (dateTimeString.length === 8): // \"YYYYMMDD\"\r\n\t\t\t\tparser = /(\\d{4})(\\d{2})(\\d{2})/ig;\r\n\t\t\t\tif(fractionPointPosition !== (-1))\r\n\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\"); // Here we should not have a \"fraction point\"\r\n\t\t\t\tbreak;\r\n\t\t\tcase (dateTimeString.length === 10): // \"YYYYMMDDHH\"\r\n\t\t\t\tparser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n\r\n\t\t\t\tif(fractionPointPosition !== (-1))\r\n\t\t\t\t{\r\n\t\t\t\t\tlet fractionResult = 60 * fractionPart;\r\n\t\t\t\t\tthis.minute = Math.floor(fractionResult);\r\n\r\n\t\t\t\t\tfractionResult = 60 * (fractionResult - this.minute);\r\n\t\t\t\t\tthis.second = Math.floor(fractionResult);\r\n\r\n\t\t\t\t\tfractionResult = 1000 * (fractionResult - this.second);\r\n\t\t\t\t\tthis.millisecond = Math.floor(fractionResult);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase (dateTimeString.length === 12): // \"YYYYMMDDHHMM\"\r\n\t\t\t\tparser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n\r\n\t\t\t\tif(fractionPointPosition !== (-1))\r\n\t\t\t\t{\r\n\t\t\t\t\tlet fractionResult = 60 * fractionPart;\r\n\t\t\t\t\tthis.second = Math.floor(fractionResult);\r\n\r\n\t\t\t\t\tfractionResult = 1000 * (fractionResult - this.second);\r\n\t\t\t\t\tthis.millisecond = Math.floor(fractionResult);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase (dateTimeString.length === 14): // \"YYYYMMDDHHMMSS\"\r\n\t\t\t\tparser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n\r\n\t\t\t\tif(fractionPointPosition !== (-1))\r\n\t\t\t\t{\r\n\t\t\t\t\tconst fractionResult = 1000 * fractionPart;\r\n\t\t\t\t\tthis.millisecond = Math.floor(fractionResult);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Put parsed values at right places\r\n\t\tconst parserArray = parser.exec(dateTimeString);\r\n\t\tif(parserArray === null)\r\n\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\r\n\t\tfor(let j = 1; j < parserArray.length; j++)\r\n\t\t{\r\n\t\t\tswitch(j)\r\n\t\t\t{\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.year = parseInt(parserArray[j], 10);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.month = parseInt(parserArray[j], 10);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.day = parseInt(parserArray[j], 10);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis.hour = parseInt(parserArray[j], 10) + hourDifference;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tthis.minute = parseInt(parserArray[j], 10) + minuteDifference;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tthis.second = parseInt(parserArray[j], 10);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Get final date\r\n\t\tif(isUTC === false)\r\n\t\t{\r\n\t\t\tconst tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\r\n\r\n\t\t\tthis.year = tempDate.getUTCFullYear();\r\n\t\t\tthis.month = tempDate.getUTCMonth();\r\n\t\t\tthis.day = tempDate.getUTCDay();\r\n\t\t\tthis.hour = tempDate.getUTCHours();\r\n\t\t\tthis.minute = tempDate.getUTCMinutes();\r\n\t\t\tthis.second = tempDate.getUTCSeconds();\r\n\t\t\tthis.millisecond = tempDate.getUTCMilliseconds();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Function converting ASN.1 internal class into JavaScript string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(padNumber(this.year, 4));\r\n\t\toutputArray.push(padNumber(this.month, 2));\r\n\t\toutputArray.push(padNumber(this.day, 2));\r\n\t\toutputArray.push(padNumber(this.hour, 2));\r\n\t\toutputArray.push(padNumber(this.minute, 2));\r\n\t\toutputArray.push(padNumber(this.second, 2));\r\n\t\tif(this.millisecond !== 0)\r\n\t\t{\r\n\t\t\toutputArray.push(\".\");\r\n\t\t\toutputArray.push(padNumber(this.millisecond, 3));\r\n\t\t}\r\n\t\toutputArray.push(\"Z\");\r\n\r\n\t\treturn outputArray.join(\"\");\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"GeneralizedTime\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the block to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet object = {};\r\n\t\t\r\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\r\n\t\ttry\r\n\t\t{\r\n\t\t\tobject = super.toJSON();\r\n\t\t}\r\n\t\tcatch(ex){}\r\n\t\t//endregion\r\n\r\n\t\tobject.year = this.year;\r\n\t\tobject.month = this.month;\r\n\t\tobject.day = this.day;\r\n\t\tobject.hour = this.hour;\r\n\t\tobject.minute = this.minute;\r\n\t\tobject.second = this.second;\r\n\t\tobject.millisecond = this.millisecond;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends Utf8String\r\n */\r\nexport class DATE extends Utf8String\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"DATE\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 31; // DATE\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"DATE\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends Utf8String\r\n */\r\nexport class TimeOfDay extends Utf8String\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"TimeOfDay\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 32; // TimeOfDay\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"TimeOfDay\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends Utf8String\r\n */\r\nexport class DateTime extends Utf8String\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"DateTime\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 33; // DateTime\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"DateTime\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends Utf8String\r\n */\r\nexport class Duration extends Utf8String\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Duration\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 34; // Duration\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"Duration\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * @extends Utf8String\r\n */\r\nexport class TIME extends Utf8String\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Time\" class\r\n\t * @param {Object} [parameters={}]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\r\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tthis.idBlock.tagNumber = 14; // Time\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\r\n\t * @returns {string}\r\n\t */\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"TIME\";\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of special ASN.1 schema type Choice\r\n//**************************************************************************************\r\nexport class Choice\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Choice\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Array} [value] Array of ASN.1 types for make a choice from\r\n\t * @property {boolean} [optional]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tthis.value = getParametersValue(parameters, \"value\", []);\r\n\t\tthis.optional = getParametersValue(parameters, \"optional\", false);\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of special ASN.1 schema type Any\r\n//**************************************************************************************\r\nexport class Any\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Any\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {string} [name]\r\n\t * @property {boolean} [optional]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tthis.name = getParametersValue(parameters, \"name\", \"\");\r\n\t\tthis.optional = getParametersValue(parameters, \"optional\", false);\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of special ASN.1 schema type Repeated\r\n//**************************************************************************************\r\nexport class Repeated\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Repeated\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {string} [name]\r\n\t * @property {boolean} [optional]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tthis.name = getParametersValue(parameters, \"name\", \"\");\r\n\t\tthis.optional = getParametersValue(parameters, \"optional\", false);\r\n\t\tthis.value = getParametersValue(parameters, \"value\", new Any());\r\n\t\tthis.local = getParametersValue(parameters, \"local\", false); // Could local or global array to store elements\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of special ASN.1 schema type RawData\r\n//**************************************************************************************\r\n/**\r\n * @description Special class providing ability to have \"toBER/fromBER\" for raw ArrayBuffer\r\n */\r\nexport class RawData\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"Repeated\" class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {string} [name]\r\n\t * @property {boolean} [optional]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tthis.data = getParametersValue(parameters, \"data\", new ArrayBuffer(0));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Base function for converting block from BER encoded array of bytes\r\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n\t * @returns {number} Offset after least decoded byte\r\n\t */\r\n\tfromBER(inputBuffer, inputOffset, inputLength)\r\n\t{\r\n\t\tthis.data = inputBuffer.slice(inputOffset, inputLength);\r\n\t\treturn (inputOffset + inputLength);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\r\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\ttoBER(sizeOnly = false)\r\n\t{\r\n\t\treturn this.data;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Major ASN.1 BER decoding function\r\n//**************************************************************************************\r\n/**\r\n * Internal library function for decoding ASN.1 BER\r\n * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\r\n * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\r\n * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\r\n * @returns {{offset: number, result: Object}}\r\n */\r\nfunction LocalFromBER(inputBuffer, inputOffset, inputLength)\r\n{\r\n\tconst incomingOffset = inputOffset; // Need to store initial offset since \"inputOffset\" is changing in the function\r\n\r\n\t//region Local function changing a type for ASN.1 classes\r\n\tfunction localChangeType(inputObject, newType)\r\n\t{\r\n\t\tif(inputObject instanceof newType)\r\n\t\t\treturn inputObject;\r\n\r\n\t\tconst newObject = new newType();\r\n\t\tnewObject.idBlock = inputObject.idBlock;\r\n\t\tnewObject.lenBlock = inputObject.lenBlock;\r\n\t\tnewObject.warnings = inputObject.warnings;\r\n\t\t//noinspection JSCheckFunctionSignatures\r\n\t\tnewObject.valueBeforeDecode = inputObject.valueBeforeDecode.slice(0);\r\n\r\n\t\treturn newObject;\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Create a basic ASN.1 type since we need to return errors and warnings from the function\r\n\tlet returnObject = new BaseBlock({}, Object);\r\n\t//endregion\r\n\r\n\t//region Basic check for parameters\r\n\tconst baseBlock = new LocalBaseBlock();\r\n\tif(checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) === false)\r\n\t{\r\n\t\treturnObject.error = baseBlock.error;\r\n\t\treturn {\r\n\t\t\toffset: (-1),\r\n\t\t\tresult: returnObject\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Getting Uint8Array from ArrayBuffer\r\n\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\r\n\t//endregion\r\n\r\n\t//region Initial checks\r\n\tif(intBuffer.length === 0)\r\n\t{\r\n\t\tthis.error = \"Zero buffer length\";\r\n\t\treturn {\r\n\t\t\toffset: (-1),\r\n\t\t\tresult: returnObject\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Decode indentifcation block of ASN.1 BER structure\r\n\tlet resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n\treturnObject.warnings.concat(returnObject.idBlock.warnings);\r\n\tif(resultOffset === (-1))\r\n\t{\r\n\t\treturnObject.error = returnObject.idBlock.error;\r\n\t\treturn {\r\n\t\t\toffset: (-1),\r\n\t\t\tresult: returnObject\r\n\t\t};\r\n\t}\r\n\r\n\tinputOffset = resultOffset;\r\n\tinputLength -= returnObject.idBlock.blockLength;\r\n\t//endregion\r\n\r\n\t//region Decode length block of ASN.1 BER structure\r\n\tresultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n\treturnObject.warnings.concat(returnObject.lenBlock.warnings);\r\n\tif(resultOffset === (-1))\r\n\t{\r\n\t\treturnObject.error = returnObject.lenBlock.error;\r\n\t\treturn {\r\n\t\t\toffset: (-1),\r\n\t\t\tresult: returnObject\r\n\t\t};\r\n\t}\r\n\r\n\tinputOffset = resultOffset;\r\n\tinputLength -= returnObject.lenBlock.blockLength;\r\n\t//endregion\r\n\r\n\t//region Check for usign indefinite length form in encoding for primitive types\r\n\tif((returnObject.idBlock.isConstructed === false) &&\r\n\t\t(returnObject.lenBlock.isIndefiniteForm === true))\r\n\t{\r\n\t\treturnObject.error = \"Indefinite length form used for primitive encoding form\";\r\n\t\treturn {\r\n\t\t\toffset: (-1),\r\n\t\t\tresult: returnObject\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Switch ASN.1 block type\r\n\tlet newASN1Type = BaseBlock;\r\n\r\n\tswitch(returnObject.idBlock.tagClass)\r\n\t{\r\n\t\t//region UNIVERSAL\r\n\t\tcase 1:\r\n\t\t\t//region Check for reserved tag numbers\r\n\t\t\tif((returnObject.idBlock.tagNumber >= 37) &&\r\n\t\t\t\t(returnObject.idBlock.isHexOnly === false))\r\n\t\t\t{\r\n\t\t\t\treturnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\r\n\t\t\t\treturn {\r\n\t\t\t\t\toffset: (-1),\r\n\t\t\t\t\tresult: returnObject\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\r\n\t\t\tswitch(returnObject.idBlock.tagNumber)\r\n\t\t\t{\r\n\t\t\t\t//region EndOfContent type\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t//region Check for EndOfContent type\r\n\t\t\t\t\tif((returnObject.idBlock.isConstructed === true) &&\r\n\t\t\t\t\t\t(returnObject.lenBlock.length > 0))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturnObject.error = \"Type [UNIVERSAL 0] is reserved\";\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\toffset: (-1),\r\n\t\t\t\t\t\t\tresult: returnObject\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\tnewASN1Type = EndOfContent;\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Boolean type\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tnewASN1Type = Boolean;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Integer type\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tnewASN1Type = Integer;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region BitString type\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tnewASN1Type = BitString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region OctetString type\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tnewASN1Type = OctetString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Null type\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tnewASN1Type = Null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region OBJECT IDENTIFIER type\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tnewASN1Type = ObjectIdentifier;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Enumerated type\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\tnewASN1Type = Enumerated;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Utf8String type\r\n\t\t\t\tcase 12:\r\n\t\t\t\t\tnewASN1Type = Utf8String;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Time type\r\n\t\t\t\t//region RELATIVE OBJECT IDENTIFIER type\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\tnewASN1Type = RelativeObjectIdentifier;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\tcase 14:\r\n\t\t\t\t\tnewASN1Type = TIME;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region ASN.1 reserved type\r\n\t\t\t\tcase 15:\r\n\t\t\t\t\treturnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toffset: (-1),\r\n\t\t\t\t\t\tresult: returnObject\r\n\t\t\t\t\t};\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Sequence type\r\n\t\t\t\tcase 16:\r\n\t\t\t\t\tnewASN1Type = Sequence;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Set type\r\n\t\t\t\tcase 17:\r\n\t\t\t\t\tnewASN1Type = Set;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region NumericString type\r\n\t\t\t\tcase 18:\r\n\t\t\t\t\tnewASN1Type = NumericString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region PrintableString type\r\n\t\t\t\tcase 19:\r\n\t\t\t\t\tnewASN1Type = PrintableString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region TeletexString type\r\n\t\t\t\tcase 20:\r\n\t\t\t\t\tnewASN1Type = TeletexString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region VideotexString type\r\n\t\t\t\tcase 21:\r\n\t\t\t\t\tnewASN1Type = VideotexString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region IA5String type\r\n\t\t\t\tcase 22:\r\n\t\t\t\t\tnewASN1Type = IA5String;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region UTCTime type\r\n\t\t\t\tcase 23:\r\n\t\t\t\t\tnewASN1Type = UTCTime;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region GeneralizedTime type\r\n\t\t\t\tcase 24:\r\n\t\t\t\t\tnewASN1Type = GeneralizedTime;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region GraphicString type\r\n\t\t\t\tcase 25:\r\n\t\t\t\t\tnewASN1Type = GraphicString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region VisibleString type\r\n\t\t\t\tcase 26:\r\n\t\t\t\t\tnewASN1Type = VisibleString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region GeneralString type\r\n\t\t\t\tcase 27:\r\n\t\t\t\t\tnewASN1Type = GeneralString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region UniversalString type\r\n\t\t\t\tcase 28:\r\n\t\t\t\t\tnewASN1Type = UniversalString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region CharacterString type\r\n\t\t\t\tcase 29:\r\n\t\t\t\t\tnewASN1Type = CharacterString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region BmpString type\r\n\t\t\t\tcase 30:\r\n\t\t\t\t\tnewASN1Type = BmpString;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region DATE type\r\n\t\t\t\tcase 31:\r\n\t\t\t\t\tnewASN1Type = DATE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region TimeOfDay type\r\n\t\t\t\tcase 32:\r\n\t\t\t\t\tnewASN1Type = TimeOfDay;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Date-Time type\r\n\t\t\t\tcase 33:\r\n\t\t\t\t\tnewASN1Type = DateTime;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region Duration type\r\n\t\t\t\tcase 34:\r\n\t\t\t\t\tnewASN1Type = Duration;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//endregion\r\n\t\t\t\t//region default\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet newObject;\r\n\r\n\t\t\t\t\t\tif(returnObject.idBlock.isConstructed === true)\r\n\t\t\t\t\t\t\tnewObject = new Constructed();\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tnewObject = new Primitive();\r\n\r\n\t\t\t\t\t\tnewObject.idBlock = returnObject.idBlock;\r\n\t\t\t\t\t\tnewObject.lenBlock = returnObject.lenBlock;\r\n\t\t\t\t\t\tnewObject.warnings = returnObject.warnings;\r\n\r\n\t\t\t\t\t\treturnObject = newObject;\r\n\r\n\t\t\t\t\t\tresultOffset = returnObject.fromBER(inputBuffer, inputOffset, inputLength);\r\n\t\t\t\t\t}\r\n\t\t\t\t//endregion\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t//endregion\r\n\t\t//region All other tag classes\r\n\t\tcase 2: // APPLICATION\r\n\t\tcase 3: // CONTEXT-SPECIFIC\r\n\t\tcase 4: // PRIVATE\r\n\t\tdefault:\r\n\t\t\t{\r\n\t\t\t\tif(returnObject.idBlock.isConstructed === true)\r\n\t\t\t\t\tnewASN1Type = Constructed;\r\n\t\t\t\telse\r\n\t\t\t\t\tnewASN1Type = Primitive;\r\n\t\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Change type and perform BER decoding\r\n\treturnObject = localChangeType(returnObject, newASN1Type);\r\n\tresultOffset = returnObject.fromBER(inputBuffer, inputOffset, (returnObject.lenBlock.isIndefiniteForm === true) ? inputLength : returnObject.lenBlock.length);\r\n\t//endregion\r\n\r\n\t//region Coping incoming buffer for entire ASN.1 block\r\n\treturnObject.valueBeforeDecode = inputBuffer.slice(incomingOffset, incomingOffset + returnObject.blockLength);\r\n\t//endregion\r\n\r\n\treturn {\r\n\t\toffset: resultOffset,\r\n\t\tresult: returnObject\r\n\t};\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Major function for decoding ASN.1 BER array into internal library structuries\r\n * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array of bytes\r\n */\r\nexport function fromBER(inputBuffer)\r\n{\r\n\tif(inputBuffer.byteLength === 0)\r\n\t{\r\n\t\tconst result = new BaseBlock({}, Object);\r\n\t\tresult.error = \"Input buffer has zero length\";\r\n\r\n\t\treturn {\r\n\t\t\toffset: (-1),\r\n\t\t\tresult\r\n\t\t};\r\n\t}\r\n\r\n\treturn LocalFromBER(inputBuffer, 0, inputBuffer.byteLength);\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Major scheme verification function\r\n//**************************************************************************************\r\n/**\r\n * Compare of two ASN.1 object trees\r\n * @param {!Object} root Root of input ASN.1 object tree\r\n * @param {!Object} inputData Input ASN.1 object tree\r\n * @param {!Object} inputSchema Input ASN.1 schema to compare with\r\n * @return {{verified: boolean}|{verified:boolean, result: Object}}\r\n */\r\nexport function compareSchema(root, inputData, inputSchema)\r\n{\r\n\t//region Special case for Choice schema element type\r\n\tif(inputSchema instanceof Choice)\r\n\t{\r\n\t\tconst choiceResult = false;\r\n\r\n\t\tfor(let j = 0; j < inputSchema.value.length; j++)\r\n\t\t{\r\n\t\t\tconst result = compareSchema(root, inputData, inputSchema.value[j]);\r\n\t\t\tif(result.verified === true)\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tverified: true,\r\n\t\t\t\t\tresult: root\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(choiceResult === false)\r\n\t\t{\r\n\t\t\tconst _result = {\r\n\t\t\t\tverified: false,\r\n\t\t\t\tresult: {\r\n\t\t\t\t\terror: \"Wrong values for Choice type\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t\t\t\t_result.name = inputSchema.name;\r\n\r\n\t\t\treturn _result;\r\n\t\t}\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Special case for Any schema element type\r\n\tif(inputSchema instanceof Any)\r\n\t{\r\n\t\t//region Add named component of ASN.1 schema\r\n\t\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t\t\troot[inputSchema.name] = inputData;\r\n\t\t//endregion\r\n\r\n\t\treturn {\r\n\t\t\tverified: true,\r\n\t\t\tresult: root\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Initial check\r\n\tif((root instanceof Object) === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong root object\" }\r\n\t\t};\r\n\t}\r\n\r\n\tif((inputData instanceof Object) === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 data\" }\r\n\t\t};\r\n\t}\r\n\r\n\tif((inputSchema instanceof Object) === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\r\n\tif((\"idBlock\" in inputSchema) === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Comparing idBlock properties in ASN.1 data and ASN.1 schema\r\n\t//region Encode and decode ASN.1 schema idBlock\r\n\t/// <remarks>This encoding/decoding is neccessary because could be an errors in schema definition</remarks>\r\n\tif((\"fromBER\" in inputSchema.idBlock) === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\r\n\tif((\"toBER\" in inputSchema.idBlock) === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\r\n\tconst encodedId = inputSchema.idBlock.toBER(false);\r\n\tif(encodedId.byteLength === 0)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Error encoding idBlock for ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\r\n\tconst decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\r\n\tif(decodedOffset === (-1))\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Error decoding idBlock for ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\r\n\t//region tagClass\r\n\tif(inputSchema.idBlock.hasOwnProperty(\"tagClass\") === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\r\n\tif(inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: root\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\t//region tagNumber\r\n\tif(inputSchema.idBlock.hasOwnProperty(\"tagNumber\") === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\r\n\tif(inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: root\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\t//region isConstructed\r\n\tif(inputSchema.idBlock.hasOwnProperty(\"isConstructed\") === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\r\n\tif(inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: root\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\t//region isHexOnly\r\n\tif((\"isHexOnly\" in inputSchema.idBlock) === false) // Since 'isHexOnly' is an inhirited property\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t};\r\n\t}\r\n\r\n\tif(inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: root\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\t//region valueHex\r\n\tif(inputSchema.idBlock.isHexOnly === true)\r\n\t{\r\n\t\tif((\"valueHex\" in inputSchema.idBlock) === false) // Since 'valueHex' is an inhirited property\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tverified: false,\r\n\t\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst schemaView = new Uint8Array(inputSchema.idBlock.valueHex);\r\n\t\tconst asn1View = new Uint8Array(inputData.idBlock.valueHex);\r\n\r\n\t\tif(schemaView.length !== asn1View.length)\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tverified: false,\r\n\t\t\t\tresult: root\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfor(let i = 0; i < schemaView.length; i++)\r\n\t\t{\r\n\t\t\tif(schemaView[i] !== asn1View[1])\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tverified: false,\r\n\t\t\t\t\tresult: root\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//endregion\r\n\t//endregion\r\n\r\n\t//region Add named component of ASN.1 schema\r\n\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t{\r\n\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\r\n\t\tif(inputSchema.name !== \"\")\r\n\t\t\troot[inputSchema.name] = inputData;\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Getting next ASN.1 block for comparition\r\n\tif(inputSchema.idBlock.isConstructed === true)\r\n\t{\r\n\t\tlet admission = 0;\r\n\t\tlet result = { verified: false };\r\n\r\n\t\tlet maxLength = inputSchema.valueBlock.value.length;\r\n\r\n\t\tif(maxLength > 0)\r\n\t\t{\r\n\t\t\tif(inputSchema.valueBlock.value[0] instanceof Repeated)\r\n\t\t\t\tmaxLength = inputData.valueBlock.value.length;\r\n\t\t}\r\n\r\n\t\t//region Special case when constructive value has no elements\r\n\t\tif(maxLength === 0)\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tverified: true,\r\n\t\t\t\tresult: root\r\n\t\t\t};\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Special case when \"inputData\" has no values and \"inputSchema\" has all optional values\r\n\t\tif((inputData.valueBlock.value.length === 0) &&\r\n\t\t\t(inputSchema.valueBlock.value.length !== 0))\r\n\t\t{\r\n\t\t\tlet _optional = true;\r\n\r\n\t\t\tfor(let i = 0; i < inputSchema.valueBlock.value.length; i++)\r\n\t\t\t\t_optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\r\n\r\n\t\t\tif(_optional === true)\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tverified: true,\r\n\t\t\t\t\tresult: root\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t//region Delete early added name of block\r\n\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t\t\t{\r\n\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\r\n\t\t\t\tif(inputSchema.name !== \"\")\r\n\t\t\t\t\tdelete root[inputSchema.name];\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\r\n\t\t\troot.error = \"Inconsistent object length\";\r\n\r\n\t\t\treturn {\r\n\t\t\t\tverified: false,\r\n\t\t\t\tresult: root\r\n\t\t\t};\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\tfor(let i = 0; i < maxLength; i++)\r\n\t\t{\r\n\t\t\t//region Special case when there is an \"optional\" element of ASN.1 schema at the end\r\n\t\t\tif((i - admission) >= inputData.valueBlock.value.length)\r\n\t\t\t{\r\n\t\t\t\tif(inputSchema.valueBlock.value[i].optional === false)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst _result = {\r\n\t\t\t\t\t\tverified: false,\r\n\t\t\t\t\t\tresult: root\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\troot.error = \"Inconsistent length between ASN.1 data and schema\";\r\n\r\n\t\t\t\t\t//region Delete early added name of block\r\n\t\t\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\r\n\t\t\t\t\t\tif(inputSchema.name !== \"\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdelete root[inputSchema.name];\r\n\t\t\t\t\t\t\t_result.name = inputSchema.name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\treturn _result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//region Special case for Repeated type of ASN.1 schema element\r\n\t\t\t\tif(inputSchema.valueBlock.value[0] instanceof Repeated)\r\n\t\t\t\t{\r\n\t\t\t\t\tresult = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\r\n\t\t\t\t\tif(result.verified === false)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(inputSchema.valueBlock.value[0].optional === true)\r\n\t\t\t\t\t\t\tadmission++;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//region Delete early added name of block\r\n\t\t\t\t\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\r\n\t\t\t\t\t\t\t\tif(inputSchema.name !== \"\")\r\n\t\t\t\t\t\t\t\t\tdelete root[inputSchema.name];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif((\"name\" in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet arrayRoot = {};\r\n\r\n\t\t\t\t\t\tif((\"local\" in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local === true))\r\n\t\t\t\t\t\t\tarrayRoot = inputData;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tarrayRoot = root;\r\n\r\n\t\t\t\t\t\tif(typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\r\n\t\t\t\t\t\t\tarrayRoot[inputSchema.valueBlock.value[0].name] = [];\r\n\r\n\t\t\t\t\t\tarrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//endregion\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tresult = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\r\n\t\t\t\t\tif(result.verified === false)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(inputSchema.valueBlock.value[i].optional === true)\r\n\t\t\t\t\t\t\tadmission++;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//region Delete early added name of block\r\n\t\t\t\t\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\r\n\t\t\t\t\t\t\t\tif(inputSchema.name !== \"\")\r\n\t\t\t\t\t\t\t\t\tdelete root[inputSchema.name];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(result.verified === false) // The situation may take place if last element is \"optional\" and verification failed\r\n\t\t{\r\n\t\t\tconst _result = {\r\n\t\t\t\tverified: false,\r\n\t\t\t\tresult: root\r\n\t\t\t};\r\n\r\n\t\t\t//region Delete early added name of block\r\n\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t\t\t{\r\n\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\r\n\t\t\t\tif(inputSchema.name !== \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdelete root[inputSchema.name];\r\n\t\t\t\t\t_result.name = inputSchema.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\r\n\t\t\treturn _result;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tverified: true,\r\n\t\t\tresult: root\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\t//region Ability to parse internal value for primitive-encoded value (value of OctetString, for example)\r\n\tif((\"primitiveSchema\" in inputSchema) &&\r\n\t\t(\"valueHex\" in inputData.valueBlock))\r\n\t{\r\n\t\t//region Decoding of raw ASN.1 data\r\n\t\tconst asn1 = fromBER(inputData.valueBlock.valueHex);\r\n\t\tif(asn1.offset === (-1))\r\n\t\t{\r\n\t\t\tconst _result = {\r\n\t\t\t\tverified: false,\r\n\t\t\t\tresult: asn1.result\r\n\t\t\t};\r\n\r\n\t\t\t//region Delete early added name of block\r\n\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\r\n\t\t\t{\r\n\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\r\n\t\t\t\tif(inputSchema.name !== \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdelete root[inputSchema.name];\r\n\t\t\t\t\t_result.name = inputSchema.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\r\n\t\t\treturn _result;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\treturn compareSchema(root, asn1.result, inputSchema.primitiveSchema);\r\n\t}\r\n\r\n\treturn {\r\n\t\tverified: true,\r\n\t\tresult: root\r\n\t};\r\n\t//endregion\r\n}\r\n//**************************************************************************************\r\n//noinspection JSUnusedGlobalSymbols\r\n/**\r\n * ASN.1 schema verification for ArrayBuffer data\r\n * @param {!ArrayBuffer} inputBuffer Input BER-encoded ASN.1 data\r\n * @param {!Object} inputSchema Input ASN.1 schema to verify against to\r\n * @return {{verified: boolean}|{verified:boolean, result: Object}}\r\n */\r\nexport function verifySchema(inputBuffer, inputSchema)\r\n{\r\n\t//region Initial check\r\n\tif((inputSchema instanceof Object) === false)\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: { error: \"Wrong ASN.1 schema type\" }\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Decoding of raw ASN.1 data\r\n\tconst asn1 = fromBER(inputBuffer);\r\n\tif(asn1.offset === (-1))\r\n\t{\r\n\t\treturn {\r\n\t\t\tverified: false,\r\n\t\t\tresult: asn1.result\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\r\n\t//region Compare ASN.1 struct with input schema\r\n\treturn compareSchema(asn1.result, asn1.result, inputSchema);\r\n\t//endregion\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Major function converting JSON to ASN.1 objects\r\n//**************************************************************************************\r\n//noinspection JSUnusedGlobalSymbols\r\n/**\r\n * Converting from JSON to ASN.1 objects\r\n * @param {string|Object} json JSON string or object to convert to ASN.1 objects\r\n */\r\nexport function fromJSON(json)\r\n{\r\n\t// TODO Implement\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n","//**************************************************************************************\r\n/**\r\n * Making UTC date from local date\r\n * @param {Date} date Date to convert from\r\n * @returns {Date}\r\n */\r\nexport function getUTCDate(date)\r\n{\r\n\t// noinspection NestedFunctionCallJS, MagicNumberJS\r\n\treturn new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Get value for input parameters, or set a default value\r\n * @param {Object} parameters\r\n * @param {string} name\r\n * @param defaultValue\r\n */\r\nexport function getParametersValue(parameters, name, defaultValue)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tif((parameters instanceof Object) === false)\r\n\t\treturn defaultValue;\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(name in parameters)\r\n\t\treturn parameters[name];\r\n\t\r\n\treturn defaultValue;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Converts \"ArrayBuffer\" into a hexdecimal string\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} [inputOffset=0]\r\n * @param {number} [inputLength=inputBuffer.byteLength]\r\n * @param {boolean} [insertSpace=false]\r\n * @returns {string}\r\n */\r\nexport function bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false)\r\n{\r\n\tlet result = \"\";\r\n\t\r\n\tfor(const item of (new Uint8Array(inputBuffer, inputOffset, inputLength)))\r\n\t{\r\n\t\t// noinspection ChainedFunctionCallJS\r\n\t\tconst str = item.toString(16).toUpperCase();\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(str.length === 1)\r\n\t\t\tresult += \"0\";\r\n\t\t\r\n\t\tresult += str;\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(insertSpace)\r\n\t\t\tresult += \" \";\r\n\t}\r\n\t\r\n\treturn result.trim();\r\n}\r\n//**************************************************************************************\r\n// noinspection JSValidateJSDoc, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Check input \"ArrayBuffer\" for common functions\r\n * @param {LocalBaseBlock} baseBlock\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} inputOffset\r\n * @param {number} inputLength\r\n * @returns {boolean}\r\n */\r\nexport function checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif((inputBuffer instanceof ArrayBuffer) === false)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputBuffer.byteLength === 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputOffset < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputLength < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif((inputBuffer.byteLength - inputOffset - inputLength) < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Convert number from 2^base to 2^10\r\n * @param {Uint8Array} inputBuffer\r\n * @param {number} inputBase\r\n * @returns {number}\r\n */\r\nexport function utilFromBase(inputBuffer, inputBase)\r\n{\r\n\tlet result = 0;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tif(inputBuffer.length === 1)\r\n\t\treturn inputBuffer[0];\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tfor(let i = (inputBuffer.length - 1); i >= 0; i--)\r\n\t\tresult += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n\t\r\n\treturn result;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Convert number from 2^10 to 2^base\r\n * @param {!number} value The number to convert\r\n * @param {!number} base The base for 2^base\r\n * @param {number} [reserved=0] Pre-defined number of bytes in output array (-1 = limited by function itself)\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilToBase(value, base, reserved = (-1))\r\n{\r\n\tconst internalReserved = reserved;\r\n\tlet internalValue = value;\r\n\t\r\n\tlet result = 0;\r\n\tlet biggest = Math.pow(2, base);\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(value < biggest)\r\n\t\t{\r\n\t\t\tlet retBuf;\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(internalReserved < 0)\r\n\t\t\t{\r\n\t\t\t\tretBuf = new ArrayBuffer(i);\r\n\t\t\t\tresult = i;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(internalReserved < i)\r\n\t\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(internalReserved);\r\n\t\t\t\t\r\n\t\t\t\tresult = internalReserved;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tfor(let j = (i - 1); j >= 0; j--)\r\n\t\t\t{\r\n\t\t\t\tconst basis = Math.pow(2, j * base);\r\n\t\t\t\t\r\n\t\t\t\tretView[result - j - 1] = Math.floor(internalValue / basis);\r\n\t\t\t\tinternalValue -= (retView[result - j - 1]) * basis;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbiggest *= Math.pow(2, base);\r\n\t}\r\n\t\r\n\treturn new ArrayBuffer(0);\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Concatenate two ArrayBuffers\r\n * @param {...ArrayBuffer} buffers Set of ArrayBuffer\r\n */\r\nexport function utilConcatBuf(...buffers)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const buffer of buffers)\r\n\t\toutputLength += buffer.byteLength;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const buffer of buffers)\r\n\t{\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tretView.set(new Uint8Array(buffer), prevLength);\r\n\t\tprevLength += buffer.byteLength;\r\n\t}\r\n\t\r\n\treturn retBuf;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Concatenate two Uint8Array\r\n * @param {...Uint8Array} views Set of Uint8Array\r\n */\r\nexport function utilConcatView(...views)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const view of views)\r\n\t\toutputLength += view.length;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const view of views)\r\n\t{\r\n\t\tretView.set(view, prevLength);\r\n\t\tprevLength += view.length;\r\n\t}\r\n\t\r\n\treturn retView;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Decoding of \"two complement\" values\r\n * The function must be called in scope of instance of \"hexBlock\" class (\"valueHex\" and \"warnings\" properties must be present)\r\n * @returns {number}\r\n */\r\nexport function utilDecodeTC()\r\n{\r\n\tconst buf = new Uint8Array(this.valueHex);\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(this.valueHex.byteLength >= 2)\r\n\t{\r\n\t\t//noinspection JSBitwiseOperatorUsage, ConstantOnRightSideOfComparisonJS, LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(condition1 || condition2)\r\n\t\t\tthis.warnings.push(\"Needlessly long format\");\r\n\t}\r\n\t\r\n\t//region Create big part of the integer\r\n\tconst bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst bigIntView = new Uint8Array(bigIntBuffer);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < this.valueHex.byteLength; i++)\r\n\t\tbigIntView[i] = 0;\r\n\t\r\n\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\tbigIntView[0] = (buf[0] & 0x80); // mask only the biggest bit\r\n\t\r\n\tconst bigInt = utilFromBase(bigIntView, 8);\r\n\t//endregion\r\n\t\r\n\t//region Create small part of the integer\r\n\tconst smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst smallIntView = new Uint8Array(smallIntBuffer);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let j = 0; j < this.valueHex.byteLength; j++)\r\n\t\tsmallIntView[j] = buf[j];\r\n\t\r\n\t// noinspection MagicNumberJS\r\n\tsmallIntView[0] &= 0x7F; // mask biggest bit\r\n\t\r\n\tconst smallInt = utilFromBase(smallIntView, 8);\r\n\t//endregion\r\n\t\r\n\treturn (smallInt - bigInt);\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Encode integer value to \"two complement\" format\r\n * @param {number} value Value to encode\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilEncodeTC(value)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConditionalExpressionJS\r\n\tconst modValue = (value < 0) ? (value * (-1)) : value;\r\n\tlet bigInt = 128;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(modValue <= bigInt)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(value < 0)\r\n\t\t\t{\r\n\t\t\t\tconst smallInt = bigInt - modValue;\r\n\t\t\t\t\r\n\t\t\t\tconst retBuf = utilToBase(smallInt, 8, i);\r\n\t\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tretView[0] |= 0x80;\r\n\t\t\t\t\r\n\t\t\t\treturn retBuf;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet retBuf = utilToBase(modValue, 8, i);\r\n\t\t\tlet retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t//noinspection JSBitwiseOperatorUsage, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\t\tif(retView[0] & 0x80)\r\n\t\t\t{\r\n\t\t\t\t//noinspection JSCheckFunctionSignatures\r\n\t\t\t\tconst tempBuf = retBuf.slice(0);\r\n\t\t\t\tconst tempView = new Uint8Array(tempBuf);\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n\t\t\t\t// noinspection ReuseOfLocalVariableJS\r\n\t\t\t\tretView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tfor(let k = 0; k < tempBuf.byteLength; k++)\r\n\t\t\t\t\tretView[k + 1] = tempView[k];\r\n\t\t\t\t\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tretView[0] = 0x00;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbigInt *= Math.pow(2, 8);\r\n\t}\r\n\t\r\n\treturn (new ArrayBuffer(0));\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS, ParameterNamingConventionJS\r\n/**\r\n * Compare two array buffers\r\n * @param {!ArrayBuffer} inputBuffer1\r\n * @param {!ArrayBuffer} inputBuffer2\r\n * @returns {boolean}\r\n */\r\nexport function isEqualBuffer(inputBuffer1, inputBuffer2)\r\n{\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(inputBuffer1.byteLength !== inputBuffer2.byteLength)\r\n\t\treturn false;\r\n\t\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tconst view1 = new Uint8Array(inputBuffer1);\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tconst view2 = new Uint8Array(inputBuffer2);\r\n\t\r\n\tfor(let i = 0; i < view1.length; i++)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(view1[i] !== view2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Pad input number with leade \"0\" if needed\r\n * @returns {string}\r\n * @param {number} inputNumber\r\n * @param {number} fullLength\r\n */\r\nexport function padNumber(inputNumber, fullLength)\r\n{\r\n\tconst str = inputNumber.toString(10);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(fullLength < str.length)\r\n\t\treturn \"\";\r\n\t\r\n\tconst dif = fullLength - str.length;\r\n\t\r\n\tconst padding = new Array(dif);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < dif; i++)\r\n\t\tpadding[i] = \"0\";\r\n\t\r\n\tconst paddingString = padding.join(\"\");\r\n\t\r\n\treturn paddingString.concat(str);\r\n}\r\n//**************************************************************************************\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionTooLongJS, FunctionNamingConventionJS\r\n/**\r\n * Encode string into BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} useUrlTemplate If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} skipPadding Skip BASE-64 padding or not\r\n * @param {boolean} skipLeadingZeros Skip leading zeros in input data or not\r\n * @returns {string}\r\n */\r\nexport function toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false)\r\n{\r\n\tlet i = 0;\r\n\t\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tlet flag1 = 0;\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tlet flag2 = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\t// noinspection ConditionalExpressionJS\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\tif(skipLeadingZeros)\r\n\t{\r\n\t\tlet nonZeroPosition = 0;\r\n\t\t\r\n\t\tfor(let i = 0; i < input.length; i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(input.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroPosition = i;\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tinput = input.slice(nonZeroPosition);\r\n\t}\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr1 = input.charCodeAt(i++);\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(i >= input.length)\r\n\t\t\tflag1 = 1;\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr2 = input.charCodeAt(i++);\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(i >= input.length)\r\n\t\t\tflag2 = 1;\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr3 = input.charCodeAt(i++);\r\n\t\t\r\n\t\t// noinspection LocalVariableNamingConventionJS\r\n\t\tconst enc1 = chr1 >> 2;\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tlet enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tlet enc4 = chr3 & 0x3F;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\tif(flag1 === 1)\r\n\t\t{\r\n\t\t\t// noinspection NestedAssignmentJS, AssignmentResultUsedJS, MagicNumberJS\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(flag2 === 1)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(skipPadding)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\t\tif(enc3 === 64)\r\n\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\t\t\tif(enc4 === 64)\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n\t\t\t\telse\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMoreThanThreeNegationsJS, FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionNamingConventionJS\r\n/**\r\n * Decode string from BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} [useUrlTemplate=false] If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} [cutTailZeros=false] If \"true\" then cut tailing zeroz from function result\r\n * @returns {string}\r\n */\r\nexport function fromBase64(input, useUrlTemplate = false, cutTailZeros = false)\r\n{\r\n\t// noinspection ConditionalExpressionJS\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\t//region Aux functions\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, NestedFunctionJS\r\n\tfunction indexof(toSearch)\r\n\t{\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, MagicNumberJS\r\n\t\tfor(let i = 0; i < 64; i++)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tif(template.charAt(i) === toSearch)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection MagicNumberJS\r\n\t\treturn 64;\r\n\t}\r\n\t\r\n\t// noinspection NestedFunctionJS\r\n\tfunction test(incoming)\r\n\t{\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConditionalExpressionJS, MagicNumberJS\r\n\t\treturn ((incoming === 64) ? 0x00 : incoming);\r\n\t}\r\n\t//endregion\r\n\t\r\n\tlet i = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc1 = indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc2 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc3 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc4 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t\r\n\t\t// noinspection LocalVariableNamingConventionJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n\t\t\r\n\t\toutput += String.fromCharCode(chr1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\tif(enc3 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr2);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\tif(enc4 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr3);\r\n\t}\r\n\t\r\n\tif(cutTailZeros)\r\n\t{\r\n\t\tconst outputLength = output.length;\r\n\t\tlet nonZeroStart = (-1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\tfor(let i = (outputLength - 1); i >= 0; i--)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(output.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroStart = i;\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS, NegatedIfStatementJS\r\n\t\tif(nonZeroStart !== (-1))\r\n\t\t\toutput = output.slice(0, nonZeroStart + 1);\r\n\t\telse\r\n\t\t\toutput = \"\";\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\nexport function arrayBufferToString(buffer)\r\n{\r\n\tlet resultString = \"\";\r\n\tconst view = new Uint8Array(buffer);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const element of view)\r\n\t\tresultString += String.fromCharCode(element);\r\n\t\r\n\treturn resultString;\r\n}\r\n//**************************************************************************************\r\nexport function stringToArrayBuffer(str)\r\n{\r\n\tconst stringLength = str.length;\r\n\t\r\n\tconst resultBuffer = new ArrayBuffer(stringLength);\r\n\tconst resultView = new Uint8Array(resultBuffer);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < stringLength; i++)\r\n\t\tresultView[i] = str.charCodeAt(i);\r\n\t\r\n\treturn resultBuffer;\r\n}\r\n//**************************************************************************************\r\nconst log2 = Math.log(2);\r\n//**************************************************************************************\r\n// noinspection FunctionNamingConventionJS\r\n/**\r\n * Get nearest to input length power of 2\r\n * @param {number} length Current length of existing array\r\n * @returns {number}\r\n */\r\nexport function nearestPowerOf2(length)\r\n{\r\n\tconst base = (Math.log(length) / log2);\r\n\t\r\n\tconst floor = Math.floor(base);\r\n\tconst round = Math.round(base);\r\n\t\r\n\t// noinspection ConditionalExpressionJS\r\n\treturn ((floor === round) ? floor : round);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Delete properties by name from specified object\r\n * @param {Object} object Object to delete properties from\r\n * @param {Array.<string>} propsArray Array of properties names\r\n */\r\nexport function clearProps(object, propsArray)\r\n{\r\n\tfor(const prop of propsArray)\r\n\t\tdelete object[prop];\r\n}\r\n//**************************************************************************************\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class AlgorithmIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AlgorithmIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {string} [algorithmId] ObjectIdentifier for algorithm (string representation)\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc ObjectIdentifier for algorithm (string representation)\r\n\t\t */\r\n\t\tthis.algorithmId = getParametersValue(parameters, \"algorithmId\", AlgorithmIdentifier.defaultValues(\"algorithmId\"));\r\n\r\n\t\tif(\"algorithmParams\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Object}\r\n\t\t\t * @desc Any algorithm parameters\r\n\t\t\t */\r\n\t\t\tthis.algorithmParams = getParametersValue(parameters, \"algorithmParams\", AlgorithmIdentifier.defaultValues(\"algorithmParams\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"algorithmId\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"algorithmParams\":\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AlgorithmIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"algorithmId\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"algorithmParams\":\r\n\t\t\t\treturn (memberValue instanceof asn1js.Any);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AlgorithmIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AlgorithmIdentifier  ::=  Sequence  {\r\n\t *    algorithm               OBJECT IDENTIFIER,\r\n\t *    parameters              ANY DEFINED BY algorithm OPTIONAL  }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} algorithmIdentifier ObjectIdentifier for the algorithm\r\n\t\t * @property {string} algorithmParams Any algorithm parameters\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\toptional: (names.optional || false),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.algorithmIdentifier || \"\") }),\r\n\t\t\t\tnew asn1js.Any({ name: (names.algorithmParams || \"\"), optional: true })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"algorithm\",\r\n\t\t\t\"params\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAlgorithmIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\talgorithmIdentifier: \"algorithm\",\r\n\t\t\t\t\talgorithmParams: \"params\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AlgorithmIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.algorithmId = asn1.result.algorithm.valueBlock.toString();\r\n\t\tif(\"params\" in asn1.result)\r\n\t\t\tthis.algorithmParams = asn1.result.params;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.algorithmId }));\r\n\t\tif((\"algorithmParams\" in this) && ((this.algorithmParams instanceof asn1js.Any) === false))\r\n\t\t\toutputArray.push(this.algorithmParams);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\talgorithmId: this.algorithmId\r\n\t\t};\r\n\r\n\t\tif((\"algorithmParams\" in this) && ((this.algorithmParams instanceof asn1js.Any) === false))\r\n\t\t\tobject.algorithmParams = this.algorithmParams.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Check that two \"AlgorithmIdentifiers\" are equal\r\n\t * @param {AlgorithmIdentifier} algorithmIdentifier\r\n\t * @returns {boolean}\r\n\t */\r\n\tisEqual(algorithmIdentifier)\r\n\t{\r\n\t\t//region Check input type\r\n\t\tif((algorithmIdentifier instanceof AlgorithmIdentifier) === false)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\r\n\t\t//region Check \"algorithm_id\"\r\n\t\tif(this.algorithmId !== algorithmIdentifier.algorithmId)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\r\n\t\t//region Check \"algorithm_params\"\r\n\t\tif(\"algorithmParams\" in this)\r\n\t\t{\r\n\t\t\tif(\"algorithmParams\" in algorithmIdentifier)\r\n\t\t\t\treturn JSON.stringify(this.algorithmParams) === JSON.stringify(algorithmIdentifier.algorithmParams);\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif(\"algorithmParams\" in algorithmIdentifier)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { utilConcatBuf } from \"pvutils\";\r\nimport CryptoEngine from \"./CryptoEngine.js\";\r\n//**************************************************************************************\r\n//region Crypto engine related function\r\n//**************************************************************************************\r\nlet engine = {\r\n\tname: \"none\",\r\n\tcrypto: null,\r\n\tsubtle: null\r\n};\r\n//**************************************************************************************\r\nexport function setEngine(name, crypto, subtle)\r\n{\r\n\t//region We are in Node\r\n\t// noinspection JSUnresolvedVariable\r\n\tif((typeof process !== \"undefined\") && (\"pid\" in process) && (typeof global !== \"undefined\") && (typeof window === \"undefined\"))\r\n\t{\r\n\t\t// noinspection ES6ModulesDependencies, JSUnresolvedVariable\r\n\t\tif(typeof global[process.pid] === \"undefined\")\r\n\t\t{\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tglobal[process.pid] = {};\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tif(typeof global[process.pid] !== \"object\")\r\n\t\t\t{\r\n\t\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\t\tthrow new Error(`Name global.${process.pid} already exists and it is not an object`);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection JSUnresolvedVariable\r\n\t\tif(typeof global[process.pid].pkijs === \"undefined\")\r\n\t\t{\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tglobal[process.pid].pkijs = {};\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tif(typeof global[process.pid].pkijs !== \"object\")\r\n\t\t\t{\r\n\t\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\t\tthrow new Error(`Name global.${process.pid}.pkijs already exists and it is not an object`);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection JSUnresolvedVariable\r\n\t\tglobal[process.pid].pkijs.engine = {\r\n\t\t\tname: name,\r\n\t\t\tcrypto: crypto,\r\n\t\t\tsubtle: subtle\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n\t//region We are in browser\r\n\telse\r\n\t{\r\n\t\tengine = {\r\n\t\t\tname: name,\r\n\t\t\tcrypto: crypto,\r\n\t\t\tsubtle: subtle\r\n\t\t};\r\n\t}\r\n\t//endregion\r\n}\r\n//**************************************************************************************\r\nexport function getEngine()\r\n{\r\n\t//region We are in Node\r\n\t// noinspection JSUnresolvedVariable\r\n\tif((typeof process !== \"undefined\") && (\"pid\" in process) && (typeof global !== \"undefined\") && (typeof window === \"undefined\"))\r\n\t{\r\n\t\tlet _engine;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\t_engine = global[process.pid].pkijs.engine;\r\n\t\t}\r\n\t\tcatch(ex)\r\n\t\t{\r\n\t\t\tthrow new Error(\"Please call \\\"setEngine\\\" before call to \\\"getEngine\\\"\");\r\n\t\t}\r\n\t\t\r\n\t\treturn _engine;\r\n\t}\r\n\t//endregion\r\n\t\r\n\treturn engine;\r\n}\r\n//**************************************************************************************\r\n(function initCryptoEngine()\r\n{\r\n\tif(typeof self !== \"undefined\")\r\n\t{\r\n\t\tif(\"crypto\" in self)\r\n\t\t{\r\n\t\t\tlet engineName = \"webcrypto\";\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Standard crypto object\r\n\t\t\t * @type {Object}\r\n\t\t\t * @property {Object} [webkitSubtle] Subtle object from Apple\r\n\t\t\t */\r\n\t\t\tconst cryptoObject = self.crypto;\r\n\t\t\tlet subtleObject;\r\n\t\t\t\r\n\t\t\t// Apple Safari support\r\n\t\t\tif(\"webkitSubtle\" in self.crypto)\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tsubtleObject = self.crypto.webkitSubtle;\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tsubtleObject = self.crypto.subtle;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tengineName = \"safari\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(\"subtle\" in self.crypto)\r\n\t\t\t\tsubtleObject = self.crypto.subtle;\r\n\r\n\r\n\t\t\tif(typeof subtleObject === \"undefined\")\r\n\t\t\t{\r\n\t\t\t\tengine = {\r\n\t\t\t\t\tname: engineName,\r\n\t\t\t\t\tcrypto: cryptoObject,\r\n\t\t\t\t\tsubtle: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tengine = {\r\n\t\t\t\t\tname: engineName,\r\n\t\t\t\t\tcrypto: cryptoObject,\r\n\t\t\t\t\tsubtle: new CryptoEngine({name: engineName, crypto: self.crypto, subtle: subtleObject})\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetEngine(engine.name, engine.crypto, engine.subtle);\r\n})();\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n//region Declaration of common functions\r\n//**************************************************************************************\r\n/**\r\n * Get crypto subtle from current \"crypto engine\" or \"undefined\"\r\n * @returns {({decrypt, deriveKey, digest, encrypt, exportKey, generateKey, importKey, sign, unwrapKey, verify, wrapKey}|null)}\r\n */\r\nexport function getCrypto()\r\n{\r\n\tconst _engine = getEngine();\r\n\t\r\n\tif(_engine.subtle !== null)\r\n\t\treturn _engine.subtle;\r\n\t\r\n\treturn undefined;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Initialize input Uint8Array by random values (with help from current \"crypto engine\")\r\n * @param {!Uint8Array} view\r\n * @returns {*}\r\n */\r\nexport function getRandomValues(view)\r\n{\r\n\treturn getEngine().subtle.getRandomValues(view);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Get OID for each specific algorithm\r\n * @param {Object} algorithm\r\n * @returns {string}\r\n */\r\nexport function getOIDByAlgorithm(algorithm)\r\n{\r\n\treturn getEngine().subtle.getOIDByAlgorithm(algorithm);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Get default algorithm parameters for each kind of operation\r\n * @param {string} algorithmName Algorithm name to get common parameters for\r\n * @param {string} operation Kind of operation: \"sign\", \"encrypt\", \"generatekey\", \"importkey\", \"exportkey\", \"verify\"\r\n * @returns {*}\r\n */\r\nexport function getAlgorithmParameters(algorithmName, operation)\r\n{\r\n\treturn getEngine().subtle.getAlgorithmParameters(algorithmName, operation);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Create CMS ECDSA signature from WebCrypto ECDSA signature\r\n * @param {ArrayBuffer} signatureBuffer WebCrypto result of \"sign\" function\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function createCMSECDSASignature(signatureBuffer)\r\n{\r\n\t//region Initial check for correct length\r\n\tif((signatureBuffer.byteLength % 2) !== 0)\r\n\t\treturn new ArrayBuffer(0);\r\n\t//endregion\r\n\t\r\n\t//region Initial variables\r\n\tconst length = signatureBuffer.byteLength / 2; // There are two equal parts inside incoming ArrayBuffer\r\n\t\r\n\tconst rBuffer = new ArrayBuffer(length);\r\n\tconst rView = new Uint8Array(rBuffer);\r\n\trView.set(new Uint8Array(signatureBuffer, 0, length));\r\n\t\r\n\tconst rInteger = new asn1js.Integer({ valueHex: rBuffer });\r\n\t\r\n\tconst sBuffer = new ArrayBuffer(length);\r\n\tconst sView = new Uint8Array(sBuffer);\r\n\tsView.set(new Uint8Array(signatureBuffer, length, length));\r\n\t\r\n\tconst sInteger = new asn1js.Integer({ valueHex: sBuffer });\r\n\t//endregion\r\n\t\r\n\treturn (new asn1js.Sequence({\r\n\t\tvalue: [\r\n\t\t\trInteger.convertToDER(),\r\n\t\t\tsInteger.convertToDER()\r\n\t\t]\r\n\t})).toBER(false);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * String preparation function. In a future here will be realization of algorithm from RFC4518\r\n * @param {string} inputString JavaScript string. As soon as for each ASN.1 string type we have a specific transformation function here we will work with pure JavaScript string\r\n * @returns {string} Formated string\r\n */\r\nexport function stringPrep(inputString)\r\n{\r\n\t//region Initial variables\r\n\tlet isSpace = false;\r\n\tlet cuttedResult = \"\";\r\n\t//endregion\r\n\t\r\n\tconst result = inputString.trim(); // Trim input string\r\n\t\r\n\t//region Change all sequence of SPACE down to SPACE char\r\n\tfor(let i = 0; i < result.length; i++)\r\n\t{\r\n\t\tif(result.charCodeAt(i) === 32)\r\n\t\t{\r\n\t\t\tif(isSpace === false)\r\n\t\t\t\tisSpace = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(isSpace)\r\n\t\t\t{\r\n\t\t\t\tcuttedResult += \" \";\r\n\t\t\t\tisSpace = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcuttedResult += result[i];\r\n\t\t}\r\n\t}\r\n\t//endregion\r\n\t\r\n\treturn cuttedResult.toLowerCase();\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Create a single ArrayBuffer from CMS ECDSA signature\r\n * @param {Sequence} cmsSignature ASN.1 SEQUENCE contains CMS ECDSA signature\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function createECDSASignatureFromCMS(cmsSignature)\r\n{\r\n\t//region Check input variables\r\n\tif((cmsSignature instanceof asn1js.Sequence) === false)\r\n\t\treturn new ArrayBuffer(0);\r\n\t\r\n\tif(cmsSignature.valueBlock.value.length !== 2)\r\n\t\treturn new ArrayBuffer(0);\r\n\t\r\n\tif((cmsSignature.valueBlock.value[0] instanceof asn1js.Integer) === false)\r\n\t\treturn new ArrayBuffer(0);\r\n\t\r\n\tif((cmsSignature.valueBlock.value[1] instanceof asn1js.Integer) === false)\r\n\t\treturn new ArrayBuffer(0);\r\n\t//endregion\r\n\t\r\n\tconst rValue = cmsSignature.valueBlock.value[0].convertFromDER();\r\n\tconst sValue = cmsSignature.valueBlock.value[1].convertFromDER();\r\n\t\r\n\t//region Check the lengths of two parts are equal\r\n\tswitch(true)\r\n\t{\r\n\t\tcase (rValue.valueBlock.valueHex.byteLength < sValue.valueBlock.valueHex.byteLength):\r\n\t\t\t{\r\n\t\t\t\tif((sValue.valueBlock.valueHex.byteLength - rValue.valueBlock.valueHex.byteLength) !== 1)\r\n\t\t\t\t\tthrow new Error(\"Incorrect DER integer decoding\");\r\n\t\t\t\t\r\n\t\t\t\tconst correctedLength = sValue.valueBlock.valueHex.byteLength;\r\n\t\t\t\t\r\n\t\t\t\tconst rValueView = new Uint8Array(rValue.valueBlock.valueHex);\r\n\t\t\t\t\r\n\t\t\t\tconst rValueBufferCorrected = new ArrayBuffer(correctedLength);\r\n\t\t\t\tconst rValueViewCorrected = new Uint8Array(rValueBufferCorrected);\r\n\t\t\t\t\r\n\t\t\t\trValueViewCorrected.set(rValueView, 1);\r\n\t\t\t\trValueViewCorrected[0] = 0x00; // In order to be sure we do not have any garbage here\r\n\t\t\t\t\r\n\t\t\t\treturn utilConcatBuf(rValueBufferCorrected, sValue.valueBlock.valueHex);\r\n\t\t\t}\r\n\t\tcase (rValue.valueBlock.valueHex.byteLength > sValue.valueBlock.valueHex.byteLength):\r\n\t\t\t{\r\n\t\t\t\tif((rValue.valueBlock.valueHex.byteLength - sValue.valueBlock.valueHex.byteLength) !== 1)\r\n\t\t\t\t\tthrow new Error(\"Incorrect DER integer decoding\");\r\n\t\t\t\t\r\n\t\t\t\tconst correctedLength = rValue.valueBlock.valueHex.byteLength;\r\n\t\t\t\t\r\n\t\t\t\tconst sValueView = new Uint8Array(sValue.valueBlock.valueHex);\r\n\t\t\t\t\r\n\t\t\t\tconst sValueBufferCorrected = new ArrayBuffer(correctedLength);\r\n\t\t\t\tconst sValueViewCorrected = new Uint8Array(sValueBufferCorrected);\r\n\t\t\t\t\r\n\t\t\t\tsValueViewCorrected.set(sValueView, 1);\r\n\t\t\t\tsValueViewCorrected[0] = 0x00; // In order to be sure we do not have any garbage here\r\n\t\t\t\t\r\n\t\t\t\treturn utilConcatBuf(rValue.valueBlock.valueHex, sValueBufferCorrected);\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\t{\r\n\t\t\t\t//region In case we have equal length and the length is not even with 2\r\n\t\t\t\tif(rValue.valueBlock.valueHex.byteLength % 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst correctedLength = (rValue.valueBlock.valueHex.byteLength + 1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst rValueView = new Uint8Array(rValue.valueBlock.valueHex);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst rValueBufferCorrected = new ArrayBuffer(correctedLength);\r\n\t\t\t\t\tconst rValueViewCorrected = new Uint8Array(rValueBufferCorrected);\r\n\t\t\t\t\t\r\n\t\t\t\t\trValueViewCorrected.set(rValueView, 1);\r\n\t\t\t\t\trValueViewCorrected[0] = 0x00; // In order to be sure we do not have any garbage here\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst sValueView = new Uint8Array(sValue.valueBlock.valueHex);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst sValueBufferCorrected = new ArrayBuffer(correctedLength);\r\n\t\t\t\t\tconst sValueViewCorrected = new Uint8Array(sValueBufferCorrected);\r\n\t\t\t\t\t\r\n\t\t\t\t\tsValueViewCorrected.set(sValueView, 1);\r\n\t\t\t\t\tsValueViewCorrected[0] = 0x00; // In order to be sure we do not have any garbage here\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn utilConcatBuf(rValueBufferCorrected, sValueBufferCorrected);\r\n\t\t\t\t}\r\n\t\t\t\t//endregion\r\n\t\t\t}\r\n\t}\r\n\t//endregion\r\n\t\r\n\treturn utilConcatBuf(rValue.valueBlock.valueHex, sValue.valueBlock.valueHex);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Get WebCrypto algorithm by wel-known OID\r\n * @param {string} oid well-known OID to search for\r\n * @returns {Object}\r\n */\r\nexport function getAlgorithmByOID(oid)\r\n{\r\n\treturn getEngine().subtle.getAlgorithmByOID(oid);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Getting hash algorithm by signature algorithm\r\n * @param {AlgorithmIdentifier} signatureAlgorithm Signature algorithm\r\n * @returns {string}\r\n */\r\nexport function getHashAlgorithm(signatureAlgorithm)\r\n{\r\n\treturn getEngine().subtle.getHashAlgorithm(signatureAlgorithm);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * ANS X9.63 Key Derivation Function having a \"Counter\" as a parameter\r\n * @param {string} hashFunction Used hash function\r\n * @param {ArrayBuffer} Zbuffer ArrayBuffer containing ECDH shared secret to derive from\r\n * @param {number} Counter\r\n * @param {ArrayBuffer} SharedInfo Usually DER encoded \"ECC_CMS_SharedInfo\" structure\r\n */\r\nexport function kdfWithCounter(hashFunction, Zbuffer, Counter, SharedInfo)\r\n{\r\n\t//region Check of input parameters\r\n\tswitch(hashFunction.toUpperCase())\r\n\t{\r\n\t\tcase \"SHA-1\":\r\n\t\tcase \"SHA-256\":\r\n\t\tcase \"SHA-384\":\r\n\t\tcase \"SHA-512\":\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn Promise.reject(`Unknown hash function: ${hashFunction}`);\r\n\t}\r\n\t\r\n\tif((Zbuffer instanceof ArrayBuffer) === false)\r\n\t\treturn Promise.reject(\"Please set \\\"Zbuffer\\\" as \\\"ArrayBuffer\\\"\");\r\n\t\r\n\tif(Zbuffer.byteLength === 0)\r\n\t\treturn Promise.reject(\"\\\"Zbuffer\\\" has zero length, error\");\r\n\t\r\n\tif((SharedInfo instanceof ArrayBuffer) === false)\r\n\t\treturn Promise.reject(\"Please set \\\"SharedInfo\\\" as \\\"ArrayBuffer\\\"\");\r\n\t\r\n\tif(Counter > 255)\r\n\t\treturn Promise.reject(\"Please set \\\"Counter\\\" variable to value less or equal to 255\");\r\n\t//endregion\r\n\t\r\n\t//region Initial variables\r\n\tconst counterBuffer = new ArrayBuffer(4);\r\n\tconst counterView = new Uint8Array(counterBuffer);\r\n\tcounterView[0] = 0x00;\r\n\tcounterView[1] = 0x00;\r\n\tcounterView[2] = 0x00;\r\n\tcounterView[3] = Counter;\r\n\t\r\n\tlet combinedBuffer = new ArrayBuffer(0);\r\n\t//endregion\r\n\t\r\n\t//region Get a \"crypto\" extension\r\n\tconst crypto = getCrypto();\r\n\tif(typeof crypto === \"undefined\")\r\n\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t//endregion\r\n\t\r\n\t//region Create a combined ArrayBuffer for digesting\r\n\tcombinedBuffer = utilConcatBuf(combinedBuffer, Zbuffer);\r\n\tcombinedBuffer = utilConcatBuf(combinedBuffer, counterBuffer);\r\n\tcombinedBuffer = utilConcatBuf(combinedBuffer, SharedInfo);\r\n\t//endregion\r\n\t\r\n\t//region Return digest of combined ArrayBuffer and information about current counter\r\n\treturn crypto.digest({\r\n\t\tname: hashFunction\r\n\t},\r\n\tcombinedBuffer)\r\n\t\t.then(result =>\r\n\t\t\t({\r\n\t\t\t\tcounter: Counter,\r\n\t\t\t\tresult\r\n\t\t\t}));\r\n\t//endregion\r\n}\r\n//**************************************************************************************\r\n/**\r\n * ANS X9.63 Key Derivation Function\r\n * @param {string} hashFunction Used hash function\r\n * @param {ArrayBuffer} Zbuffer ArrayBuffer containing ECDH shared secret to derive from\r\n * @param {number} keydatalen Length (!!! in BITS !!!) of used kew derivation function\r\n * @param {ArrayBuffer} SharedInfo Usually DER encoded \"ECC_CMS_SharedInfo\" structure\r\n */\r\nexport function kdf(hashFunction, Zbuffer, keydatalen, SharedInfo)\r\n{\r\n\t//region Initial variables\r\n\tlet hashLength = 0;\r\n\tlet maxCounter = 1;\r\n\t\r\n\tconst kdfArray = [];\r\n\t//endregion\r\n\t\r\n\t//region Check of input parameters\r\n\tswitch(hashFunction.toUpperCase())\r\n\t{\r\n\t\tcase \"SHA-1\":\r\n\t\t\thashLength = 160; // In bits\r\n\t\t\tbreak;\r\n\t\tcase \"SHA-256\":\r\n\t\t\thashLength = 256; // In bits\r\n\t\t\tbreak;\r\n\t\tcase \"SHA-384\":\r\n\t\t\thashLength = 384; // In bits\r\n\t\t\tbreak;\r\n\t\tcase \"SHA-512\":\r\n\t\t\thashLength = 512; // In bits\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn Promise.reject(`Unknown hash function: ${hashFunction}`);\r\n\t}\r\n\t\r\n\tif((Zbuffer instanceof ArrayBuffer) === false)\r\n\t\treturn Promise.reject(\"Please set \\\"Zbuffer\\\" as \\\"ArrayBuffer\\\"\");\r\n\t\r\n\tif(Zbuffer.byteLength === 0)\r\n\t\treturn Promise.reject(\"\\\"Zbuffer\\\" has zero length, error\");\r\n\t\r\n\tif((SharedInfo instanceof ArrayBuffer) === false)\r\n\t\treturn Promise.reject(\"Please set \\\"SharedInfo\\\" as \\\"ArrayBuffer\\\"\");\r\n\t//endregion\r\n\t\r\n\t//region Calculated maximum value of \"Counter\" variable\r\n\tconst quotient = keydatalen / hashLength;\r\n\t\r\n\tif(Math.floor(quotient) > 0)\r\n\t{\r\n\t\tmaxCounter = Math.floor(quotient);\r\n\t\t\r\n\t\tif((quotient - maxCounter) > 0)\r\n\t\t\tmaxCounter++;\r\n\t}\r\n\t//endregion\r\n\t\r\n\t//region Create an array of \"kdfWithCounter\"\r\n\tfor(let i = 1; i <= maxCounter; i++)\r\n\t\tkdfArray.push(kdfWithCounter(hashFunction, Zbuffer, i, SharedInfo));\r\n\t//endregion\r\n\t\r\n\t//region Return combined digest with specified length\r\n\treturn Promise.all(kdfArray).then(incomingResult =>\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet combinedBuffer = new ArrayBuffer(0);\r\n\t\tlet currentCounter = 1;\r\n\t\tlet found = true;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Combine all buffer together\r\n\t\twhile(found)\r\n\t\t{\r\n\t\t\tfound = false;\r\n\t\t\t\r\n\t\t\tfor(const result of incomingResult)\r\n\t\t\t{\r\n\t\t\t\tif(result.counter === currentCounter)\r\n\t\t\t\t{\r\n\t\t\t\t\tcombinedBuffer = utilConcatBuf(combinedBuffer, result.result);\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcurrentCounter++;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create output buffer with specified length\r\n\t\tkeydatalen >>= 3; // Divide by 8 since \"keydatalen\" is in bits\r\n\t\t\r\n\t\tif(combinedBuffer.byteLength > keydatalen)\r\n\t\t{\r\n\t\t\tconst newBuffer = new ArrayBuffer(keydatalen);\r\n\t\t\tconst newView = new Uint8Array(newBuffer);\r\n\t\t\tconst combinedView = new Uint8Array(combinedBuffer);\r\n\t\t\t\r\n\t\t\tfor(let i = 0; i < keydatalen; i++)\r\n\t\t\t\tnewView[i] = combinedView[i];\r\n\t\t\t\r\n\t\t\treturn newBuffer;\r\n\t\t}\r\n\t\t\r\n\t\treturn combinedBuffer; // Since the situation when \"combinedBuffer.byteLength < keydatalen\" here we have only \"combinedBuffer.byteLength === keydatalen\"\r\n\t\t//endregion\r\n\t});\r\n\t//endregion\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC2986\r\n */\r\nexport default class Attribute {\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Attribute class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc ObjectIdentifier for attribute (string representation)\r\n\t\t */\r\n\t\tthis.type = getParametersValue(parameters, \"type\", Attribute.defaultValues(\"type\"));\r\n\t\t/**\r\n\t\t * @type {Array}\r\n\t\t * @desc Any attribute values\r\n\t\t */\r\n\t\tthis.values = getParametersValue(parameters, \"values\", Attribute.defaultValues(\"values\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"values\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Attribute class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"values\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Attribute class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\r\n\t *    type   ATTRIBUTE.&id({IOSet}),\r\n\t *    values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.type || \"\") }),\r\n\t\t\t\tnew asn1js.Set({\r\n\t\t\t\t\tname: (names.setName || \"\"),\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.values || \"\"),\r\n\t\t\t\t\t\t\tvalue: new asn1js.Any()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"type\",\r\n\t\t\t\"values\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAttribute.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\ttype: \"type\",\r\n\t\t\t\t\tvalues: \"values\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Attribute\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.type = asn1.result.type.valueBlock.toString();\r\n\t\tthis.values = asn1.result.values;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.type }),\r\n\t\t\t\tnew asn1js.Set({\r\n\t\t\t\t\tvalue: this.values\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\ttype: this.type,\r\n\t\t\tvalues: Array.from(this.values, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","module.exports = require(\"regenerator-runtime\");\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class EncryptedContentInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for EncryptedContentInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc contentType\r\n\t\t */\r\n\t\tthis.contentType = getParametersValue(parameters, \"contentType\", EncryptedContentInfo.defaultValues(\"contentType\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc contentEncryptionAlgorithm\r\n\t\t */\r\n\t\tthis.contentEncryptionAlgorithm = getParametersValue(parameters, \"contentEncryptionAlgorithm\", EncryptedContentInfo.defaultValues(\"contentEncryptionAlgorithm\"));\r\n\r\n\t\tif(\"encryptedContent\" in parameters)\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @desc encryptedContent (!!!) could be contructive or primitive value (!!!)\r\n\t\t\t */\r\n\t\t\tthis.encryptedContent = parameters.encryptedContent;\r\n\t\t\t\r\n\t\t\tif((this.encryptedContent.idBlock.tagClass === 1) &&\r\n\t\t\t\t(this.encryptedContent.idBlock.tagNumber === 4))\r\n\t\t\t{\r\n\t\t\t\t//region Divide OCTETSTRING value down to small pieces\r\n\t\t\t\tif(this.encryptedContent.idBlock.isConstructed === false)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst constrString = new asn1js.OctetString({\r\n\t\t\t\t\t\tidBlock: { isConstructed: true },\r\n\t\t\t\t\t\tisConstructed: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet offset = 0;\r\n\t\t\t\t\tlet length = this.encryptedContent.valueBlock.valueHex.byteLength;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile(length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst pieceView = new Uint8Array(this.encryptedContent.valueBlock.valueHex, offset, ((offset + 1024) > this.encryptedContent.valueBlock.valueHex.byteLength) ? (this.encryptedContent.valueBlock.valueHex.byteLength - offset) : 1024);\r\n\t\t\t\t\t\tconst _array = new ArrayBuffer(pieceView.length);\r\n\t\t\t\t\t\tconst _view = new Uint8Array(_array);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(let i = 0; i < _view.length; i++)\r\n\t\t\t\t\t\t\t_view[i] = pieceView[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconstrString.valueBlock.value.push(new asn1js.OctetString({ valueHex: _array }));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlength -= pieceView.length;\r\n\t\t\t\t\t\toffset += pieceView.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.encryptedContent = constrString;\r\n\t\t\t\t}\r\n\t\t\t\t//endregion\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"contentType\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"contentEncryptionAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"encryptedContent\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncryptedContentInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"contentType\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"contentEncryptionAlgorithm\":\r\n\t\t\t\treturn ((memberValue.algorithmId === \"\") && ((\"algorithmParams\" in memberValue) === false));\r\n\t\t\tcase \"encryptedContent\":\r\n\t\t\t\treturn (memberValue.isEqual(EncryptedContentInfo.defaultValues(memberName)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncryptedContentInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * EncryptedContentInfo ::= SEQUENCE {\r\n\t *    contentType ContentType,\r\n\t *    contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\r\n\t *    encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }\r\n\t *\r\n\t * Comment: Strange, but modern crypto engines create \"encryptedContent\" as \"[0] EXPLICIT EncryptedContent\"\r\n\t *\r\n\t * EncryptedContent ::= OCTET STRING\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [contentType]\r\n\t\t * @property {string} [contentEncryptionAlgorithm]\r\n\t\t * @property {string} [encryptedContent]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.contentType || \"\") }),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.contentEncryptionAlgorithm || {}),\r\n\t\t\t\t// The CHOICE we need because \"EncryptedContent\" could have either \"constructive\"\r\n\t\t\t\t// or \"primitive\" form of encoding and we need to handle both variants\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.encryptedContent || \"\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\tvalue: new asn1js.OctetString()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\t\t\tname: (names.encryptedContent || \"\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"contentType\",\r\n\t\t\t\"contentEncryptionAlgorithm\",\r\n\t\t\t\"encryptedContent\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tEncryptedContentInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcontentType: \"contentType\",\r\n\t\t\t\t\tcontentEncryptionAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"contentEncryptionAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tencryptedContent: \"encryptedContent\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for EncryptedContentInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.contentType = asn1.result.contentType.valueBlock.toString();\r\n\t\tthis.contentEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.contentEncryptionAlgorithm });\r\n\r\n\t\tif(\"encryptedContent\" in asn1.result)\r\n\t\t{\r\n\t\t\tthis.encryptedContent = asn1.result.encryptedContent;\r\n\r\n\t\t\tthis.encryptedContent.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tthis.encryptedContent.idBlock.tagNumber = 4; // OCTETSTRING (!!!) The value still has instance of \"in_window.org.pkijs.asn1.ASN1_CONSTRUCTED / ASN1_PRIMITIVE\"\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst sequenceLengthBlock = {\r\n\t\t\tisIndefiniteForm: false\r\n\t\t};\r\n\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.contentType }));\r\n\t\toutputArray.push(this.contentEncryptionAlgorithm.toSchema());\r\n\r\n\t\tif(\"encryptedContent\" in this)\r\n\t\t{\r\n\t\t\tsequenceLengthBlock.isIndefiniteForm = this.encryptedContent.idBlock.isConstructed;\r\n\r\n\t\t\tconst encryptedValue = this.encryptedContent;\r\n\r\n\t\t\tencryptedValue.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tencryptedValue.idBlock.tagNumber = 0; // [0]\r\n\r\n\t\t\tencryptedValue.lenBlock.isIndefiniteForm = this.encryptedContent.idBlock.isConstructed;\r\n\r\n\t\t\toutputArray.push(encryptedValue);\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tlenBlock: sequenceLengthBlock,\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tcontentType: this.contentType,\r\n\t\t\tcontentEncryptionAlgorithm: this.contentEncryptionAlgorithm.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"encryptedContent\" in this)\r\n\t\t\t_object.encryptedContent = this.encryptedContent.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport { getCrypto } from \"./common.js\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\nimport ECPublicKey from \"./ECPublicKey.js\";\r\nimport RSAPublicKey from \"./RSAPublicKey.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PublicKeyInfo \r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PublicKeyInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithm identifier\r\n\t\t */\r\n\t\tthis.algorithm = getParametersValue(parameters, \"algorithm\", PublicKeyInfo.defaultValues(\"algorithm\"));\r\n\t\t/**\r\n\t\t * @type {BitString}\r\n\t\t * @desc Subject public key value\r\n\t\t */\r\n\t\tthis.subjectPublicKey = getParametersValue(parameters, \"subjectPublicKey\", PublicKeyInfo.defaultValues(\"subjectPublicKey\"));\r\n\t\t\r\n\t\tif(\"parsedKey\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {ECPublicKey|RSAPublicKey}\r\n\t\t\t * @desc Parsed public key value\r\n\t\t\t */\r\n\t\t\tthis.parsedKey = getParametersValue(parameters, \"parsedKey\", PublicKeyInfo.defaultValues(\"parsedKey\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"algorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"subjectPublicKey\":\r\n\t\t\t\treturn new asn1js.BitString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PublicKeyInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * SubjectPublicKeyInfo  ::=  Sequence  {\r\n\t *    algorithm            AlgorithmIdentifier,\r\n\t *    subjectPublicKey     BIT STRING  }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [algorithm]\r\n\t\t * @property {string} [subjectPublicKey]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tAlgorithmIdentifier.schema(names.algorithm || {}),\r\n\t\t\t\tnew asn1js.BitString({ name: (names.subjectPublicKey || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"algorithm\",\r\n\t\t\t\"subjectPublicKey\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPublicKeyInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"algorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsubjectPublicKey: \"subjectPublicKey\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PublicKeyInfo\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.algorithm = new AlgorithmIdentifier({ schema: asn1.result.algorithm });\r\n\t\tthis.subjectPublicKey = asn1.result.subjectPublicKey;\r\n\t\t\r\n\t\tswitch(this.algorithm.algorithmId)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.2.1\": // ECDSA\r\n\t\t\t\tif(\"algorithmParams\" in this.algorithm)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.algorithm.algorithmParams.constructor.blockName() === asn1js.ObjectIdentifier.blockName())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.parsedKey = new ECPublicKey({\r\n\t\t\t\t\t\t\t\tnamedCurve: this.algorithm.algorithmParams.valueBlock.toString(),\r\n\t\t\t\t\t\t\t\tschema: this.subjectPublicKey.valueBlock.valueHex\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch(ex){} // Could be a problems during recognision of internal public key data here. Let's ignore them.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.1.1\": // RSA\r\n\t\t\t\t{\r\n\t\t\t\t\tconst publicKeyASN1 = asn1js.fromBER(this.subjectPublicKey.valueBlock.valueHex);\r\n\t\t\t\t\tif(publicKeyASN1.offset !== (-1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.parsedKey = new RSAPublicKey({ schema: publicKeyASN1.result });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch(ex){} // Could be a problems during recognision of internal public key data here. Let's ignore them.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tthis.algorithm.toSchema(),\r\n\t\t\t\tthis.subjectPublicKey\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\t//region Return common value in case we do not have enough info fo making JWK\r\n\t\tif((\"parsedKey\" in this) === false)\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\talgorithm: this.algorithm.toJSON(),\r\n\t\t\t\tsubjectPublicKey: this.subjectPublicKey.toJSON()\r\n\t\t\t};\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Making JWK\r\n\t\tconst jwk = {};\r\n\t\t\r\n\t\tswitch(this.algorithm.algorithmId)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.2.1\": // ECDSA\r\n\t\t\t\tjwk.kty = \"EC\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.1.1\": // RSA\r\n\t\t\t\tjwk.kty = \"RSA\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t\r\n\t\tconst publicKeyJWK = this.parsedKey.toJSON();\r\n\t\t\r\n\t\tfor(const key of Object.keys(publicKeyJWK))\r\n\t\t\tjwk[key] = publicKeyJWK[key];\r\n\t\t\r\n\t\treturn jwk;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"kty\" in json)\r\n\t\t{\r\n\t\t\tswitch(json.kty.toUpperCase())\r\n\t\t\t{\r\n\t\t\t\tcase \"EC\":\r\n\t\t\t\t\tthis.parsedKey = new ECPublicKey({ json });\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.algorithm = new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.2.840.10045.2.1\",\r\n\t\t\t\t\t\talgorithmParams: new asn1js.ObjectIdentifier({ value: this.parsedKey.namedCurve })\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"RSA\":\r\n\t\t\t\t\tthis.parsedKey = new RSAPublicKey({ json });\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.algorithm = new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.1\",\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`Invalid value for \"kty\" parameter: ${json.kty}`);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.subjectPublicKey = new asn1js.BitString({ valueHex: this.parsedKey.toSchema().toBER(false) });\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\timportKey(publicKey)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\tconst _this = this;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial check\r\n\t\tif(typeof publicKey === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Need to provide publicKey input parameter\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get a \"crypto\" extension\r\n\t\tconst crypto = getCrypto();\r\n\t\tif(typeof crypto === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Export public key\r\n\t\tsequence = sequence.then(() =>\r\n\t\t\tcrypto.exportKey(\"spki\", publicKey));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initialize internal variables by parsing exported value\r\n\t\tsequence = sequence.then(\r\n\t\t\t/**\r\n\t\t\t * @param {ArrayBuffer} exportedKey\r\n\t\t\t */\r\n\t\t\texportedKey =>\r\n\t\t\t{\r\n\t\t\t\tconst asn1 = asn1js.fromBER(exportedKey);\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\t_this.fromSchema(asn1.result);\r\n\t\t\t\t}\r\n\t\t\t\tcatch(exception)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject(\"Error during initializing object from schema\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\terror => Promise.reject(`Error during exporting public key: ${error}`)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf, isEqualBuffer, toBase64, fromBase64, arrayBufferToString, stringToArrayBuffer } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5480\r\n */\r\nexport default class ECPublicKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ECCPublicKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc type\r\n\t\t */\r\n\t\tthis.x = getParametersValue(parameters, \"x\", ECPublicKey.defaultValues(\"x\"));\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc values\r\n\t\t */\r\n\t\tthis.y = getParametersValue(parameters, \"y\", ECPublicKey.defaultValues(\"y\"));\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc namedCurve\r\n\t\t */\r\n\t\tthis.namedCurve = getParametersValue(parameters, \"namedCurve\", ECPublicKey.defaultValues(\"namedCurve\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"x\":\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"namedCurve\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCPublicKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"x\":\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn (isEqualBuffer(memberValue, ECPublicKey.defaultValues(memberName)));\r\n\t\t\tcase \"namedCurve\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCPublicKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\treturn new asn1js.RawData();\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert ArrayBuffer into current class\r\n\t * @param {!ArrayBuffer} schema Special case: schema is an ArrayBuffer\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tif((schema instanceof ArrayBuffer) === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECPublicKey\");\r\n\r\n\t\tconst view = new Uint8Array(schema);\r\n\t\tif(view[0] !== 0x04)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECPublicKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tlet coordinateLength;\r\n\r\n\t\tswitch(this.namedCurve)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.3.1.7\": // P-256\r\n\t\t\t\tcoordinateLength = 32;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.34\": // P-384\r\n\t\t\t\tcoordinateLength = 48;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.35\": // P-521\r\n\t\t\t\tcoordinateLength = 66;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Incorrect curve OID: ${this.namedCurve}`);\r\n\t\t}\r\n\r\n\t\tif(schema.byteLength !== (coordinateLength * 2 + 1))\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECPublicKey\");\r\n\t\t\r\n\t\tthis.x = schema.slice(1, coordinateLength + 1);\r\n\t\tthis.y = schema.slice(1 + coordinateLength, coordinateLength * 2 + 1);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\treturn new asn1js.RawData({ data: utilConcatBuf(\r\n\t\t\t(new Uint8Array([0x04])).buffer,\r\n\t\t\tthis.x,\r\n\t\t\tthis.y\r\n\t\t)\r\n\t\t});\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet crvName = \"\";\r\n\r\n\t\tswitch(this.namedCurve)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.3.1.7\": // P-256\r\n\t\t\t\tcrvName = \"P-256\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.34\": // P-384\r\n\t\t\t\tcrvName = \"P-384\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.35\": // P-521\r\n\t\t\t\tcrvName = \"P-521\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcrv: crvName,\r\n\t\t\tx: toBase64(arrayBufferToString(this.x), true, true, false),\r\n\t\t\ty: toBase64(arrayBufferToString(this.y), true, true, false)\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tlet coodinateLength = 0;\r\n\r\n\t\tif(\"crv\" in json)\r\n\t\t{\r\n\t\t\tswitch(json.crv.toUpperCase())\r\n\t\t\t{\r\n\t\t\t\tcase \"P-256\":\r\n\t\t\t\t\tthis.namedCurve = \"1.2.840.10045.3.1.7\";\r\n\t\t\t\t\tcoodinateLength = 32;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"P-384\":\r\n\t\t\t\t\tthis.namedCurve = \"1.3.132.0.34\";\r\n\t\t\t\t\tcoodinateLength = 48;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"P-521\":\r\n\t\t\t\t\tthis.namedCurve = \"1.3.132.0.35\";\r\n\t\t\t\t\tcoodinateLength = 66;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"crv\\\"\");\r\n\r\n\t\tif(\"x\" in json)\r\n\t\t{\r\n\t\t\tconst convertBuffer = stringToArrayBuffer(fromBase64(json.x, true));\r\n\t\t\t\r\n\t\t\tif(convertBuffer.byteLength < coodinateLength)\r\n\t\t\t{\r\n\t\t\t\tthis.x = new ArrayBuffer(coodinateLength);\r\n\t\t\t\tconst view = new Uint8Array(this.x);\r\n\t\t\t\tconst convertBufferView = new Uint8Array(convertBuffer);\r\n\t\t\t\tview.set(convertBufferView, 1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tthis.x = convertBuffer.slice(0, coodinateLength);\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"x\\\"\");\r\n\r\n\t\tif(\"y\" in json)\r\n\t\t{\r\n\t\t\tconst convertBuffer = stringToArrayBuffer(fromBase64(json.y, true));\r\n\t\t\t\r\n\t\t\tif(convertBuffer.byteLength < coodinateLength)\r\n\t\t\t{\r\n\t\t\t\tthis.y = new ArrayBuffer(coodinateLength);\r\n\t\t\t\tconst view = new Uint8Array(this.y);\r\n\t\t\t\tconst convertBufferView = new Uint8Array(convertBuffer);\r\n\t\t\t\tview.set(convertBufferView, 1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tthis.y = convertBuffer.slice(0, coodinateLength);\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"y\\\"\");\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\nimport Attribute from \"./Attribute.js\";\r\nimport ECPrivateKey from \"./ECPrivateKey.js\";\r\nimport RSAPrivateKey from \"./RSAPrivateKey.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5208\r\n */\r\nexport default class PrivateKeyInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PrivateKeyInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", PrivateKeyInfo.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc privateKeyAlgorithm\r\n\t\t */\r\n\t\tthis.privateKeyAlgorithm = getParametersValue(parameters, \"privateKeyAlgorithm\", PrivateKeyInfo.defaultValues(\"privateKeyAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc privateKey\r\n\t\t */\r\n\t\tthis.privateKey = getParametersValue(parameters, \"privateKey\", PrivateKeyInfo.defaultValues(\"privateKey\"));\r\n\r\n\t\tif(\"attributes\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Attribute>}\r\n\t\t\t * @desc attributes\r\n\t\t\t */\r\n\t\t\tthis.attributes = getParametersValue(parameters, \"attributes\", PrivateKeyInfo.defaultValues(\"attributes\"));\r\n\r\n\t\tif(\"parsedKey\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {ECPrivateKey|RSAPrivateKey}\r\n\t\t\t * @desc Parsed public key value\r\n\t\t\t */\r\n\t\t\tthis.parsedKey = getParametersValue(parameters, \"parsedKey\", PrivateKeyInfo.defaultValues(\"parsedKey\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"privateKeyAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"privateKey\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"attributes\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"parsedKey\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PrivateKeyInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PrivateKeyInfo ::= SEQUENCE {\r\n\t *    version Version,\r\n\t *    privateKeyAlgorithm AlgorithmIdentifier {{PrivateKeyAlgorithms}},\r\n\t *    privateKey PrivateKey,\r\n\t *    attributes [0] Attributes OPTIONAL }\r\n\t *\r\n\t * Version ::= INTEGER {v1(0)} (v1,...)\r\n\t *\r\n\t * PrivateKey ::= OCTET STRING\r\n\t *\r\n\t * Attributes ::= SET OF Attribute\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [privateKeyAlgorithm]\r\n\t\t * @property {string} [privateKey]\r\n\t\t * @property {string} [attributes]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.privateKeyAlgorithm || {}),\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.privateKey || \"\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.attributes || \"\"),\r\n\t\t\t\t\t\t\tvalue: Attribute.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"privateKeyAlgorithm\",\r\n\t\t\t\"privateKey\",\r\n\t\t\t\"attributes\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPrivateKeyInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tprivateKeyAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"privateKeyAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tprivateKey: \"privateKey\",\r\n\t\t\t\t\tattributes: \"attributes\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PrivateKeyInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.privateKeyAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.privateKeyAlgorithm });\r\n\t\tthis.privateKey = asn1.result.privateKey;\r\n\r\n\t\tif(\"attributes\" in asn1.result)\r\n\t\t\tthis.attributes = Array.from(asn1.result.attributes, element => new Attribute({ schema: element }));\r\n\r\n\t\tswitch(this.privateKeyAlgorithm.algorithmId)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.113549.1.1.1\": // RSA\r\n\t\t\t\t{\r\n\t\t\t\t\tconst privateKeyASN1 = asn1js.fromBER(this.privateKey.valueBlock.valueHex);\r\n\t\t\t\t\tif(privateKeyASN1.offset !== (-1))\r\n\t\t\t\t\t\tthis.parsedKey = new RSAPrivateKey({ schema: privateKeyASN1.result });\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.10045.2.1\": // ECDSA\r\n\t\t\t\tif(\"algorithmParams\" in this.privateKeyAlgorithm)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.privateKeyAlgorithm.algorithmParams instanceof asn1js.ObjectIdentifier)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst privateKeyASN1 = asn1js.fromBER(this.privateKey.valueBlock.valueHex);\r\n\t\t\t\t\t\tif(privateKeyASN1.offset !== (-1))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.parsedKey = new ECPrivateKey({\r\n\t\t\t\t\t\t\t\tnamedCurve: this.privateKeyAlgorithm.algorithmParams.valueBlock.toString(),\r\n\t\t\t\t\t\t\t\tschema: privateKeyASN1.result\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [\r\n\t\t\tnew asn1js.Integer({ value: this.version }),\r\n\t\t\tthis.privateKeyAlgorithm.toSchema(),\r\n\t\t\tthis.privateKey\r\n\t\t];\r\n\r\n\t\tif(\"attributes\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.attributes, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\t//region Return common value in case we do not have enough info fo making JWK\r\n\t\tif((\"parsedKey\" in this) === false)\r\n\t\t{\r\n\t\t\tconst object = {\r\n\t\t\t\tversion: this.version,\r\n\t\t\t\tprivateKeyAlgorithm: this.privateKeyAlgorithm.toJSON(),\r\n\t\t\t\tprivateKey: this.privateKey.toJSON()\r\n\t\t\t};\r\n\r\n\t\t\tif(\"attributes\" in this)\r\n\t\t\t\tobject.attributes = Array.from(this.attributes, element => element.toJSON());\r\n\r\n\t\t\treturn object;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Making JWK\r\n\t\tconst jwk = {};\r\n\r\n\t\tswitch(this.privateKeyAlgorithm.algorithmId)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.2.1\": // ECDSA\r\n\t\t\t\tjwk.kty = \"EC\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.1.1\": // RSA\r\n\t\t\t\tjwk.kty = \"RSA\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\r\n\t\tconst publicKeyJWK = this.parsedKey.toJSON();\r\n\r\n\t\tfor(const key of Object.keys(publicKeyJWK))\r\n\t\t\tjwk[key] = publicKeyJWK[key];\r\n\r\n\t\treturn jwk;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"kty\" in json)\r\n\t\t{\r\n\t\t\tswitch(json.kty.toUpperCase())\r\n\t\t\t{\r\n\t\t\t\tcase \"EC\":\r\n\t\t\t\t\tthis.parsedKey = new ECPrivateKey({ json });\r\n\r\n\t\t\t\t\tthis.privateKeyAlgorithm = new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.2.840.10045.2.1\",\r\n\t\t\t\t\t\talgorithmParams: new asn1js.ObjectIdentifier({ value: this.parsedKey.namedCurve })\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"RSA\":\r\n\t\t\t\t\tthis.parsedKey = new RSAPrivateKey({ json });\r\n\r\n\t\t\t\t\tthis.privateKeyAlgorithm = new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.1\",\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`Invalid value for \"kty\" parameter: ${json.kty}`);\r\n\t\t\t}\r\n\r\n\t\t\tthis.privateKey = new asn1js.OctetString({ valueHex: this.parsedKey.toSchema().toBER(false) });\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC2898\r\n */\r\nexport default class PBKDF2Params\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PBKDF2Params class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc salt\r\n\t\t */\r\n\t\tthis.salt = getParametersValue(parameters, \"salt\", PBKDF2Params.defaultValues(\"salt\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc iterationCount\r\n\t\t */\r\n\t\tthis.iterationCount = getParametersValue(parameters, \"iterationCount\", PBKDF2Params.defaultValues(\"iterationCount\"));\r\n\t\t\r\n\t\tif(\"keyLength\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc keyLength\r\n\t\t\t */\r\n\t\t\tthis.keyLength = getParametersValue(parameters, \"keyLength\", PBKDF2Params.defaultValues(\"keyLength\"));\r\n\t\t\r\n\t\tif(\"prf\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {AlgorithmIdentifier}\r\n\t\t\t * @desc prf\r\n\t\t\t */\r\n\t\t\tthis.prf = getParametersValue(parameters, \"prf\", PBKDF2Params.defaultValues(\"prf\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"salt\":\r\n\t\t\t\treturn {};\r\n\t\t\tcase \"iterationCount\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"keyLength\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"prf\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PBKDF2Params class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PBKDF2-params ::= SEQUENCE {\r\n\t *    salt CHOICE {\r\n\t *        specified OCTET STRING,\r\n\t *        otherSource AlgorithmIdentifier },\r\n\t *  iterationCount INTEGER (1..MAX),\r\n\t *  keyLength INTEGER (1..MAX) OPTIONAL,\r\n\t *  prf AlgorithmIdentifier\r\n\t *    DEFAULT { algorithm hMAC-SHA1, parameters NULL } }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [saltPrimitive]\r\n\t\t * @property {string} [saltConstructed]\r\n\t\t * @property {string} [iterationCount]\r\n\t\t * @property {string} [keyLength]\r\n\t\t * @property {string} [prf]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.OctetString({ name: (names.saltPrimitive || \"\") }),\r\n\t\t\t\t\t\tAlgorithmIdentifier.schema(names.saltConstructed || {})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.iterationCount || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\tname: (names.keyLength || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.prf || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\toptional: true\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"salt\",\r\n\t\t\t\"iterationCount\",\r\n\t\t\t\"keyLength\",\r\n\t\t\t\"prf\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPBKDF2Params.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tsaltPrimitive: \"salt\",\r\n\t\t\t\t\tsaltConstructed: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"salt\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\titerationCount: \"iterationCount\",\r\n\t\t\t\t\tkeyLength: \"keyLength\",\r\n\t\t\t\t\tprf: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"prf\",\r\n\t\t\t\t\t\t\toptional: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PBKDF2Params\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.salt = asn1.result.salt;\r\n\t\tthis.iterationCount = asn1.result.iterationCount.valueBlock.valueDec;\r\n\r\n\t\tif(\"keyLength\" in asn1.result)\r\n\t\t\tthis.keyLength = asn1.result.keyLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"prf\" in asn1.result)\r\n\t\t\tthis.prf = new AlgorithmIdentifier({ schema: asn1.result.prf });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(this.salt);\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.iterationCount }));\r\n\t\t\r\n\t\tif(\"keyLength\" in this)\r\n\t\t{\r\n\t\t\tif(PBKDF2Params.defaultValues(\"keyLength\") !== this.keyLength)\r\n\t\t\t\toutputArray.push(new asn1js.Integer({ value: this.keyLength }));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"prf\" in this)\r\n\t\t{\r\n\t\t\tif(PBKDF2Params.defaultValues(\"prf\").isEqual(this.prf) === false)\r\n\t\t\t\toutputArray.push(this.prf.toSchema());\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tsalt: this.salt.toJSON(),\r\n\t\t\titerationCount: this.iterationCount\r\n\t\t};\r\n\t\t\r\n\t\tif(\"keyLength\" in this)\r\n\t\t{\r\n\t\t\tif(PBKDF2Params.defaultValues(\"keyLength\") !== this.keyLength)\r\n\t\t\t\t_object.keyLength = this.keyLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(\"prf\" in this)\r\n\t\t{\r\n\t\t\tif(PBKDF2Params.defaultValues(\"prf\").isEqual(this.prf) === false)\r\n\t\t\t\t_object.prf = this.prf.toJSON();\r\n\t\t}\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, isEqualBuffer, clearProps } from \"pvutils\";\r\nimport { stringPrep } from \"./common.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class AttributeTypeAndValue\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AttributeTypeAndValue class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc type\r\n\t\t */\r\n\t\tthis.type = getParametersValue(parameters, \"type\", AttributeTypeAndValue.defaultValues(\"type\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc Value of the AttributeTypeAndValue class\r\n\t\t */\r\n\t\tthis.value = getParametersValue(parameters, \"value\", AttributeTypeAndValue.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AttributeTypeAndValue class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AttributeTypeAndValue ::= Sequence {\r\n\t *    type     AttributeType,\r\n\t *    value    AttributeValue }\r\n\t *\r\n\t * AttributeType ::= OBJECT IDENTIFIER\r\n\t *\r\n\t * AttributeValue ::= ANY -- DEFINED BY AttributeType\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName] Name for entire block\r\n\t\t * @property {string} [type] Name for \"type\" element\r\n\t\t * @property {string} [value] Name for \"value\" element\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.type || \"\") }),\r\n\t\t\t\tnew asn1js.Any({ name: (names.value || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\tstatic blockName()\r\n\t{\r\n\t\treturn \"AttributeTypeAndValue\";\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"type\",\r\n\t\t\t\"typeValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAttributeTypeAndValue.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\ttype: \"type\",\r\n\t\t\t\t\tvalue: \"typeValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AttributeTypeAndValue\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.type = asn1.result.type.valueBlock.toString();\r\n\t\t// noinspection JSUnresolvedVariable\r\n\t\tthis.value = asn1.result.typeValue;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.type }),\r\n\t\t\t\tthis.value\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\r\n\t\tif(Object.keys(this.value).length !== 0)\r\n\t\t\t_object.value = this.value.toJSON();\r\n\t\telse\r\n\t\t\t_object.value = this.value;\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare two AttributeTypeAndValue values, or AttributeTypeAndValue with ArrayBuffer value\r\n\t * @param {(AttributeTypeAndValue|ArrayBuffer)} compareTo The value compare to current\r\n\t * @returns {boolean}\r\n\t */\r\n\tisEqual(compareTo)\r\n\t{\r\n\t\tconst stringBlockNames = [\r\n\t\t\tasn1js.Utf8String.blockName(),\r\n\t\t\tasn1js.BmpString.blockName(),\r\n\t\t\tasn1js.UniversalString.blockName(),\r\n\t\t\tasn1js.NumericString.blockName(),\r\n\t\t\tasn1js.PrintableString.blockName(),\r\n\t\t\tasn1js.TeletexString.blockName(),\r\n\t\t\tasn1js.VideotexString.blockName(),\r\n\t\t\tasn1js.IA5String.blockName(),\r\n\t\t\tasn1js.GraphicString.blockName(),\r\n\t\t\tasn1js.VisibleString.blockName(),\r\n\t\t\tasn1js.GeneralString.blockName(),\r\n\t\t\tasn1js.CharacterString.blockName()\r\n\t\t];\r\n\r\n\t\tif(compareTo.constructor.blockName() === AttributeTypeAndValue.blockName())\r\n\t\t{\r\n\t\t\tif(this.type !== compareTo.type)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t//region Check we do have both strings\r\n\t\t\tlet isString = false;\r\n\t\t\tconst thisName = this.value.constructor.blockName();\r\n\r\n\t\t\tif(thisName === compareTo.value.constructor.blockName())\r\n\t\t\t{\r\n\t\t\t\tfor(const name of stringBlockNames)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(thisName === name)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisString = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\r\n\t\t\tif(isString)\r\n\t\t\t{\r\n\t\t\t\tconst value1 = stringPrep(this.value.valueBlock.value);\r\n\t\t\t\tconst value2 = stringPrep(compareTo.value.valueBlock.value);\r\n\r\n\t\t\t\tif(value1.localeCompare(value2) !== 0)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse // Comparing as two ArrayBuffers\r\n\t\t\t{\r\n\t\t\t\tif(isEqualBuffer(this.value.valueBeforeDecode, compareTo.value.valueBeforeDecode) === false)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(compareTo instanceof ArrayBuffer)\r\n\t\t\treturn isEqualBuffer(this.value.valueBeforeDecode, compareTo);\r\n\r\n\t\treturn false;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, isEqualBuffer, clearProps } from \"pvutils\";\r\nimport AttributeTypeAndValue from \"./AttributeTypeAndValue.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class RelativeDistinguishedNames\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RelativeDistinguishedNames class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {Array.<AttributeTypeAndValue>} [typesAndValues] Array of \"type and value\" objects\r\n\t * @property {ArrayBuffer} [valueBeforeDecode] Value of the RDN before decoding from schema\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<AttributeTypeAndValue>}\r\n\t\t * @desc Array of \"type and value\" objects\r\n\t\t */\r\n\t\tthis.typesAndValues = getParametersValue(parameters, \"typesAndValues\", RelativeDistinguishedNames.defaultValues(\"typesAndValues\"));\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc Value of the RDN before decoding from schema\r\n\t\t */\r\n\t\tthis.valueBeforeDecode = getParametersValue(parameters, \"valueBeforeDecode\", RelativeDistinguishedNames.defaultValues(\"valueBeforeDecode\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"typesAndValues\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"valueBeforeDecode\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RelativeDistinguishedNames class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"typesAndValues\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tcase \"valueBeforeDecode\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RelativeDistinguishedNames class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RDNSequence ::= Sequence OF RelativeDistinguishedName\r\n\t *\r\n\t * RelativeDistinguishedName ::=\r\n\t * SET SIZE (1..MAX) OF AttributeTypeAndValue\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName] Name for entire block\r\n\t\t * @property {string} [repeatedSequence] Name for \"repeatedSequence\" block\r\n\t\t * @property {string} [repeatedSet] Name for \"repeatedSet\" block\r\n\t\t * @property {string} [typeAndValue] Name for \"typeAndValue\" block\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.repeatedSequence || \"\"),\r\n\t\t\t\t\tvalue: new asn1js.Set({\r\n\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\tname: (names.repeatedSet || \"\"),\r\n\t\t\t\t\t\t\t\tvalue: AttributeTypeAndValue.schema(names.typeAndValue || {})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"RDN\",\r\n\t\t\t\"typesAndValues\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRelativeDistinguishedNames.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"RDN\",\r\n\t\t\t\t\trepeatedSet: \"typesAndValues\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RelativeDistinguishedNames\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"typesAndValues\" in asn1.result) // Could be a case when there is no \"types and values\"\r\n\t\t\tthis.typesAndValues = Array.from(asn1.result.typesAndValues, element => new AttributeTypeAndValue({ schema: element }));\r\n\r\n\t\t// noinspection JSUnresolvedVariable\r\n\t\tthis.valueBeforeDecode = asn1.result.RDN.valueBeforeDecode;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Decode stored TBS value\r\n\t\tif(this.valueBeforeDecode.byteLength === 0) // No stored encoded array, create \"from scratch\"\r\n\t\t{\r\n\t\t\treturn (new asn1js.Sequence({\r\n\t\t\t\tvalue: [new asn1js.Set({\r\n\t\t\t\t\tvalue: Array.from(this.typesAndValues, element => element.toSchema())\r\n\t\t\t\t})]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tconst asn1 = asn1js.fromBER(this.valueBeforeDecode);\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn asn1.result;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\ttypesAndValues: Array.from(this.typesAndValues, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare two RDN values, or RDN with ArrayBuffer value\r\n\t * @param {(RelativeDistinguishedNames|ArrayBuffer)} compareTo The value compare to current\r\n\t * @returns {boolean}\r\n\t */\r\n\tisEqual(compareTo)\r\n\t{\r\n\t\tif(compareTo instanceof RelativeDistinguishedNames)\r\n\t\t{\r\n\t\t\tif(this.typesAndValues.length !== compareTo.typesAndValues.length)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tfor(const [index, typeAndValue] of this.typesAndValues.entries())\r\n\t\t\t{\r\n\t\t\t\tif(typeAndValue.isEqual(compareTo.typesAndValues[index]) === false)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(compareTo instanceof ArrayBuffer)\r\n\t\t\treturn isEqualBuffer(this.valueBeforeDecode, compareTo);\r\n\r\n\t\treturn false;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\n//**************************************************************************************\r\n//region Additional asn1js schema elements existing inside GeneralName schema\r\n//**************************************************************************************\r\n/**\r\n * Schema for \"builtInStandardAttributes\" of \"ORAddress\"\r\n * @param {Object} parameters\r\n * @property {Object} [names]\r\n * @param {boolean} optional\r\n * @returns {Sequence}\r\n */\r\nfunction builtInStandardAttributes(parameters = {}, optional = false)\r\n{\r\n\t//builtInStandardAttributes ::= Sequence {\r\n\t//    country-name                  CountryName OPTIONAL,\r\n\t//    administration-domain-name    AdministrationDomainName OPTIONAL,\r\n\t//    network-address           [0] IMPLICIT NetworkAddress OPTIONAL,\r\n\t//    terminal-identifier       [1] IMPLICIT TerminalIdentifier OPTIONAL,\r\n\t//    private-domain-name       [2] PrivateDomainName OPTIONAL,\r\n\t//    organization-name         [3] IMPLICIT OrganizationName OPTIONAL,\r\n\t//    numeric-user-identifier   [4] IMPLICIT NumericUserIdentifier OPTIONAL,\r\n\t//    personal-name             [5] IMPLICIT PersonalName OPTIONAL,\r\n\t//    organizational-unit-names [6] IMPLICIT OrganizationalUnitNames OPTIONAL }\r\n\r\n\t/**\r\n\t * @type {Object}\r\n\t * @property {string} [country_name]\r\n\t * @property {string} [administration_domain_name]\r\n\t * @property {string} [network_address]\r\n\t * @property {string} [terminal_identifier]\r\n\t * @property {string} [private_domain_name]\r\n\t * @property {string} [organization_name]\r\n\t * @property {string} [numeric_user_identifier]\r\n\t * @property {string} [personal_name]\r\n\t * @property {string} [organizational_unit_names]\r\n\t */\r\n\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\treturn (new asn1js.Sequence({\r\n\t\toptional,\r\n\t\tvalue: [\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 2, // APPLICATION-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tname: (names.country_name || \"\"),\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\tnew asn1js.NumericString(),\r\n\t\t\t\t\t\t\tnew asn1js.PrintableString()\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 2, // APPLICATION-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tname: (names.administration_domain_name || \"\"),\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\tnew asn1js.NumericString(),\r\n\t\t\t\t\t\t\tnew asn1js.PrintableString()\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Primitive({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tname: (names.network_address || \"\"),\r\n\t\t\t\tisHexOnly: true\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Primitive({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tname: (names.terminal_identifier || \"\"),\r\n\t\t\t\tisHexOnly: true\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tname: (names.private_domain_name || \"\"),\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\tnew asn1js.NumericString(),\r\n\t\t\t\t\t\t\tnew asn1js.PrintableString()\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Primitive({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tname: (names.organization_name || \"\"),\r\n\t\t\t\tisHexOnly: true\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Primitive({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tname: (names.numeric_user_identifier || \"\"),\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t},\r\n\t\t\t\tisHexOnly: true\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tname: (names.personal_name || \"\"),\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 5 // [5]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tisHexOnly: true\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tisHexOnly: true\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tisHexOnly: true\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tisHexOnly: true\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tname: (names.organizational_unit_names || \"\"),\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 6 // [6]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\tvalue: new asn1js.PrintableString()\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t})\r\n\t\t]\r\n\t}));\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Schema for \"builtInDomainDefinedAttributes\" of \"ORAddress\"\r\n * @param {boolean} optional\r\n * @returns {Sequence}\r\n */\r\nfunction builtInDomainDefinedAttributes(optional = false)\r\n{\r\n\treturn (new asn1js.Sequence({\r\n\t\toptional,\r\n\t\tvalue: [\r\n\t\t\tnew asn1js.PrintableString(),\r\n\t\t\tnew asn1js.PrintableString()\r\n\t\t]\r\n\t}));\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Schema for \"builtInDomainDefinedAttributes\" of \"ORAddress\"\r\n * @param {boolean} optional\r\n * @returns {Set}\r\n */\r\nfunction extensionAttributes(optional = false)\r\n{\r\n\treturn (new asn1js.Set({\r\n\t\toptional,\r\n\t\tvalue: [\r\n\t\t\tnew asn1js.Primitive({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tisHexOnly: true\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Any()]\r\n\t\t\t})\r\n\t\t]\r\n\t}));\r\n}\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class GeneralName\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for GeneralName class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {number} [type] value type - from a tagged value (0 for \"otherName\", 1 for \"rfc822Name\" etc.)\r\n\t * @property {Object} [value] asn1js object having GeneralName value (type depends on \"type\" value)\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc value type - from a tagged value (0 for \"otherName\", 1 for \"rfc822Name\" etc.)\r\n\t\t */\r\n\t\tthis.type = getParametersValue(parameters, \"type\", GeneralName.defaultValues(\"type\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc asn1js object having GeneralName value (type depends on \"type\" value)\r\n\t\t */\r\n\t\tthis.value = getParametersValue(parameters, \"value\", GeneralName.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn 9;\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for GeneralName class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn (memberValue === GeneralName.defaultValues(memberName));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for GeneralName class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * GeneralName ::= Choice {\r\n\t *    otherName                       [0]     OtherName,\r\n\t *    rfc822Name                      [1]     IA5String,\r\n\t *    dNSName                         [2]     IA5String,\r\n\t *    x400Address                     [3]     ORAddress,\r\n\t *    directoryName                   [4]     value,\r\n\t *    ediPartyName                    [5]     EDIPartyName,\r\n\t *    uniformResourceIdentifier       [6]     IA5String,\r\n\t *    iPAddress                       [7]     OCTET STRING,\r\n\t *    registeredID                    [8]     OBJECT IDENTIFIER }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {Object} [directoryName]\r\n\t\t * @property {Object} [builtInStandardAttributes]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.ObjectIdentifier(),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [new asn1js.Any()]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tbuiltInStandardAttributes((names.builtInStandardAttributes || {}), false),\r\n\t\t\t\t\t\tbuiltInDomainDefinedAttributes(true),\r\n\t\t\t\t\t\textensionAttributes(true)\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema(names.directoryName || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 5 // [5]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.TeletexString(),\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.PrintableString(),\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.UniversalString(),\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Utf8String(),\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.BmpString()\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.TeletexString(),\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.PrintableString(),\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.UniversalString(),\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Utf8String(),\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.BmpString()\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 6 // [6]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 7 // [7]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 8 // [8]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"blockName\",\r\n\t\t\t\"otherName\",\r\n\t\t\t\"rfc822Name\",\r\n\t\t\t\"dNSName\",\r\n\t\t\t\"x400Address\",\r\n\t\t\t\"directoryName\",\r\n\t\t\t\"ediPartyName\",\r\n\t\t\t\"uniformResourceIdentifier\",\r\n\t\t\t\"iPAddress\",\r\n\t\t\t\"registeredID\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tGeneralName.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\",\r\n\t\t\t\t\totherName: \"otherName\",\r\n\t\t\t\t\trfc822Name: \"rfc822Name\",\r\n\t\t\t\t\tdNSName: \"dNSName\",\r\n\t\t\t\t\tx400Address: \"x400Address\",\r\n\t\t\t\t\tdirectoryName: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"directoryName\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tediPartyName: \"ediPartyName\",\r\n\t\t\t\t\tuniformResourceIdentifier: \"uniformResourceIdentifier\",\r\n\t\t\t\t\tiPAddress: \"iPAddress\",\r\n\t\t\t\t\tregisteredID: \"registeredID\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for GeneralName\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.type = asn1.result.blockName.idBlock.tagNumber;\r\n\r\n\t\tswitch(this.type)\r\n\t\t{\r\n\t\t\tcase 0: // otherName\r\n\t\t\t\tthis.value = asn1.result.blockName;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1: // rfc822Name + dNSName + uniformResourceIdentifier\r\n\t\t\tcase 2:\r\n\t\t\tcase 6:\r\n\t\t\t\t{\r\n\t\t\t\t\tconst value = asn1.result.blockName;\r\n\r\n\t\t\t\t\tvalue.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\t\t\tvalue.idBlock.tagNumber = 22; // IA5STRING\r\n\r\n\t\t\t\t\tconst valueBER = value.toBER(false);\r\n\r\n\t\t\t\t\tthis.value = asn1js.fromBER(valueBER).result.valueBlock.value;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3: // x400Address\r\n\t\t\t\tthis.value = asn1.result.blockName;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4: // directoryName\r\n\t\t\t\tthis.value = new RelativeDistinguishedNames({ schema: asn1.result.directoryName });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5: // ediPartyName\r\n\t\t\t\tthis.value = asn1.result.ediPartyName;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7: // iPAddress\r\n\t\t\t\tthis.value = new asn1js.OctetString({ valueHex: asn1.result.blockName.valueBlock.valueHex });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // registeredID\r\n\t\t\t\t{\r\n\t\t\t\t\tconst value = asn1.result.blockName;\r\n\r\n\t\t\t\t\tvalue.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\t\t\tvalue.idBlock.tagNumber = 6; // ObjectIdentifier\r\n\r\n\t\t\t\t\tconst valueBER = value.toBER(false);\r\n\r\n\t\t\t\t\tthis.value = asn1js.fromBER(valueBER).result.valueBlock.toString(); // Getting a string representation of the ObjectIdentifier\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tswitch(this.type)\r\n\t\t{\r\n\t\t\tcase 0:\r\n\t\t\tcase 3:\r\n\t\t\tcase 5:\r\n\t\t\t\treturn new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: this.type\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tthis.value\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\t\t\tcase 1:\r\n\t\t\tcase 2:\r\n\t\t\tcase 6:\r\n\t\t\t\t{\r\n\t\t\t\t\tconst value = new asn1js.IA5String({ value: this.value });\r\n\r\n\t\t\t\t\tvalue.idBlock.tagClass = 3;\r\n\t\t\t\t\tvalue.idBlock.tagNumber = this.type;\r\n\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\tcase 4:\r\n\t\t\t\treturn new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.value.toSchema()]\r\n\t\t\t\t});\r\n\t\t\tcase 7:\r\n\t\t\t\t{\r\n\t\t\t\t\tconst value = this.value;\r\n\r\n\t\t\t\t\tvalue.idBlock.tagClass = 3;\r\n\t\t\t\t\tvalue.idBlock.tagNumber = this.type;\r\n\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\tcase 8:\r\n\t\t\t\t{\r\n\t\t\t\t\tconst value = new asn1js.ObjectIdentifier({ value: this.value });\r\n\r\n\t\t\t\t\tvalue.idBlock.tagClass = 3;\r\n\t\t\t\t\tvalue.idBlock.tagNumber = this.type;\r\n\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\treturn GeneralName.schema();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\ttype: this.type,\r\n\t\t\tvalue: \"\"\r\n\t\t};\r\n\r\n\t\tif((typeof this.value) === \"string\")\r\n\t\t\t_object.value = this.value;\r\n\t\telse\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\t_object.value = this.value.toJSON();\r\n\t\t\t}\r\n\t\t\tcatch(ex){}\r\n\t\t}\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class AccessDescription\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AccessDescription class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc The type and format of the information are specified by the accessMethod field. This profile defines two accessMethod OIDs: id-ad-caIssuers and id-ad-ocsp\r\n\t\t */\r\n\t\tthis.accessMethod = getParametersValue(parameters, \"accessMethod\", AccessDescription.defaultValues(\"accessMethod\"));\r\n\t\t/**\r\n\t\t * @type {GeneralName}\r\n\t\t * @desc The accessLocation field specifies the location of the information\r\n\t\t */\r\n\t\tthis.accessLocation = getParametersValue(parameters, \"accessLocation\", AccessDescription.defaultValues(\"accessLocation\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"accessMethod\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"accessLocation\":\r\n\t\t\t\treturn new GeneralName();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AccessDescription class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AccessDescription  ::=  SEQUENCE {\r\n\t *    accessMethod          OBJECT IDENTIFIER,\r\n\t *    accessLocation        GeneralName  }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [accessMethod]\r\n\t\t * @property {string} [accessLocation]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.accessMethod || \"\") }),\r\n\t\t\t\tGeneralName.schema(names.accessLocation || {})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"accessMethod\",\r\n\t\t\t\"accessLocation\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAccessDescription.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\taccessMethod: \"accessMethod\",\r\n\t\t\t\t\taccessLocation: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"accessLocation\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AccessDescription\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.accessMethod = asn1.result.accessMethod.valueBlock.toString();\r\n\t\tthis.accessLocation = new GeneralName({ schema: asn1.result.accessLocation });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.accessMethod }),\r\n\t\t\t\tthis.accessLocation.toSchema()\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\taccessMethod: this.accessMethod,\r\n\t\t\taccessLocation: this.accessLocation.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class AltName\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AltName class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<GeneralName>}\r\n\t\t * @desc Array of alternative names in GeneralName type\r\n\t\t */\r\n\t\tthis.altNames = getParametersValue(parameters, \"altNames\", AltName.defaultValues(\"altNames\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"altNames\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AltName class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AltName ::= GeneralNames\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [altNames]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.altNames || \"\"),\r\n\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"altNames\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAltName.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\taltNames: \"altNames\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AltName\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"altNames\" in asn1.result)\r\n\t\t\tthis.altNames = Array.from(asn1.result.altNames, element => new GeneralName({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.altNames, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\taltNames: Array.from(this.altNames, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class Time\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Time class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {number} [type] 0 - UTCTime; 1 - GeneralizedTime; 2 - empty value\r\n\t * @property {Date} [value] Value of the TIME class\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc 0 - UTCTime; 1 - GeneralizedTime; 2 - empty value\r\n\t\t */\r\n\t\tthis.type = getParametersValue(parameters, \"type\", Time.defaultValues(\"type\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @desc Value of the TIME class\r\n\t\t */\r\n\t\tthis.value = getParametersValue(parameters, \"value\", Time.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn new Date(0, 0, 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Time class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * Time ::= CHOICE {\r\n     *   utcTime        UTCTime,\r\n     *   generalTime    GeneralizedTime }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @param {boolean} optional Flag that current schema should be optional\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {}, optional = false)\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [utcTimeName] Name for \"utcTimeName\" choice\r\n\t\t * @property {string} [generalTimeName] Name for \"generalTimeName\" choice\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\toptional,\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.UTCTime({ name: (names.utcTimeName || \"\") }),\r\n\t\t\t\tnew asn1js.GeneralizedTime({ name: (names.generalTimeName || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"utcTimeName\",\r\n\t\t\t\"generalTimeName\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema, schema, Time.schema({\r\n\t\t\tnames: {\r\n\t\t\t\tutcTimeName: \"utcTimeName\",\r\n\t\t\t\tgeneralTimeName: \"generalTimeName\"\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Time\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"utcTimeName\" in asn1.result)\r\n\t\t{\r\n\t\t\tthis.type = 0;\r\n\t\t\tthis.value = asn1.result.utcTimeName.toDate();\r\n\t\t}\r\n\t\tif(\"generalTimeName\" in asn1.result)\r\n\t\t{\r\n\t\t\tthis.type = 1;\r\n\t\t\tthis.value = asn1.result.generalTimeName.toDate();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tlet result = {};\r\n\r\n\t\tif(this.type === 0)\r\n\t\t\tresult = new asn1js.UTCTime({ valueDate: this.value });\r\n\t\tif(this.type === 1)\r\n\t\t\tresult = new asn1js.GeneralizedTime({ valueDate: this.value });\r\n\r\n\t\treturn result;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\ttype: this.type,\r\n\t\t\tvalue: this.value\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport Attribute from \"./Attribute.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class SubjectDirectoryAttributes\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for SubjectDirectoryAttributes class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<Attribute>}\r\n\t\t * @desc attributes\r\n\t\t */\r\n\t\tthis.attributes = getParametersValue(parameters, \"attributes\", SubjectDirectoryAttributes.defaultValues(\"attributes\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"attributes\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SubjectDirectoryAttributes class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * SubjectDirectoryAttributes ::= SEQUENCE SIZE (1..MAX) OF Attribute\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [utcTimeName] Name for \"utcTimeName\" choice\r\n\t\t * @property {string} [generalTimeName] Name for \"generalTimeName\" choice\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.attributes || \"\"),\r\n\t\t\t\t\tvalue: Attribute.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"attributes\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tSubjectDirectoryAttributes.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tattributes: \"attributes\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SubjectDirectoryAttributes\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.attributes = Array.from(asn1.result.attributes, element => new Attribute({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.attributes, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tattributes: Array.from(this.attributes, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PrivateKeyUsagePeriod\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PrivateKeyUsagePeriod class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"notBefore\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Date}\r\n\t\t\t * @desc notBefore\r\n\t\t\t */\r\n\t\t\tthis.notBefore = getParametersValue(parameters, \"notBefore\", PrivateKeyUsagePeriod.defaultValues(\"notBefore\"));\r\n\r\n\t\tif(\"notAfter\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Date}\r\n\t\t\t * @desc notAfter\r\n\t\t\t */\r\n\t\t\tthis.notAfter = getParametersValue(parameters, \"notAfter\", PrivateKeyUsagePeriod.defaultValues(\"notAfter\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"notBefore\":\r\n\t\t\t\treturn new Date();\r\n\t\t\tcase \"notAfter\":\r\n\t\t\t\treturn new Date();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PrivateKeyUsagePeriod class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PrivateKeyUsagePeriod OID ::= 2.5.29.16\r\n\t *\r\n\t * PrivateKeyUsagePeriod ::= SEQUENCE {\r\n\t *    notBefore       [0]     GeneralizedTime OPTIONAL,\r\n\t *    notAfter        [1]     GeneralizedTime OPTIONAL }\r\n\t * -- either notBefore or notAfter MUST be present\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [notBefore]\r\n\t\t * @property {string} [notAfter]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.notBefore || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.notAfter || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"notBefore\",\r\n\t\t\t\"notAfter\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPrivateKeyUsagePeriod.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tnotBefore: \"notBefore\",\r\n\t\t\t\t\tnotAfter: \"notAfter\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PrivateKeyUsagePeriod\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"notBefore\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst localNotBefore = new asn1js.GeneralizedTime();\r\n\t\t\tlocalNotBefore.fromBuffer(asn1.result.notBefore.valueBlock.valueHex);\r\n\t\t\tthis.notBefore = localNotBefore.toDate();\r\n\t\t}\r\n\r\n\t\tif(\"notAfter\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst localNotAfter = new asn1js.GeneralizedTime({ valueHex: asn1.result.notAfter.valueBlock.valueHex });\r\n\t\t\tlocalNotAfter.fromBuffer(asn1.result.notAfter.valueBlock.valueHex);\r\n\t\t\tthis.notAfter = localNotAfter.toDate();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"notBefore\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new asn1js.GeneralizedTime({ valueDate: this.notBefore })).valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"notAfter\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new asn1js.GeneralizedTime({ valueDate: this.notAfter })).valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"notBefore\" in this)\r\n\t\t\tobject.notBefore = this.notBefore;\r\n\r\n\t\tif(\"notAfter\" in this)\r\n\t\t\tobject.notAfter = this.notAfter;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class BasicConstraints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for BasicConstraints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {Object} [cA]\r\n\t * @property {Object} [pathLenConstraint]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc cA\r\n\t\t */\r\n\t\tthis.cA = getParametersValue(parameters, \"cA\", false);\r\n\r\n\t\tif(\"pathLenConstraint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number|Integer}\r\n\t\t\t * @desc pathLenConstraint\r\n\t\t\t */\r\n\t\t\tthis.pathLenConstraint = getParametersValue(parameters, \"pathLenConstraint\", 0);\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"cA\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for BasicConstraints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * BasicConstraints ::= SEQUENCE {\r\n\t *    cA                      BOOLEAN DEFAULT FALSE,\r\n\t *    pathLenConstraint       INTEGER (0..MAX) OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [cA]\r\n\t\t * @property {string} [pathLenConstraint]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.cA || \"\")\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.pathLenConstraint || \"\")\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"cA\",\r\n\t\t\t\"pathLenConstraint\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tBasicConstraints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcA: \"cA\",\r\n\t\t\t\t\tpathLenConstraint: \"pathLenConstraint\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for BasicConstraints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"cA\" in asn1.result)\r\n\t\t\tthis.cA = asn1.result.cA.valueBlock.value;\r\n\r\n\t\tif(\"pathLenConstraint\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.pathLenConstraint.valueBlock.isHexOnly)\r\n\t\t\t\tthis.pathLenConstraint = asn1.result.pathLenConstraint;\r\n\t\t\telse\r\n\t\t\t\tthis.pathLenConstraint = asn1.result.pathLenConstraint.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(this.cA !== BasicConstraints.defaultValues(\"cA\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.cA }));\r\n\t\t\r\n\t\tif(\"pathLenConstraint\" in this)\r\n\t\t{\r\n\t\t\tif(this.pathLenConstraint instanceof asn1js.Integer)\r\n\t\t\t\toutputArray.push(this.pathLenConstraint);\r\n\t\t\telse\r\n\t\t\t\toutputArray.push(new asn1js.Integer({ value: this.pathLenConstraint }));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(this.cA !== BasicConstraints.defaultValues(\"cA\"))\r\n\t\t\tobject.cA = this.cA;\r\n\r\n\t\tif(\"pathLenConstraint\" in this)\r\n\t\t{\r\n\t\t\tif(this.pathLenConstraint instanceof asn1js.Integer)\r\n\t\t\t\tobject.pathLenConstraint = this.pathLenConstraint.toJSON();\r\n\t\t\telse\r\n\t\t\t\tobject.pathLenConstraint = this.pathLenConstraint;\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class IssuingDistributionPoint\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for IssuingDistributionPoint class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"distributionPoint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>|RelativeDistinguishedNames}\r\n\t\t\t * @desc distributionPoint\r\n\t\t\t */\r\n\t\t\tthis.distributionPoint = getParametersValue(parameters, \"distributionPoint\", IssuingDistributionPoint.defaultValues(\"distributionPoint\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc onlyContainsUserCerts\r\n\t\t */\r\n\t\tthis.onlyContainsUserCerts = getParametersValue(parameters, \"onlyContainsUserCerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc onlyContainsCACerts\r\n\t\t */\r\n\t\tthis.onlyContainsCACerts = getParametersValue(parameters, \"onlyContainsCACerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"));\r\n\r\n\t\tif(\"onlySomeReasons\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc onlySomeReasons\r\n\t\t\t */\r\n\t\t\tthis.onlySomeReasons = getParametersValue(parameters, \"onlySomeReasons\", IssuingDistributionPoint.defaultValues(\"onlySomeReasons\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc indirectCRL\r\n\t\t */\r\n\t\tthis.indirectCRL = getParametersValue(parameters, \"indirectCRL\", IssuingDistributionPoint.defaultValues(\"indirectCRL\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc onlyContainsAttributeCerts\r\n\t\t */\r\n\t\tthis.onlyContainsAttributeCerts = getParametersValue(parameters, \"onlyContainsAttributeCerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"distributionPoint\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"onlyContainsUserCerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlyContainsCACerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlySomeReasons\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"indirectCRL\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlyContainsAttributeCerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for IssuingDistributionPoint class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * IssuingDistributionPoint ::= SEQUENCE {\r\n\t *    distributionPoint          [0] DistributionPointName OPTIONAL,\r\n\t *    onlyContainsUserCerts      [1] BOOLEAN DEFAULT FALSE,\r\n\t *    onlyContainsCACerts        [2] BOOLEAN DEFAULT FALSE,\r\n\t *    onlySomeReasons            [3] ReasonFlags OPTIONAL,\r\n\t *    indirectCRL                [4] BOOLEAN DEFAULT FALSE,\r\n\t *    onlyContainsAttributeCerts [5] BOOLEAN DEFAULT FALSE }\r\n\t *\r\n\t * ReasonFlags ::= BIT STRING {\r\n\t *    unused                  (0),\r\n\t *    keyCompromise           (1),\r\n\t *    cACompromise            (2),\r\n\t *    affiliationChanged      (3),\r\n\t *    superseded              (4),\r\n\t *    cessationOfOperation    (5),\r\n\t *    certificateHold         (6),\r\n\t *    privilegeWithdrawn      (7),\r\n\t *    aACompromise            (8) }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [distributionPoint]\r\n\t\t * @property {string} [distributionPointNames]\r\n\t\t * @property {string} [onlyContainsUserCerts]\r\n\t\t * @property {string} [onlyContainsCACerts]\r\n\t\t * @property {string} [onlySomeReasons]\r\n\t\t * @property {string} [indirectCRL]\r\n\t\t * @property {string} [onlyContainsAttributeCerts]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\t\t\tname: (names.distributionPointNames || \"\"),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: RelativeDistinguishedNames.schema().valueBlock.value\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsUserCerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsCACerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlySomeReasons || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT bitstring value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.indirectCRL || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsAttributeCerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 5 // [5]\r\n\t\t\t\t\t}\r\n\t\t\t\t}) // IMPLICIT boolean value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"distributionPoint\",\r\n\t\t\t\"distributionPointNames\",\r\n\t\t\t\"onlyContainsUserCerts\",\r\n\t\t\t\"onlyContainsCACerts\",\r\n\t\t\t\"onlySomeReasons\",\r\n\t\t\t\"indirectCRL\",\r\n\t\t\t\"onlyContainsAttributeCerts\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tIssuingDistributionPoint.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tdistributionPoint: \"distributionPoint\",\r\n\t\t\t\t\tdistributionPointNames: \"distributionPointNames\",\r\n\t\t\t\t\tonlyContainsUserCerts: \"onlyContainsUserCerts\",\r\n\t\t\t\t\tonlyContainsCACerts: \"onlyContainsCACerts\",\r\n\t\t\t\t\tonlySomeReasons: \"onlySomeReasons\",\r\n\t\t\t\t\tindirectCRL: \"indirectCRL\",\r\n\t\t\t\t\tonlyContainsAttributeCerts: \"onlyContainsAttributeCerts\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for IssuingDistributionPoint\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"distributionPoint\" in asn1.result)\r\n\t\t{\r\n\t\t\tswitch(true)\r\n\t\t\t{\r\n\t\t\t\tcase (asn1.result.distributionPoint.idBlock.tagNumber === 0): // GENERAL_NAMES variant\r\n\t\t\t\t\tthis.distributionPoint = Array.from(asn1.result.distributionPointNames, element => new GeneralName({ schema: element }));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (asn1.result.distributionPoint.idBlock.tagNumber === 1): // RDN variant\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.distributionPoint = new RelativeDistinguishedNames({\r\n\t\t\t\t\t\t\tschema: new asn1js.Sequence({\r\n\t\t\t\t\t\t\t\tvalue: asn1.result.distributionPoint.valueBlock.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Unknown tagNumber for distributionPoint: {$asn1.result.distributionPoint.idBlock.tagNumber}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsUserCerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsUserCerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsUserCerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsCACerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsCACerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsCACerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlySomeReasons.valueBlock.valueHex);\r\n\t\t\tthis.onlySomeReasons = view[0];\r\n\t\t}\r\n\t\t\r\n\t\tif(\"indirectCRL\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.indirectCRL.valueBlock.valueHex);\r\n\t\t\tthis.indirectCRL = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsAttributeCerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsAttributeCerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsAttributeCerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tlet value;\r\n\t\t\t\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t{\r\n\t\t\t\tvalue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: Array.from(this.distributionPoint, element => element.toSchema())\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvalue = this.distributionPoint.toSchema();\r\n\t\t\t\t\r\n\t\t\t\tvalue.idBlock.tagClass = 3; // CONTEXT - SPECIFIC\r\n\t\t\t\tvalue.idBlock.tagNumber = 1; // [1]\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [value]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsUserCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsCACerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in this)\r\n\t\t{\r\n\t\t\tconst buffer = new ArrayBuffer(1);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\tview[0] = this.onlySomeReasons;\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.indirectCRL !== IssuingDistributionPoint.defaultValues(\"indirectCRL\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsAttributeCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 5 // [5]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t\tobject.distributionPoint = Array.from(this.distributionPoint, element => element.toJSON());\r\n\t\t\telse\r\n\t\t\t\tobject.distributionPoint = this.distributionPoint.toJSON();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsUserCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"))\r\n\t\t\tobject.onlyContainsUserCerts = this.onlyContainsUserCerts;\r\n\t\t\r\n\t\tif(this.onlyContainsCACerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"))\r\n\t\t\tobject.onlyContainsCACerts = this.onlyContainsCACerts;\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in this)\r\n\t\t\tobject.onlySomeReasons = this.onlySomeReasons;\r\n\t\t\r\n\t\tif(this.indirectCRL !== IssuingDistributionPoint.defaultValues(\"indirectCRL\"))\r\n\t\t\tobject.indirectCRL = this.indirectCRL;\r\n\t\t\r\n\t\tif(this.onlyContainsAttributeCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"))\r\n\t\t\tobject.onlyContainsAttributeCerts = this.onlyContainsAttributeCerts;\r\n\t\t\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class GeneralNames\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for GeneralNames class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<GeneralName>}\r\n\t\t * @desc Array of \"general names\"\r\n\t\t */\r\n\t\tthis.names = getParametersValue(parameters, \"names\", GeneralNames.defaultValues(\"names\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"names\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for GeneralNames class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @param {boolean} [optional=false] Flag would be element optional or not\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {}, optional = false)\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} utcTimeName Name for \"utcTimeName\" choice\r\n\t\t * @property {string} generalTimeName Name for \"generalTimeName\" choice\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\toptional,\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.generalNames || \"\"),\r\n\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"names\",\r\n\t\t\t\"generalNames\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tGeneralNames.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"names\",\r\n\t\t\t\t\tgeneralNames: \"generalNames\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for GeneralNames\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.names = Array.from(asn1.result.generalNames, element => new GeneralName({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.names, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tnames: Array.from(this.names, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class GeneralSubtree\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for GeneralSubtree class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {GeneralName}\r\n\t\t * @desc base\r\n\t\t */\r\n\t\tthis.base = getParametersValue(parameters, \"base\", GeneralSubtree.defaultValues(\"base\"));\r\n\r\n\t\t/**\r\n\t\t * @type {number|Integer}\r\n\t\t * @desc base\r\n\t\t */\r\n\t\tthis.minimum = getParametersValue(parameters, \"minimum\", GeneralSubtree.defaultValues(\"minimum\"));\r\n\r\n\t\tif(\"maximum\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number|Integer}\r\n\t\t\t * @desc minimum\r\n\t\t\t */\r\n\t\t\tthis.maximum = getParametersValue(parameters, \"maximum\", GeneralSubtree.defaultValues(\"maximum\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"base\":\r\n\t\t\t\treturn new GeneralName();\r\n\t\t\tcase \"minimum\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"maximum\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for GeneralSubtree class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * GeneralSubtree ::= SEQUENCE {\r\n\t *    base                    GeneralName,\r\n\t *    minimum         [0]     BaseDistance DEFAULT 0,\r\n\t *    maximum         [1]     BaseDistance OPTIONAL }\r\n\t *\r\n\t * BaseDistance ::= INTEGER (0..MAX)\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [base]\r\n\t\t * @property {string} [minimum]\r\n\t\t * @property {string} [maximum]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tGeneralName.schema(names.base || {}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.minimum || \"\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.maximum || \"\") })]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"base\",\r\n\t\t\t\"minimum\",\r\n\t\t\t\"maximum\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tGeneralSubtree.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tbase: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"base\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tminimum: \"minimum\",\r\n\t\t\t\t\tmaximum: \"maximum\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for GeneralSubtree\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.base = new GeneralName({ schema: asn1.result.base });\r\n\r\n\t\tif(\"minimum\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.minimum.valueBlock.isHexOnly)\r\n\t\t\t\tthis.minimum = asn1.result.minimum;\r\n\t\t\telse\r\n\t\t\t\tthis.minimum = asn1.result.minimum.valueBlock.valueDec;\r\n\t\t}\r\n\r\n\t\tif(\"maximum\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.maximum.valueBlock.isHexOnly)\r\n\t\t\t\tthis.maximum = asn1.result.maximum;\r\n\t\t\telse\r\n\t\t\t\tthis.maximum = asn1.result.maximum.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(this.base.toSchema());\r\n\t\t\r\n\t\tif(this.minimum !== 0)\r\n\t\t{\r\n\t\t\tlet valueMinimum = 0;\r\n\t\t\t\r\n\t\t\tif(this.minimum instanceof asn1js.Integer)\r\n\t\t\t\tvalueMinimum = this.minimum;\r\n\t\t\telse\r\n\t\t\t\tvalueMinimum = new asn1js.Integer({ value: this.minimum });\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [valueMinimum]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"maximum\" in this)\r\n\t\t{\r\n\t\t\tlet valueMaximum = 0;\r\n\t\t\t\r\n\t\t\tif(this.maximum instanceof asn1js.Integer)\r\n\t\t\t\tvalueMaximum = this.maximum;\r\n\t\t\telse\r\n\t\t\t\tvalueMaximum = new asn1js.Integer({ value: this.maximum });\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [valueMaximum]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\tbase: this.base.toJSON()\r\n\t\t};\r\n\t\t\r\n\t\tif(this.minimum !== 0)\r\n\t\t{\r\n\t\t\tif((typeof this.minimum) === \"number\")\r\n\t\t\t\tobject.minimum = this.minimum;\r\n\t\t\telse\r\n\t\t\t\tobject.minimum = this.minimum.toJSON();\r\n\t\t}\r\n\t\t\r\n\t\tif(\"maximum\" in this)\r\n\t\t{\r\n\t\t\tif((typeof this.maximum) === \"number\")\r\n\t\t\t\tobject.maximum = this.maximum;\r\n\t\t\telse\r\n\t\t\t\tobject.maximum = this.maximum.toJSON();\r\n\t\t}\r\n\t\t\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralSubtree from \"./GeneralSubtree.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class NameConstraints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for NameConstraints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"permittedSubtrees\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralSubtree>}\r\n\t\t\t * @desc permittedSubtrees\r\n\t\t\t */\r\n\t\t\tthis.permittedSubtrees = getParametersValue(parameters, \"permittedSubtrees\", NameConstraints.defaultValues(\"permittedSubtrees\"));\r\n\r\n\t\tif(\"excludedSubtrees\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralSubtree>}\r\n\t\t\t * @desc excludedSubtrees\r\n\t\t\t */\r\n\t\t\tthis.excludedSubtrees = getParametersValue(parameters, \"excludedSubtrees\", NameConstraints.defaultValues(\"excludedSubtrees\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"permittedSubtrees\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"excludedSubtrees\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for NameConstraints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * NameConstraints ::= SEQUENCE {\r\n\t *    permittedSubtrees       [0]     GeneralSubtrees OPTIONAL,\r\n\t *    excludedSubtrees        [1]     GeneralSubtrees OPTIONAL }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [permittedSubtrees]\r\n\t\t * @property {string} [excludedSubtrees]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.permittedSubtrees || \"\"),\r\n\t\t\t\t\t\t\tvalue: GeneralSubtree.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.excludedSubtrees || \"\"),\r\n\t\t\t\t\t\t\tvalue: GeneralSubtree.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"permittedSubtrees\",\r\n\t\t\t\"excludedSubtrees\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tNameConstraints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tpermittedSubtrees: \"permittedSubtrees\",\r\n\t\t\t\t\texcludedSubtrees: \"excludedSubtrees\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for NameConstraints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"permittedSubtrees\" in asn1.result)\r\n\t\t\tthis.permittedSubtrees = Array.from(asn1.result.permittedSubtrees, element => new GeneralSubtree({ schema: element }));\r\n\r\n\t\tif(\"excludedSubtrees\" in asn1.result)\r\n\t\t\tthis.excludedSubtrees = Array.from(asn1.result.excludedSubtrees, element => new GeneralSubtree({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"permittedSubtrees\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.permittedSubtrees, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"excludedSubtrees\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.excludedSubtrees, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\t\t\r\n\t\tif(\"permittedSubtrees\" in this)\r\n\t\t\tobject.permittedSubtrees = Array.from(this.permittedSubtrees, element => element.toJSON());\r\n\r\n\t\tif(\"excludedSubtrees\" in this)\r\n\t\t\tobject.excludedSubtrees = Array.from(this.excludedSubtrees, element => element.toJSON());\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class DistributionPoint\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for DistributionPoint class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {Object} [distributionPoint]\r\n\t * @property {Object} [reasons]\r\n\t * @property {Object} [cRLIssuer]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"distributionPoint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @desc distributionPoint\r\n\t\t\t */\r\n\t\t\tthis.distributionPoint = getParametersValue(parameters, \"distributionPoint\", DistributionPoint.defaultValues(\"distributionPoint\"));\r\n\r\n\t\tif(\"reasons\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {BitString}\r\n\t\t\t * @desc values\r\n\t\t\t */\r\n\t\t\tthis.reasons = getParametersValue(parameters, \"reasons\", DistributionPoint.defaultValues(\"reasons\"));\r\n\r\n\t\tif(\"cRLIssuer\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @desc cRLIssuer\r\n\t\t\t */\r\n\t\t\tthis.cRLIssuer = getParametersValue(parameters, \"cRLIssuer\", DistributionPoint.defaultValues(\"cRLIssuer\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"distributionPoint\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"reasons\":\r\n\t\t\t\treturn new asn1js.BitString();\r\n\t\t\tcase \"cRLIssuer\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for DistributionPoint class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * DistributionPoint ::= SEQUENCE {\r\n\t *    distributionPoint       [0]     DistributionPointName OPTIONAL,\r\n\t *    reasons                 [1]     ReasonFlags OPTIONAL,\r\n\t *    cRLIssuer               [2]     GeneralNames OPTIONAL }\r\n\t *\r\n\t * DistributionPointName ::= CHOICE {\r\n\t *    fullName                [0]     GeneralNames,\r\n\t *    nameRelativeToCRLIssuer [1]     RelativeDistinguishedName }\r\n\t *\r\n\t * ReasonFlags ::= BIT STRING {\r\n\t *    unused                  (0),\r\n\t *    keyCompromise           (1),\r\n\t *    cACompromise            (2),\r\n\t *    affiliationChanged      (3),\r\n\t *    superseded              (4),\r\n\t *    cessationOfOperation    (5),\r\n\t *    certificateHold         (6),\r\n\t *    privilegeWithdrawn      (7),\r\n\t *    aACompromise            (8) }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [distributionPoint]\r\n\t\t * @property {string} [distributionPointNames]\r\n\t\t * @property {string} [reasons]\r\n\t\t * @property {string} [cRLIssuer]\r\n\t\t * @property {string} [cRLIssuerNames]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\t\t\tname: (names.distributionPointNames || \"\"),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: RelativeDistinguishedNames.schema().valueBlock.value\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.reasons || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT bitstring value\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.cRLIssuer || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.cRLIssuerNames || \"\"),\r\n\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}) // IMPLICIT bitstring value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"distributionPoint\",\r\n\t\t\t\"distributionPointNames\",\r\n\t\t\t\"reasons\",\r\n\t\t\t\"cRLIssuer\",\r\n\t\t\t\"cRLIssuerNames\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tDistributionPoint.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tdistributionPoint: \"distributionPoint\",\r\n\t\t\t\t\tdistributionPointNames: \"distributionPointNames\",\r\n\t\t\t\t\treasons: \"reasons\",\r\n\t\t\t\t\tcRLIssuer: \"cRLIssuer\",\r\n\t\t\t\t\tcRLIssuerNames: \"cRLIssuerNames\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for DistributionPoint\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"distributionPoint\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.distributionPoint.idBlock.tagNumber === 0) // GENERAL_NAMES variant\r\n\t\t\t\tthis.distributionPoint = Array.from(asn1.result.distributionPointNames, element => new GeneralName({ schema: element }));\r\n\r\n\t\t\tif(asn1.result.distributionPoint.idBlock.tagNumber === 1) // RDN variant\r\n\t\t\t{\r\n\t\t\t\tthis.distributionPoint = new RelativeDistinguishedNames({\r\n\t\t\t\t\tschema: new asn1js.Sequence({\r\n\t\t\t\t\t\tvalue: asn1.result.distributionPoint.valueBlock.value\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(\"reasons\" in asn1.result)\r\n\t\t\tthis.reasons = new asn1js.BitString({ valueHex: asn1.result.reasons.valueBlock.valueHex });\r\n\r\n\t\tif(\"cRLIssuer\" in asn1.result)\r\n\t\t\tthis.cRLIssuer = Array.from(asn1.result.cRLIssuerNames, element => new GeneralName({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tlet internalValue;\r\n\t\t\t\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t{\r\n\t\t\t\tinternalValue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: Array.from(this.distributionPoint, element => element.toSchema())\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinternalValue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.distributionPoint.toSchema()]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [internalValue]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"reasons\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.reasons.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"cRLIssuer\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.cRLIssuer, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t\tobject.distributionPoint = Array.from(this.distributionPoint, element => element.toJSON());\r\n\t\t\telse\r\n\t\t\t\tobject.distributionPoint = this.distributionPoint.toJSON();\r\n\t\t}\r\n\r\n\t\tif(\"reasons\" in this)\r\n\t\t\tobject.reasons = this.reasons.toJSON();\r\n\r\n\t\tif(\"cRLIssuer\" in this)\r\n\t\t\tobject.cRLIssuer = Array.from(this.cRLIssuer, element => element.toJSON());\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport DistributionPoint from \"./DistributionPoint.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class CRLDistributionPoints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CRLDistributionPoints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<DistributionPoint>}\r\n\t\t * @desc distributionPoints\r\n\t\t */\r\n\t\tthis.distributionPoints = getParametersValue(parameters, \"distributionPoints\", CRLDistributionPoints.defaultValues(\"distributionPoints\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"distributionPoints\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CRLDistributionPoints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * CRLDistributionPoints ::= SEQUENCE SIZE (1..MAX) OF DistributionPoint\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [distributionPoints]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.distributionPoints || \"\"),\r\n\t\t\t\t\tvalue: DistributionPoint.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"distributionPoints\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tCRLDistributionPoints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tdistributionPoints: \"distributionPoints\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CRLDistributionPoints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.distributionPoints = Array.from(asn1.result.distributionPoints, element => new DistributionPoint({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.distributionPoints, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tdistributionPoints: Array.from(this.distributionPoints, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PolicyQualifierInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PolicyQualifierInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc policyQualifierId\r\n\t\t */\r\n\t\tthis.policyQualifierId = getParametersValue(parameters, \"policyQualifierId\", PolicyQualifierInfo.defaultValues(\"policyQualifierId\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc qualifier\r\n\t\t */\r\n\t\tthis.qualifier = getParametersValue(parameters, \"qualifier\", PolicyQualifierInfo.defaultValues(\"qualifier\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"policyQualifierId\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"qualifier\":\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PolicyQualifierInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PolicyQualifierInfo ::= SEQUENCE {\r\n\t *    policyQualifierId  PolicyQualifierId,\r\n\t *    qualifier          ANY DEFINED BY policyQualifierId }\r\n\t *\r\n\t * id-qt          OBJECT IDENTIFIER ::=  { id-pkix 2 }\r\n\t * id-qt-cps      OBJECT IDENTIFIER ::=  { id-qt 1 }\r\n\t * id-qt-unotice  OBJECT IDENTIFIER ::=  { id-qt 2 }\r\n\t *\r\n\t * PolicyQualifierId ::= OBJECT IDENTIFIER ( id-qt-cps | id-qt-unotice )\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [policyQualifierId]\r\n\t\t * @property {string} [qualifier]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.policyQualifierId || \"\") }),\r\n\t\t\t\tnew asn1js.Any({ name: (names.qualifier || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"policyQualifierId\",\r\n\t\t\t\"qualifier\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPolicyQualifierInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tpolicyQualifierId: \"policyQualifierId\",\r\n\t\t\t\t\tqualifier: \"qualifier\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PolicyQualifierInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.policyQualifierId = asn1.result.policyQualifierId.valueBlock.toString();\r\n\t\tthis.qualifier = asn1.result.qualifier;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.policyQualifierId }),\r\n\t\t\t\tthis.qualifier\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tpolicyQualifierId: this.policyQualifierId,\r\n\t\t\tqualifier: this.qualifier.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport PolicyQualifierInfo from \"./PolicyQualifierInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PolicyInformation\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PolicyInformation class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc policyIdentifier\r\n\t\t */\r\n\t\tthis.policyIdentifier = getParametersValue(parameters, \"policyIdentifier\", PolicyInformation.defaultValues(\"policyIdentifier\"));\r\n\r\n\t\tif(\"policyQualifiers\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<PolicyQualifierInfo>}\r\n\t\t\t * @desc Value of the TIME class\r\n\t\t\t */\r\n\t\t\tthis.policyQualifiers = getParametersValue(parameters, \"policyQualifiers\", PolicyInformation.defaultValues(\"policyQualifiers\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"policyIdentifier\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"policyQualifiers\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PolicyInformation class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PolicyInformation ::= SEQUENCE {\r\n\t *    policyIdentifier   CertPolicyId,\r\n\t *    policyQualifiers   SEQUENCE SIZE (1..MAX) OF\r\n\t *    PolicyQualifierInfo OPTIONAL }\r\n\t *\r\n\t * CertPolicyId ::= OBJECT IDENTIFIER\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [policyIdentifier]\r\n\t\t * @property {string} [policyQualifiers]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.policyIdentifier || \"\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.policyQualifiers || \"\"),\r\n\t\t\t\t\t\t\tvalue: PolicyQualifierInfo.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"policyIdentifier\",\r\n\t\t\t\"policyQualifiers\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPolicyInformation.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tpolicyIdentifier: \"policyIdentifier\",\r\n\t\t\t\t\tpolicyQualifiers: \"policyQualifiers\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PolicyInformation\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.policyIdentifier = asn1.result.policyIdentifier.valueBlock.toString();\r\n\r\n\t\tif(\"policyQualifiers\" in asn1.result)\r\n\t\t\tthis.policyQualifiers = Array.from(asn1.result.policyQualifiers, element => new PolicyQualifierInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.policyIdentifier }));\r\n\t\t\r\n\t\tif(\"policyQualifiers\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.policyQualifiers, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\tpolicyIdentifier: this.policyIdentifier\r\n\t\t};\r\n\r\n\t\tif(\"policyQualifiers\" in this)\r\n\t\t\tobject.policyQualifiers = Array.from(this.policyQualifiers, element => element.toJSON());\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport PolicyInformation from \"./PolicyInformation.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class CertificatePolicies\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CertificatePolicies class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<PolicyInformation>}\r\n\t\t * @desc certificatePolicies\r\n\t\t */\r\n\t\tthis.certificatePolicies = getParametersValue(parameters, \"certificatePolicies\", CertificatePolicies.defaultValues(\"certificatePolicies\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certificatePolicies\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CertificatePolicies class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * certificatePolicies ::= SEQUENCE SIZE (1..MAX) OF PolicyInformation\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [certificatePolicies]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.certificatePolicies || \"\"),\r\n\t\t\t\t\tvalue: PolicyInformation.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"certificatePolicies\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tCertificatePolicies.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcertificatePolicies: \"certificatePolicies\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CertificatePolicies\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.certificatePolicies = Array.from(asn1.result.certificatePolicies, element => new PolicyInformation({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.certificatePolicies, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tcertificatePolicies: Array.from(this.certificatePolicies, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PolicyMapping\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PolicyMapping class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc issuerDomainPolicy\r\n\t\t */\r\n\t\tthis.issuerDomainPolicy = getParametersValue(parameters, \"issuerDomainPolicy\", PolicyMapping.defaultValues(\"issuerDomainPolicy\"));\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc subjectDomainPolicy\r\n\t\t */\r\n\t\tthis.subjectDomainPolicy = getParametersValue(parameters, \"subjectDomainPolicy\", PolicyMapping.defaultValues(\"subjectDomainPolicy\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"issuerDomainPolicy\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"subjectDomainPolicy\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PolicyMapping class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PolicyMapping ::= SEQUENCE {\r\n\t *    issuerDomainPolicy      CertPolicyId,\r\n\t *    subjectDomainPolicy     CertPolicyId }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [issuerDomainPolicy]\r\n\t\t * @property {string} [subjectDomainPolicy]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.issuerDomainPolicy || \"\") }),\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.subjectDomainPolicy || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"issuerDomainPolicy\",\r\n\t\t\t\"subjectDomainPolicy\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPolicyMapping.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tissuerDomainPolicy: \"issuerDomainPolicy\",\r\n\t\t\t\t\tsubjectDomainPolicy: \"subjectDomainPolicy\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PolicyMapping\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.issuerDomainPolicy = asn1.result.issuerDomainPolicy.valueBlock.toString();\r\n\t\tthis.subjectDomainPolicy = asn1.result.subjectDomainPolicy.valueBlock.toString();\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.issuerDomainPolicy }),\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.subjectDomainPolicy })\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tissuerDomainPolicy: this.issuerDomainPolicy,\r\n\t\t\tsubjectDomainPolicy: this.subjectDomainPolicy\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport PolicyMapping from \"./PolicyMapping.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PolicyMappings\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PolicyMappings class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<PolicyMapping>}\r\n\t\t * @desc mappings\r\n\t\t */\r\n\t\tthis.mappings = getParametersValue(parameters, \"mappings\", PolicyMappings.defaultValues(\"mappings\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"mappings\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PolicyMappings class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PolicyMappings ::= SEQUENCE SIZE (1..MAX) OF PolicyMapping\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [utcTimeName] Name for \"utcTimeName\" choice\r\n\t\t * @property {string} [generalTimeName] Name for \"generalTimeName\" choice\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.mappings || \"\"),\r\n\t\t\t\t\tvalue: PolicyMapping.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"mappings\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPolicyMappings.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tmappings: \"mappings\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PolicyMappings\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.mappings = Array.from(asn1.result.mappings, element => new PolicyMapping({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.mappings, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tmappings: Array.from(this.mappings, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class AuthorityKeyIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AuthorityKeyIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"keyIdentifier\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @desc keyIdentifier\r\n\t\t\t */\r\n\t\t\tthis.keyIdentifier = getParametersValue(parameters, \"keyIdentifier\", AuthorityKeyIdentifier.defaultValues(\"keyIdentifier\"));\r\n\r\n\t\tif(\"authorityCertIssuer\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @desc authorityCertIssuer\r\n\t\t\t */\r\n\t\t\tthis.authorityCertIssuer = getParametersValue(parameters, \"authorityCertIssuer\", AuthorityKeyIdentifier.defaultValues(\"authorityCertIssuer\"));\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Integer}\r\n\t\t\t * @desc authorityCertIssuer\r\n\t\t\t */\r\n\t\t\tthis.authorityCertSerialNumber = getParametersValue(parameters, \"authorityCertSerialNumber\", AuthorityKeyIdentifier.defaultValues(\"authorityCertSerialNumber\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyIdentifier\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"authorityCertIssuer\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"authorityCertSerialNumber\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthorityKeyIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AuthorityKeyIdentifier OID ::= 2.5.29.35\r\n\t *\r\n\t * AuthorityKeyIdentifier ::= SEQUENCE {\r\n\t *    keyIdentifier             [0] KeyIdentifier           OPTIONAL,\r\n\t *    authorityCertIssuer       [1] GeneralNames            OPTIONAL,\r\n\t *    authorityCertSerialNumber [2] CertificateSerialNumber OPTIONAL  }\r\n\t *\r\n\t * KeyIdentifier ::= OCTET STRING\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyIdentifier]\r\n\t\t * @property {string} [authorityCertIssuer]\r\n\t\t * @property {string} [authorityCertSerialNumber]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.keyIdentifier || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.authorityCertIssuer || \"\"),\r\n\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.authorityCertSerialNumber || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"keyIdentifier\",\r\n\t\t\t\"authorityCertIssuer\",\r\n\t\t\t\"authorityCertSerialNumber\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAuthorityKeyIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyIdentifier: \"keyIdentifier\",\r\n\t\t\t\t\tauthorityCertIssuer: \"authorityCertIssuer\",\r\n\t\t\t\t\tauthorityCertSerialNumber: \"authorityCertSerialNumber\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AuthorityKeyIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"keyIdentifier\" in asn1.result)\r\n\t\t\tthis.keyIdentifier = new asn1js.OctetString({ valueHex: asn1.result.keyIdentifier.valueBlock.valueHex });\r\n\r\n\t\tif(\"authorityCertIssuer\" in asn1.result)\r\n\t\t\tthis.authorityCertIssuer = Array.from(asn1.result.authorityCertIssuer, element => new GeneralName({ schema: element }));\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in asn1.result)\r\n\t\t\tthis.authorityCertSerialNumber = new asn1js.Integer({ valueHex: asn1.result.authorityCertSerialNumber.valueBlock.valueHex });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"keyIdentifier\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.keyIdentifier.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"authorityCertIssuer\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.authorityCertIssuer, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"authorityCertSerialNumber\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.authorityCertSerialNumber.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"keyIdentifier\" in this)\r\n\t\t\tobject.keyIdentifier = this.keyIdentifier.toJSON();\r\n\r\n\t\tif(\"authorityCertIssuer\" in this)\r\n\t\t\tobject.authorityCertIssuer = Array.from(this.authorityCertIssuer, element => element.toJSON());\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in this)\r\n\t\t\tobject.authorityCertSerialNumber = this.authorityCertSerialNumber.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PolicyConstraints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PolicyConstraints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"requireExplicitPolicy\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc requireExplicitPolicy\r\n\t\t\t */\r\n\t\t\tthis.requireExplicitPolicy = getParametersValue(parameters, \"requireExplicitPolicy\", PolicyConstraints.defaultValues(\"requireExplicitPolicy\"));\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc Value of the TIME class\r\n\t\t\t */\r\n\t\t\tthis.inhibitPolicyMapping = getParametersValue(parameters, \"inhibitPolicyMapping\", PolicyConstraints.defaultValues(\"inhibitPolicyMapping\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"requireExplicitPolicy\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"inhibitPolicyMapping\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PolicyConstraints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PolicyConstraints ::= SEQUENCE {\r\n\t *    requireExplicitPolicy           [0] SkipCerts OPTIONAL,\r\n\t *    inhibitPolicyMapping            [1] SkipCerts OPTIONAL }\r\n\t *\r\n\t * SkipCerts ::= INTEGER (0..MAX)\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [requireExplicitPolicy]\r\n\t\t * @property {string} [inhibitPolicyMapping]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.requireExplicitPolicy || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT integer value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.inhibitPolicyMapping || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}) // IMPLICIT integer value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"requireExplicitPolicy\",\r\n\t\t\t\"inhibitPolicyMapping\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPolicyConstraints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\trequireExplicitPolicy: \"requireExplicitPolicy\",\r\n\t\t\t\t\tinhibitPolicyMapping: \"inhibitPolicyMapping\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PolicyConstraints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"requireExplicitPolicy\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst field1 = asn1.result.requireExplicitPolicy;\r\n\r\n\t\t\tfield1.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tfield1.idBlock.tagNumber = 2; // INTEGER\r\n\r\n\t\t\tconst ber1 = field1.toBER(false);\r\n\t\t\tconst int1 = asn1js.fromBER(ber1);\r\n\r\n\t\t\tthis.requireExplicitPolicy = int1.result.valueBlock.valueDec;\r\n\t\t}\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst field2 = asn1.result.inhibitPolicyMapping;\r\n\r\n\t\t\tfield2.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tfield2.idBlock.tagNumber = 2; // INTEGER\r\n\r\n\t\t\tconst ber2 = field2.toBER(false);\r\n\t\t\tconst int2 = asn1js.fromBER(ber2);\r\n\r\n\t\t\tthis.inhibitPolicyMapping = int2.result.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create correct values for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"requireExplicitPolicy\" in this)\r\n\t\t{\r\n\t\t\tconst int1 = new asn1js.Integer({ value: this.requireExplicitPolicy });\r\n\t\t\t\r\n\t\t\tint1.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tint1.idBlock.tagNumber = 0; // [0]\r\n\t\t\t\r\n\t\t\toutputArray.push(int1);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"inhibitPolicyMapping\" in this)\r\n\t\t{\r\n\t\t\tconst int2 = new asn1js.Integer({ value: this.inhibitPolicyMapping });\r\n\t\t\t\r\n\t\t\tint2.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tint2.idBlock.tagNumber = 1; // [1]\r\n\t\t\t\r\n\t\t\toutputArray.push(int2);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"requireExplicitPolicy\" in this)\r\n\t\t\tobject.requireExplicitPolicy = this.requireExplicitPolicy;\r\n\r\n\t\tif(\"inhibitPolicyMapping\" in this)\r\n\t\t\tobject.inhibitPolicyMapping = this.inhibitPolicyMapping;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class ExtKeyUsage\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ExtKeyUsage class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<string>}\r\n\t\t * @desc keyPurposes\r\n\t\t */\r\n\t\tthis.keyPurposes = getParametersValue(parameters, \"keyPurposes\", ExtKeyUsage.defaultValues(\"keyPurposes\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyPurposes\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ExtKeyUsage class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ExtKeyUsage ::= SEQUENCE SIZE (1..MAX) OF KeyPurposeId\r\n\t *\r\n\t * KeyPurposeId ::= OBJECT IDENTIFIER\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyPurposes]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.keyPurposes || \"\"),\r\n\t\t\t\t\tvalue: new asn1js.ObjectIdentifier()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"keyPurposes\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tExtKeyUsage.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyPurposes: \"keyPurposes\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ExtKeyUsage\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.keyPurposes = Array.from(asn1.result.keyPurposes, element => element.valueBlock.toString());\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.keyPurposes, element => new asn1js.ObjectIdentifier({ value: element }))\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tkeyPurposes: Array.from(this.keyPurposes)\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AccessDescription from \"./AccessDescription.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class InfoAccess\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for InfoAccess class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<AccessDescription>}\r\n\t\t * @desc accessDescriptions\r\n\t\t */\r\n\t\tthis.accessDescriptions = getParametersValue(parameters, \"accessDescriptions\", InfoAccess.defaultValues(\"accessDescriptions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"accessDescriptions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for InfoAccess class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * AuthorityInfoAccessSyntax  ::=\r\n\t * SEQUENCE SIZE (1..MAX) OF AccessDescription\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [accessDescriptions]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.accessDescriptions || \"\"),\r\n\t\t\t\t\tvalue: AccessDescription.schema()\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"accessDescriptions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tInfoAccess.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\taccessDescriptions: \"accessDescriptions\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for InfoAccess\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.accessDescriptions = Array.from(asn1.result.accessDescriptions, element => new AccessDescription({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.accessDescriptions, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\taccessDescriptions: Array.from(this.accessDescriptions, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","/*\r\n * Copyright (c) 2016-2018, Peculiar Ventures\r\n * All rights reserved.\r\n *\r\n * Author 2016-2018, Yury Strozhevsky <www.strozhevsky.com>.\r\n *\r\n */\r\n//**************************************************************************************\r\nexport class ByteStream\r\n{\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS\r\n\t/**\r\n\t * Constructor for ByteStream class\r\n\t * @param {{[length]: number, [stub]: number, [view]: Uint8Array, [buffer]: ArrayBuffer, [string]: string, [hexstring]: string}} parameters\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tthis.clear();\r\n\t\t\r\n\t\tfor(const key of Object.keys(parameters))\r\n\t\t{\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase \"length\":\r\n\t\t\t\t\tthis.length = parameters.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"stub\":\r\n\t\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\t\tfor(let i = 0; i < this._view.length; i++)\r\n\t\t\t\t\t\tthis._view[i] = parameters.stub;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"view\":\r\n\t\t\t\t\tthis.fromUint8Array(parameters.view);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"buffer\":\r\n\t\t\t\t\tthis.fromArrayBuffer(parameters.buffer);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tthis.fromString(parameters.string);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hexstring\":\r\n\t\t\t\t\tthis.fromHexString(parameters.hexstring);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"buffer\"\r\n\t * @param {ArrayBuffer} value\r\n\t */\r\n\tset buffer(value)\r\n\t{\r\n\t\tthis._buffer = value.slice(0);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"buffer\"\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\tget buffer()\r\n\t{\r\n\t\treturn this._buffer;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"view\"\r\n\t * @param {Uint8Array} value\r\n\t */\r\n\tset view(value)\r\n\t{\r\n\t\tthis._buffer = new ArrayBuffer(value.length);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t\t\r\n\t\tthis._view.set(value);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"view\"\r\n\t * @returns {Uint8Array}\r\n\t */\r\n\tget view()\r\n\t{\r\n\t\treturn this._view;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"length\"\r\n\t * @returns {number}\r\n\t */\r\n\tget length()\r\n\t{\r\n\t\treturn this._buffer.byteLength;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"length\"\r\n\t * @param {number} value\r\n\t */\r\n\tset length(value)\r\n\t{\r\n\t\tthis._buffer = new ArrayBuffer(value);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Clear existing stream\r\n\t */\r\n\tclear()\r\n\t{\r\n\t\tthis._buffer = new ArrayBuffer(0);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"Stream\" object from existing \"ArrayBuffer\"\r\n\t * @param {!ArrayBuffer} array The ArrayBuffer to copy from\r\n\t */\r\n\tfromArrayBuffer(array)\r\n\t{\r\n\t\tthis.buffer = array;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Initialize \"Stream\" object from existing \"Uint8Array\"\r\n\t * @param {!Uint8Array} array The Uint8Array to copy from\r\n\t */\r\n\tfromUint8Array(array)\r\n\t{\r\n\t\tthis._buffer = new ArrayBuffer(array.length);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t\t\r\n\t\tthis._view.set(array);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"Stream\" object from existing string\r\n\t * @param {string} string The string to initialize from\r\n\t */\r\n\tfromString(string)\r\n\t{\r\n\t\tconst stringLength = string.length;\r\n\t\t\r\n\t\tthis.length = stringLength;\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = 0; i < stringLength; i++)\r\n\t\t\tthis.view[i] = string.charCodeAt(i);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Represent \"Stream\" object content as a string\r\n\t * @param {number} [start] Start position to convert to string\r\n\t * @param {number} [length] Length of array to convert to string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(start = 0, length = (this.view.length - start))\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet result = \"\";\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((start >= this.view.length) || (start < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((length >= this.view.length) || (length < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.view.length - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert array of bytes to string\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = start; i < (start + length); i++)\r\n\t\t\tresult += String.fromCharCode(this.view[i]);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionTooLongJS\r\n\t/**\r\n\t * Initialize \"Stream\" object from existing hexdecimal string\r\n\t * @param {string} hexString String to initialize from\r\n\t */\r\n\tfromHexString(hexString)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst stringLength = hexString.length;\r\n\t\t\r\n\t\tthis.buffer = new ArrayBuffer(stringLength >> 1);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tconst hexMap = new Map();\r\n\t\t\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"0\", 0x00);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"1\", 0x01);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"2\", 0x02);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"3\", 0x03);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"4\", 0x04);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"5\", 0x05);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"6\", 0x06);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"7\", 0x07);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"8\", 0x08);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"9\", 0x09);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"A\", 0x0A);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"a\", 0x0A);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"B\", 0x0B);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"b\", 0x0B);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"C\", 0x0C);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"c\", 0x0C);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"D\", 0x0D);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"d\", 0x0D);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"E\", 0x0E);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"e\", 0x0E);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"F\", 0x0F);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"f\", 0x0F);\r\n\t\t\r\n\t\tlet j = 0;\r\n\t\t// noinspection MagicNumberJS\r\n\t\tlet temp = 0x00;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert char-by-char\r\n\t\tfor(let i = 0; i < stringLength; i++)\r\n\t\t{\r\n\t\t\t// noinspection NegatedIfStatementJS\r\n\t\t\tif(!(i % 2))\r\n\t\t\t{\r\n\t\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\t\ttemp = hexMap.get(hexString.charAt(i)) << 4;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\t\ttemp |= hexMap.get(hexString.charAt(i));\r\n\t\t\t\t\r\n\t\t\t\tthis.view[j] = temp;\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Represent \"Stream\" object content as a hexdecimal string\r\n\t * @param {number} [start=0] Start position to convert to string\r\n\t * @param {number} [length=(this.view.length - start)] Length of array to convert to string\r\n\t * @returns {string}\r\n\t */\r\n\ttoHexString(start = 0, length = (this.view.length - start))\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet result = \"\";\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((start >= this.view.length) || (start < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((length >= this.view.length) || (length < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.view.length - start;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\tfor(let i = start; i < (start + length); i++)\r\n\t\t{\r\n\t\t\t// noinspection ChainedFunctionCallJS\r\n\t\t\tconst str = this.view[i].toString(16).toUpperCase();\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\t\tresult = result + ((str.length == 1) ? \"0\" : \"\") + str;\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Return copy of existing \"Stream\"\r\n\t * @param {number} [start=0] Start position of the copy\r\n\t * @param {number} [length=this.view.length] Length of the copy\r\n\t * @returns {ByteStream}\r\n\t */\r\n\tcopy(start = 0, length = (this._buffer.byteLength - start))\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start === 0) && (this._buffer.byteLength === 0))\r\n\t\t\treturn new ByteStream();\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start < 0) || (start > (this._buffer.byteLength - 1)))\r\n\t\t\tthrow new Error(`Wrong start position: ${start}`);\r\n\t\t//endregion\r\n\t\t\r\n\t\tconst stream = new ByteStream();\r\n\t\t\r\n\t\tstream._buffer = this._buffer.slice(start, start + length);\r\n\t\tstream._view = new Uint8Array(stream._buffer);\r\n\t\t\r\n\t\treturn stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Return slice of existing \"Stream\"\r\n\t * @param {number} [start=0] Start position of the slice\r\n\t * @param {number} [end=this._buffer.byteLength] End position of the slice\r\n\t * @returns {ByteStream}\r\n\t */\r\n\tslice(start = 0, end = this._buffer.byteLength)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start === 0) && (this._buffer.byteLength === 0))\r\n\t\t\treturn new ByteStream();\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start < 0) || (start > (this._buffer.byteLength - 1)))\r\n\t\t\tthrow new Error(`Wrong start position: ${start}`);\r\n\t\t//endregion\r\n\t\t\r\n\t\tconst stream = new ByteStream();\r\n\t\t\r\n\t\tstream._buffer = this._buffer.slice(start, end);\r\n\t\tstream._view = new Uint8Array(stream._buffer);\r\n\t\t\r\n\t\treturn stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Change size of existing \"Stream\"\r\n\t * @param {!number} size Size for new \"Stream\"\r\n\t */\r\n\trealloc(size)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst buffer = new ArrayBuffer(size);\r\n\t\tconst view = new Uint8Array(buffer);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create a new ArrayBuffer content\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(size > this._view.length)\r\n\t\t\tview.set(this._view);\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tview.set(new Uint8Array(this._buffer, 0, size));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initialize \"Stream\" with new \"ArrayBuffer\"\r\n\t\tthis._buffer = buffer.slice(0);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a new \"Stream\" content to the current \"Stream\"\r\n\t * @param {ByteStream} stream A new \"stream\" to append to current \"stream\"\r\n\t */\r\n\tappend(stream)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst initialSize = this._buffer.byteLength;\r\n\t\tconst streamViewLength = stream._buffer.byteLength;\r\n\t\t\r\n\t\tconst copyView = stream._view.slice();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Re-allocate current internal buffer\r\n\t\tthis.realloc(initialSize + streamViewLength);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Copy input stream content to a new place\r\n\t\tthis._view.set(copyView, initialSize);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Insert \"Stream\" content to the current \"Stream\" at specific position\r\n\t * @param {ByteStream} stream A new \"stream\" to insert to current \"stream\"\r\n\t * @param {number} [start=0] Start position to insert to\r\n\t * @param {number} [length]\r\n\t * @returns {boolean}\r\n\t */\r\n\tinsert(stream, start = 0, length = (this._buffer.byteLength - start))\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this._buffer.byteLength - 1))\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tif(length > (this._buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this._buffer.byteLength - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input variables\r\n\t\tif(length > stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = stream._buffer.byteLength;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Update content of the current stream\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(length == stream._buffer.byteLength)\r\n\t\t\tthis._view.set(stream._view, start);\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tthis._view.set(stream._view.slice(0, length), start);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Check that two \"Stream\" objects has equal content\r\n\t * @param {ByteStream} stream Stream to compare with\r\n\t * @returns {boolean}\r\n\t */\r\n\tisEqual(stream)\r\n\t{\r\n\t\t//region Check length of both buffers\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(this._buffer.byteLength != stream._buffer.byteLength)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Compare each byte of both buffers\r\n\t\tfor(let i = 0; i < stream._buffer.byteLength; i++)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(this.view[i] != stream.view[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Check that current \"Stream\" objects has equal content with input \"Uint8Array\"\r\n\t * @param {Uint8Array} view View to compare with\r\n\t * @returns {boolean}\r\n\t */\r\n\tisEqualView(view)\r\n\t{\r\n\t\t//region Check length of both buffers\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(view.length != this.view.length)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Compare each byte of both buffers\r\n\t\tfor(let i = 0; i < view.length; i++)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(this.view[i] != view[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Find any byte pattern in \"Stream\"\r\n\t * @param {ByteStream} pattern Stream having pattern value\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @param {boolean} [backward] Flag to search in backward order\r\n\t * @returns {number}\r\n\t */\r\n\tfindPattern(pattern, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Check input variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tconst patternLength = pattern.buffer.byteLength;\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(patternLength > length)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make a \"pre-read\" array for pattern\r\n\t\tconst patternArray = [];\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = 0; i < patternLength; i++)\r\n\t\t\tpatternArray.push(pattern.view[i]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for pattern\r\n\t\tfor(let i = 0; i <= (length - patternLength); i++)\r\n\t\t{\r\n\t\t\tlet equal = true;\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tconst equalStart = (backward) ? (start - patternLength - i) : (start + i);\r\n\t\t\t\r\n\t\t\tfor(let j = 0; j < patternLength; j++)\r\n\t\t\t{\r\n\t\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\t\tif(this.view[j + equalStart] != patternArray[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tequal = false;\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(equal)\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\treturn (backward) ? (start - patternLength - i) : (start + patternLength + i); // Position after the pattern found\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn (-1);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection OverlyComplexFunctionJS\r\n\t/**\r\n\t * Find first position of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{id: number, position: number}}\r\n\t */\r\n\tfindFirstIn(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst result = {\r\n\t\t\tid: (-1),\r\n\t\t\tposition: (backward) ? 0 : (start + length),\r\n\t\t\tlength: 0\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tconst position = this.findPattern(patterns[i], start, length, backward);\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(position != (-1))\r\n\t\t\t{\r\n\t\t\t\tlet valid = false;\r\n\t\t\t\tconst patternLength = patterns[i].length;\r\n\r\n\t\t\t\tif(backward)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\t\tif((position - patternLength) >= (result.position - result.length))\r\n\t\t\t\t\t\tvalid = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\t\tif((position - patternLength) <= (result.position - result.length))\r\n\t\t\t\t\t\tvalid = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(valid)\r\n\t\t\t\t{\r\n\t\t\t\t\tresult.position = position;\r\n\t\t\t\t\tresult.id = i;\r\n\t\t\t\t\tresult.length = patternLength;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all positions of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllIn(patterns, start = 0, length = (this.buffer.byteLength - start))\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet patternFound = {\r\n\t\t\tid: (-1),\r\n\t\t\tposition: start\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all accurences of patterns\r\n\t\tdo\r\n\t\t{\r\n\t\t\tconst position = patternFound.position;\r\n\t\t\t\r\n\t\t\tpatternFound = this.findFirstIn(patterns, patternFound.position, length);\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(patternFound.id == (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength -= (patternFound.position - position);\r\n\t\t\t\r\n\t\t\tresult.push({\r\n\t\t\t\tid: patternFound.id,\r\n\t\t\t\tposition: patternFound.position\r\n\t\t\t});\r\n\t\t} while(true); // eslint-disable-line\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all positions of a pattern\r\n\t * @param {ByteStream} pattern Stream having pattern value\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @returns {Array|number} Array with all pattern positions or (-1) if failed\r\n\t */\r\n\tfindAllPatternIn(pattern, start = 0, length = (this.buffer.byteLength - start))\r\n\t{\r\n\t\t//region Check input variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\tconst patternLength = pattern.buffer.byteLength;\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(patternLength > length)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make a \"pre-read\" array for pattern\r\n\t\tconst patternArray = Array.from(pattern.view);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for pattern\r\n\t\tfor(let i = 0; i <= (length - patternLength); i++)\r\n\t\t{\r\n\t\t\tlet equal = true;\r\n\t\t\tconst equalStart = start + i;\r\n\t\t\t\r\n\t\t\tfor(let j = 0; j < patternLength; j++)\r\n\t\t\t{\r\n\t\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\t\tif(this.view[j + equalStart] != patternArray[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tequal = false;\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(equal)\r\n\t\t\t{\r\n\t\t\t\tresult.push(start + patternLength + i); // Position after the pattern found\r\n\t\t\t\ti += (patternLength - 1); // On next step of \"for\" we will have \"i++\"\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Find first position of data, not included in patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{left: {id: number, position: *}, right: {id: number, position: number}, value: ByteStream}}\r\n\t */\r\n\tfindFirstNotIn(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst result = {\r\n\t\t\tleft: {\r\n\t\t\t\tid: (-1),\r\n\t\t\t\tposition: start\r\n\t\t\t},\r\n\t\t\tright: {\r\n\t\t\t\tid: (-1),\r\n\t\t\t\tposition: 0\r\n\t\t\t},\r\n\t\t\tvalue: new ByteStream()\r\n\t\t};\r\n\t\t\r\n\t\tlet currentLength = length;\r\n\t\t//endregion\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\twhile(currentLength > 0)\r\n\t\t{\r\n\t\t\t//region Search for nearest \"pattern\"\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tresult.right = this.findFirstIn(patterns,\r\n\t\t\t\t(backward) ? (start - length + currentLength) : (start + length - currentLength),\r\n\t\t\t\tcurrentLength,\r\n\t\t\t\tbackward);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region No pattern at all\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.right.id == (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = currentLength;\r\n\t\t\t\t\r\n\t\t\t\tif(backward)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tstart -= length;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tstart = result.left.position;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresult.value = new ByteStream();\r\n\t\t\t\t\r\n\t\t\t\tresult.value._buffer = this._buffer.slice(start, start + length);\r\n\t\t\t\tresult.value._view = new Uint8Array(result.value._buffer);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Check distance between two patterns\r\n\t\t\t// noinspection ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.right.position != ((backward) ? (result.left.position - patterns[result.right.id].buffer.byteLength) : (result.left.position + patterns[result.right.id].buffer.byteLength)))\r\n\t\t\t{\r\n\t\t\t\tif(backward)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tstart = result.right.position + patterns[result.right.id].buffer.byteLength;\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tlength = result.left.position - result.right.position - patterns[result.right.id].buffer.byteLength;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tstart = result.left.position;\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tlength = result.right.position - result.left.position - patterns[result.right.id].buffer.byteLength;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresult.value = new ByteStream();\r\n\t\t\t\t\r\n\t\t\t\tresult.value._buffer = this._buffer.slice(start, start + length);\r\n\t\t\t\tresult.value._view = new Uint8Array(result.value._buffer);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Store information about previous pattern\r\n\t\t\tresult.left = result.right;\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Change current length\r\n\t\t\tcurrentLength -= patterns[result.right.id]._buffer.byteLength;\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t\r\n\t\t//region Swap \"patterns\" in case of backward order\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\tconst temp = result.right;\r\n\t\t\tresult.right = result.left;\r\n\t\t\tresult.left = temp;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all positions of data, not included in patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllNotIn(patterns, start = null, length = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet patternFound = {\r\n\t\t\tleft: {\r\n\t\t\t\tid: (-1),\r\n\t\t\t\tposition: start\r\n\t\t\t},\r\n\t\t\tright: {\r\n\t\t\t\tid: (-1),\r\n\t\t\t\tposition: start\r\n\t\t\t},\r\n\t\t\tvalue: new ByteStream()\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all accurences of patterns\r\n\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\tdo\r\n\t\t{\r\n\t\t\tconst position = patternFound.right.position;\r\n\t\t\t\r\n\t\t\tpatternFound = this.findFirstNotIn(patterns, patternFound.right.position, length);\r\n\t\t\t\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength -= (patternFound.right.position - position);\r\n\t\t\t\r\n\t\t\tresult.push({\r\n\t\t\t\tleft: {\r\n\t\t\t\t\tid: patternFound.left.id,\r\n\t\t\t\t\tposition: patternFound.left.position\r\n\t\t\t\t},\r\n\t\t\t\tright: {\r\n\t\t\t\t\tid: patternFound.right.id,\r\n\t\t\t\t\tposition: patternFound.right.position\r\n\t\t\t\t},\r\n\t\t\t\tvalue: patternFound.value\r\n\t\t\t});\r\n\t\t} while(patternFound.right.id != (-1));\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array of pattern to look for\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {*}\r\n\t */\r\n\tfindFirstSequence(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find first byte from sequence\r\n\t\tconst firstIn = this.skipNotPatterns(patterns, start, length, backward);\r\n\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\tif(firstIn == (-1))\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tposition: (-1),\r\n\t\t\t\tvalue: new ByteStream()\r\n\t\t\t};\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find first byte not in sequence\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst firstNotIn = this.skipPatterns(patterns,\r\n\t\t\tfirstIn,\r\n\t\t\tlength - ((backward) ? (start - firstIn) : (firstIn - start)),\r\n\t\t\tbackward);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make output value\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = firstNotIn;\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (firstIn - firstNotIn);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = firstIn;\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (firstNotIn - firstIn);\r\n\t\t}\r\n\t\t\r\n\t\tconst value = new ByteStream();\r\n\t\t\r\n\t\tvalue._buffer = this._buffer.slice(start, start + length);\r\n\t\tvalue._view = new Uint8Array(value._buffer);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn {\r\n\t\t\tposition: firstNotIn,\r\n\t\t\tvalue\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all positions of a sequence of any patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array of patterns to search for\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllSequences(patterns, start = null, length = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet patternFound = {\r\n\t\t\tposition: start,\r\n\t\t\tvalue: new ByteStream()\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all accurences of patterns\r\n\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\tdo\r\n\t\t{\r\n\t\t\tconst position = patternFound.position;\r\n\t\t\t\r\n\t\t\tpatternFound = this.findFirstSequence(patterns, patternFound.position, length);\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(patternFound.position != (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength -= (patternFound.position - position);\r\n\t\t\t\t\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tposition: patternFound.position,\r\n\t\t\t\t\tvalue: patternFound.value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} while(patternFound.position != (-1));\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {ByteStream} leftPattern Left pattern to search for\r\n\t * @param {ByteStream} rightPattern Right pattern to search for\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedPatterns(leftPattern, rightPattern, start = null, length = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(leftPattern.isEqual(rightPattern))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet currentPositionLeft = 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all \"left patterns\" as sorted array\r\n\t\tconst leftPatterns = this.findAllPatternIn(leftPattern, start, length);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(leftPatterns.length == 0)\r\n\t\t\treturn result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all \"right patterns\" as sorted array\r\n\t\tconst rightPatterns = this.findAllPatternIn(rightPattern, start, length);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(rightPatterns.length == 0)\r\n\t\t\treturn result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Combine patterns\r\n\t\twhile(currentPositionLeft < leftPatterns.length)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(rightPatterns.length == 0)\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(leftPatterns[0] == rightPatterns[0])\r\n\t\t\t{\r\n\t\t\t\t// Possible situation when one pattern is a part of another\r\n\t\t\t\t// For example \"stream\" and \"endstream\"\r\n\t\t\t\t// In case when we have only \"endstream\" in fact \"stream\" will be also found at the same position\r\n\t\t\t\t// (position of the pattern is an index AFTER the pattern)\r\n\t\t\t\t\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tleft: leftPatterns[0],\r\n\t\t\t\t\tright: rightPatterns[0]\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tleftPatterns.splice(0, 1);\r\n\t\t\t\trightPatterns.splice(0, 1);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection ContinueStatementJS\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(leftPatterns[currentPositionLeft] > rightPatterns[0])\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(leftPatterns[currentPositionLeft] < rightPatterns[0])\r\n\t\t\t{\r\n\t\t\t\tcurrentPositionLeft++;\r\n\t\t\t\t\r\n\t\t\t\tif(currentPositionLeft >= leftPatterns.length)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult.push({\r\n\t\t\t\tleft: leftPatterns[currentPositionLeft - 1],\r\n\t\t\t\tright: rightPatterns[0]\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tleftPatterns.splice(currentPositionLeft - 1, 1);\r\n\t\t\trightPatterns.splice(0, 1);\r\n\t\t\t\r\n\t\t\tcurrentPositionLeft = 0;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Sort result\r\n\t\tresult.sort((a, b) => (a.left - b.left));\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {Array.<ByteStream>} inputLeftPatterns Array of left patterns to search for\r\n\t * @param {Array.<ByteStream>} inputRightPatterns Array of right patterns to search for\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedArrays(inputLeftPatterns, inputRightPatterns, start = null, length = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet currentPositionLeft = 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all \"left patterns\" as sorted array\r\n\t\tconst leftPatterns = this.findAllIn(inputLeftPatterns, start, length);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(leftPatterns.length == 0)\r\n\t\t\treturn result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all \"right patterns\" as sorted array\r\n\t\tconst rightPatterns = this.findAllIn(inputRightPatterns, start, length);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(rightPatterns.length == 0)\r\n\t\t\treturn result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Combine patterns\r\n\t\twhile(currentPositionLeft < leftPatterns.length)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(rightPatterns.length == 0)\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(leftPatterns[0].position == rightPatterns[0].position)\r\n\t\t\t{\r\n\t\t\t\t// Possible situation when one pattern is a part of another\r\n\t\t\t\t// For example \"stream\" and \"endstream\"\r\n\t\t\t\t// In case when we have only \"endstream\" in fact \"stream\" will be also found at the same position\r\n\t\t\t\t// (position of the pattern is an index AFTER the pattern)\r\n\t\t\t\t\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tleft: leftPatterns[0],\r\n\t\t\t\t\tright: rightPatterns[0]\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tleftPatterns.splice(0, 1);\r\n\t\t\t\trightPatterns.splice(0, 1);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection ContinueStatementJS\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(leftPatterns[currentPositionLeft].position > rightPatterns[0].position)\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(leftPatterns[currentPositionLeft].position < rightPatterns[0].position)\r\n\t\t\t{\r\n\t\t\t\tcurrentPositionLeft++;\r\n\t\t\t\t\r\n\t\t\t\tif(currentPositionLeft >= leftPatterns.length)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult.push({\r\n\t\t\t\tleft: leftPatterns[currentPositionLeft - 1],\r\n\t\t\t\tright: rightPatterns[0]\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tleftPatterns.splice(currentPositionLeft - 1, 1);\r\n\t\t\trightPatterns.splice(0, 1);\r\n\t\t\t\r\n\t\t\tcurrentPositionLeft = 0;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Sort result\r\n\t\tresult.sort((a, b) => (a.left.position - b.left.position));\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, FunctionTooLongJS\r\n\t/**\r\n\t * Replace one patter with other\r\n\t * @param {ByteStream} searchPattern The pattern to search for\r\n\t * @param {ByteStream} replacePattern The pattern to replace initial pattern\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {Array|null} [findAllResult=null] Pre-calculated results of \"findAllIn\"\r\n\t * @returns {*}\r\n\t */\r\n\treplacePattern(searchPattern, replacePattern, start = null, length = null, findAllResult = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet result;\r\n\t\t\r\n\t\tlet i;\r\n\t\tconst output = {\r\n\t\t\tstatus: (-1),\r\n\t\t\tsearchPatternPositions: [],\r\n\t\t\treplacePatternPositions: []\r\n\t\t};\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn false;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find a pattern to search for\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(findAllResult == null)\r\n\t\t{\r\n\t\t\tresult = this.findAllIn([searchPattern], start, length);\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.length == 0)\r\n\t\t\t\treturn output;\r\n\t\t}\r\n\t\telse\r\n\t\t\tresult = findAllResult;\r\n\t\t\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\toutput.searchPatternPositions.push(...Array.from(result, element => element.position));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Variables for new buffer initialization\r\n\t\tconst patternDifference = searchPattern.buffer.byteLength - replacePattern.buffer.byteLength;\r\n\t\t\r\n\t\tconst changedBuffer = new ArrayBuffer(this.view.length - (result.length * patternDifference));\r\n\t\tconst changedView = new Uint8Array(changedBuffer);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Copy data from 0 to start\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tchangedView.set(new Uint8Array(this.buffer, 0, start));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Replace pattern\r\n\t\tfor(i = 0; i < result.length; i++)\r\n\t\t{\r\n\t\t\t//region Initial variables\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\t\tconst currentPosition = (i == 0) ? start : result[i - 1].position;\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Copy bytes other then search pattern\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tchangedView.set(new Uint8Array(this.buffer, currentPosition, result[i].position - searchPattern.buffer.byteLength - currentPosition), currentPosition - i * patternDifference);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Put replace pattern in a new buffer\r\n\t\t\tchangedView.set(replacePattern.view, result[i].position - searchPattern.buffer.byteLength - i * patternDifference);\r\n\t\t\t\r\n\t\t\toutput.replacePatternPositions.push(result[i].position - searchPattern.buffer.byteLength - i * patternDifference);\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Copy data from the end of old buffer\r\n\t\ti--;\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tchangedView.set(new Uint8Array(this.buffer, result[i].position, this.buffer.byteLength - result[i].position), result[i].position - searchPattern.buffer.byteLength + replacePattern.buffer.byteLength - i * patternDifference);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Re-initialize existing buffer\r\n\t\tthis.buffer = changedBuffer;\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t//endregion\r\n\t\t\r\n\t\toutput.status = 1;\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Skip any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {*}\r\n\t */\r\n\tskipPatterns(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet result = start;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for pattern\r\n\t\tfor(let k = 0; k < patterns.length; k++)\r\n\t\t{\r\n\t\t\tconst patternLength = patterns[k].buffer.byteLength;\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tconst equalStart = (backward) ? (result - patternLength) : (result);\r\n\t\t\tlet equal = true;\r\n\t\t\t\r\n\t\t\tfor(let j = 0; j < patternLength; j++)\r\n\t\t\t{\r\n\t\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\t\tif(this.view[j + equalStart] != patterns[k].view[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tequal = false;\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(equal)\r\n\t\t\t{\r\n\t\t\t\tk = (-1);\r\n\t\t\t\t\r\n\t\t\t\tif(backward)\r\n\t\t\t\t{\r\n\t\t\t\t\tresult -= patternLength;\r\n\t\t\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\t\t\t\tif(result <= 0)\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tresult += patternLength;\r\n\t\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\t\tif(result >= (start + length))\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Skip any pattern not from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should not be ommited\r\n\t * @param start\r\n\t * @param length\r\n\t * @param backward\r\n\t * @returns {number}\r\n\t */\r\n\tskipNotPatterns(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet result = (-1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for pattern\r\n\t\tfor(let i = 0; i < length; i++)\r\n\t\t{\r\n\t\t\tfor(let k = 0; k < patterns.length; k++)\r\n\t\t\t{\r\n\t\t\t\tconst patternLength = patterns[k].buffer.byteLength;\r\n\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\tconst equalStart = (backward) ? (start - i - patternLength) : (start + i);\r\n\t\t\t\tlet equal = true;\r\n\t\t\t\t\r\n\t\t\t\tfor(let j = 0; j < patternLength; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\t\t\tif(this.view[j + equalStart] != patterns[k].view[j])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tequal = false;\r\n\t\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(equal)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\t\tresult = (backward) ? (start - i) : (start + i); // Exact position of pattern found\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(result != (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class SeqStream \r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"SeqStream\" class\r\n\t * @param {{[stream]: ByteStream, [length]: number, [backward]: boolean, [start]: number, [appendBlock]: number}} parameters\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * Major stream\r\n\t\t * @type {ByteStream}\r\n\t\t */\r\n\t\tthis.stream = new ByteStream();\r\n\t\t/**\r\n\t\t * Length of the major stream\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis._length = 0;\r\n\t\t/**\r\n\t\t * Flag to search in backward direction\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.backward = false;\r\n\t\t/**\r\n\t\t * Start position to search\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis._start = 0;\r\n\t\t/**\r\n\t\t * Length of a block when append information to major stream\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.appendBlock = 0;\r\n\t\t\r\n\t\tthis.prevLength = 0;\r\n\t\tthis.prevStart = 0;\r\n\t\t\r\n\t\tfor(const key of Object.keys(parameters))\r\n\t\t{\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase \"stream\":\r\n\t\t\t\t\tthis.stream = parameters.stream;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"backward\":\r\n\t\t\t\t\tthis.backward = parameters.backward;\r\n\t\t\t\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\t\t\t\tthis._start = this.stream.buffer.byteLength;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"length\":\r\n\t\t\t\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\t\t\t\tthis._length = parameters.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\t\t\t\tthis._start = parameters.start;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"appendBlock\":\r\n\t\t\t\t\tthis.appendBlock = parameters.appendBlock;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"view\":\r\n\t\t\t\t\tthis.stream = new ByteStream({ view: parameters.view});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"buffer\":\r\n\t\t\t\t\tthis.stream = new ByteStream({ buffer: parameters.buffer});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tthis.stream = new ByteStream({ string: parameters.string});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hexstring\":\r\n\t\t\t\t\tthis.stream = new ByteStream({ hexstring: parameters.hexstring});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"stream\" property\r\n\t * @param {ByteStream} value\r\n\t */\r\n\tset stream(value)\r\n\t{\r\n\t\tthis._stream = value;\r\n\t\t\r\n\t\tthis.prevLength = this._length;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._length = value._buffer.byteLength;\r\n\t\t\r\n\t\tthis.prevStart = this._start;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._start = 0;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"stream\" property\r\n\t * @returns {ByteStream}\r\n\t */\r\n\tget stream()\r\n\t{\r\n\t\treturn this._stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"length\" property\r\n\t * @param {number} value\r\n\t */\r\n\tset length(value)\r\n\t{\r\n\t\tthis.prevLength = this._length;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._length = value;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Getter for \"length\" property\r\n\t * @returns {number}\r\n\t */\r\n\tget length()\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.appendBlock)\r\n\t\t\treturn this.start;\r\n\t\t\r\n\t\treturn this._length;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Setter for \"start\" property\r\n\t * @param {number} value\r\n\t */\r\n\tset start(value)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(value > this.stream.buffer.byteLength)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t//region Initialization of \"prev\" internal variables\r\n\t\tthis.prevStart = this._start;\r\n\t\tthis.prevLength = this._length;\r\n\t\t//endregion\r\n\t\t\r\n\t\t// noinspection JSUnusedGlobalSymbols, ConditionalExpressionJS\r\n\t\tthis._length -= ((this.backward) ? (this._start - value) : (value - this._start));\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._start = value;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"start\" property\r\n\t * @returns {number}\r\n\t */\r\n\tget start()\r\n\t{\r\n\t\treturn this._start;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return ArrayBuffer with having value of existing SeqStream length\r\n\t * @return {ArrayBuffer}\r\n\t */\r\n\tget buffer()\r\n\t{\r\n\t\treturn this._stream._buffer.slice(0, this._length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Reset current position of the \"SeqStream\"\r\n\t */\r\n\tresetPosition()\r\n\t{\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._start = this.prevStart;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._length = this.prevLength;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find any byte pattern in \"ByteStream\"\r\n\t * @param {ByteStream} pattern Stream having pattern value\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {number}\r\n\t */\r\n\tfindPattern(pattern, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this.length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this.length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find pattern\r\n\t\tconst result = this.stream.findPattern(pattern, this.start, this.length, this.backward);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(result == (-1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tif(result < (this.start - pattern.buffer.byteLength - gap))\r\n\t\t\t\treturn (-1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tif(result > (this.start + pattern.buffer.byteLength + gap))\r\n\t\t\t\treturn (-1);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find first position of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {{id: number, position: number}}\r\n\t */\r\n\tfindFirstIn(patterns, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this.length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this.length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for patterns\r\n\t\tconst result = this.stream.findFirstIn(patterns, this.start, this.length, this.backward);\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(result.id == (-1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\tif(result.position < (this.start - patterns[result.id].buffer.byteLength - gap))\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: (-1),\r\n\t\t\t\t\tposition: (this.backward) ? 0 : (this.start + this.length)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(result.position > (this.start + patterns[result.id].buffer.byteLength + gap))\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: (-1),\r\n\t\t\t\t\tposition: (this.backward) ? 0 : (this.start + this.length)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result.position;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllIn(patterns)\r\n\t{\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\treturn this.stream.findAllIn(patterns, start, this.length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS\r\n\t/**\r\n\t * Find first position of data, not included in patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} gap Maximum gap between start position and position of nearest object\r\n\t * @returns {*}\r\n\t */\r\n\tfindFirstNotIn(patterns, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this._length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this._length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for patterns\r\n\t\tconst result = this._stream.findFirstNotIn(patterns, this._start, this._length, this.backward);\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif((result.left.id == (-1)) && (result.right.id == (-1)))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.right.id != (-1))\r\n\t\t\t{\r\n\t\t\t\tif(result.right.position < (this._start - patterns[result.right.id]._buffer.byteLength - gap))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tleft: {\r\n\t\t\t\t\t\t\tid: (-1),\r\n\t\t\t\t\t\t\tposition: this._start\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tright: {\r\n\t\t\t\t\t\t\tid: (-1),\r\n\t\t\t\t\t\t\tposition: 0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tvalue: new ByteStream()\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.left.id != (-1))\r\n\t\t\t{\r\n\t\t\t\tif(result.left.position > (this._start + patterns[result.left.id]._buffer.byteLength + gap))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tleft: {\r\n\t\t\t\t\t\t\tid: (-1),\r\n\t\t\t\t\t\t\tposition: this._start\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tright: {\r\n\t\t\t\t\t\t\tid: (-1),\r\n\t\t\t\t\t\t\tposition: 0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tvalue: new ByteStream()\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.left.id == (-1))\r\n\t\t\t\tthis.start = 0;\r\n\t\t\telse\r\n\t\t\t\tthis.start = result.left.position;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.right.id == (-1))\r\n\t\t\t\tthis.start = (this._start + this._length);\r\n\t\t\telse\r\n\t\t\t\tthis.start = result.right.position;\r\n\t\t}\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of data, not included in patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllNotIn(patterns)\r\n\t{\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this._start - this._length) : this._start;\r\n\t\t\r\n\t\treturn this._stream.findAllNotIn(patterns, start, this._length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [length] Length to search sequence for\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {*}\r\n\t */\r\n\tfindFirstSequence(patterns, length = null, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((length == null) || (length > this._length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this._length;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for sequence\r\n\t\tconst result = this._stream.findFirstSequence(patterns, this._start, length, this.backward);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(result.value.buffer.byteLength == 0)\r\n\t\t\treturn result;\r\n\t\t\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\tif(result.position < (this._start - result.value._buffer.byteLength - gap))\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tposition: (-1),\r\n\t\t\t\t\tvalue: new ByteStream()\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(result.position > (this._start + result.value._buffer.byteLength + gap))\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tposition: (-1),\r\n\t\t\t\t\tvalue: new ByteStream()\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result.position;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllSequences(patterns)\r\n\t{\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\treturn this.stream.findAllSequences(patterns, start, this.length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {ByteStream} leftPattern Left pattern to search for\r\n\t * @param {ByteStream} rightPattern Right pattern to search for\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedPatterns(leftPattern, rightPattern, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this.length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this.length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\t//region Search for patterns\r\n\t\tconst result = this.stream.findPairedPatterns(leftPattern, rightPattern, start, this.length);\r\n\t\tif(result.length)\r\n\t\t{\r\n\t\t\tif(this.backward)\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(result[0].right < (this.start - rightPattern.buffer.byteLength - gap))\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(result[0].left > (this.start + leftPattern.buffer.byteLength + gap))\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {Array.<ByteStream>} leftPatterns Array of left patterns to search for\r\n\t * @param {Array.<ByteStream>} rightPatterns Array of right patterns to search for\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedArrays(leftPatterns, rightPatterns, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this.length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this.length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\t//region Search for patterns\r\n\t\tconst result = this.stream.findPairedArrays(leftPatterns, rightPatterns, start, this.length);\r\n\t\tif(result.length)\r\n\t\t{\r\n\t\t\tif(this.backward)\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(result[0].right.position < (this.start - rightPatterns[result[0].right.id].buffer.byteLength - gap))\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(result[0].left.position > (this.start + leftPatterns[result[0].left.id].buffer.byteLength + gap))\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Replace one patter with other\r\n\t * @param {ByteStream} searchPattern The pattern to search for\r\n\t * @param {ByteStream} replacePattern The pattern to replace initial pattern\r\n\t * @returns {*}\r\n\t */\r\n\treplacePattern(searchPattern, replacePattern)\r\n\t{\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\treturn this.stream.replacePattern(searchPattern, replacePattern, start, this.length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Skip of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @returns {*}\r\n\t */\r\n\tskipPatterns(patterns)\r\n\t{\r\n\t\tconst result = this.stream.skipPatterns(patterns, this.start, this.length, this.backward);\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Skip of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @returns {number}\r\n\t */\r\n\tskipNotPatterns(patterns)\r\n\t{\r\n\t\tconst result = this.stream.skipNotPatterns(patterns, this.start, this.length, this.backward);\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(result == (-1))\r\n\t\t\treturn (-1);\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a new \"Stream\" content to the current \"Stream\"\r\n\t * @param {ByteStream} stream A new \"stream\" to append to current \"stream\"\r\n\t */\r\n\tappend(stream)\r\n\t{\r\n\t\tif((this._start + stream._buffer.byteLength) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\tif(stream._buffer.byteLength > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = (stream._buffer.byteLength + 1000);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tthis._stream._view.set(stream._view, this._start);\r\n\t\t\r\n\t\tthis._length += (stream._buffer.byteLength * 2);\r\n\t\tthis.start = (this._start + stream._buffer.byteLength);\r\n\t\tthis.prevLength -= (stream._buffer.byteLength * 2);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a \"view\" content to the current \"Stream\"\r\n\t * @param {Uint8Array} view A new \"view\" to append to current \"stream\"\r\n\t */\r\n\tappendView(view)\r\n\t{\r\n\t\tif((this._start + view.length) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\tif(view.length > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = (view.length + 1000);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tthis._stream._view.set(view, this._start);\r\n\t\t\r\n\t\tthis._length += (view.length * 2);\r\n\t\tthis.start = (this._start + view.length);\r\n\t\tthis.prevLength -= (view.length * 2);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a new char to the current \"Stream\"\r\n\t * @param {number} char A new char to append to current \"stream\"\r\n\t */\r\n\tappendChar(char)\r\n\t{\r\n\t\tif((this._start + 1) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnLefSideOfComparisonJS\r\n\t\t\tif(1 > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = 1000;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tthis._stream._view[this._start] = char;\r\n\t\t\r\n\t\tthis._length += 2;\r\n\t\tthis.start = (this._start + 1);\r\n\t\tthis.prevLength -= 2;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Append a new number to the current \"Stream\"\r\n\t * @param {number} number A new unsigned 16-bit integer to append to current \"stream\"\r\n\t */\r\n\tappendUint16(number)\r\n\t{\r\n\t\tif((this._start + 2) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnLefSideOfComparisonJS\r\n\t\t\tif(2 > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = 1000;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tconst value = new Uint16Array([number]);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tthis._stream._view[this._start] = view[1];\r\n\t\tthis._stream._view[this._start + 1] = view[0];\r\n\t\t\r\n\t\tthis._length += 4;\r\n\t\tthis.start = (this._start + 2);\r\n\t\tthis.prevLength -= 4;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Append a new number to the current \"Stream\"\r\n\t * @param {number} number A new unsigned 24-bit integer to append to current \"stream\"\r\n\t */\r\n\tappendUint24(number)\r\n\t{\r\n\t\tif((this._start + 3) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnLefSideOfComparisonJS\r\n\t\t\tif(3 > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = 1000;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tconst value = new Uint32Array([number]);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tthis._stream._view[this._start] = view[2];\r\n\t\tthis._stream._view[this._start + 1] = view[1];\r\n\t\tthis._stream._view[this._start + 2] = view[0];\r\n\t\t\r\n\t\tthis._length += 6;\r\n\t\tthis.start = (this._start + 3);\r\n\t\tthis.prevLength -= 6;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Append a new number to the current \"Stream\"\r\n\t * @param {number} number A new unsigned 32-bit integer to append to current \"stream\"\r\n\t */\r\n\tappendUint32(number)\r\n\t{\r\n\t\tif((this._start + 4) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnLefSideOfComparisonJS\r\n\t\t\tif(4 > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = 1000;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tconst value = new Uint32Array([number]);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tthis._stream._view[this._start] = view[3];\r\n\t\tthis._stream._view[this._start + 1] = view[2];\r\n\t\tthis._stream._view[this._start + 2] = view[1];\r\n\t\tthis._stream._view[this._start + 3] = view[0];\r\n\t\t\r\n\t\tthis._length += 8;\r\n\t\tthis.start = (this._start + 4);\r\n\t\tthis.prevLength -= 8;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Get a block of data\r\n\t * @param {number} size Size of the data block to get\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {Array}\r\n\t */\r\n\tgetBlock(size, changeLength = true)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(this._length <= 0)\r\n\t\t\treturn [];\r\n\t\t\r\n\t\tif(this._length < size)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tsize = this._length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Getting result depends on \"backward\" flag\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\tconst buffer = this._stream._buffer.slice(this._length - size, this._length);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\tresult = new Array(size);\r\n\t\t\t\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tfor(let i = 0; i < size; i++)\r\n\t\t\t\tresult[size - 1 - i] = view[i];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst buffer = this._stream._buffer.slice(this._start, this._start + size);\r\n\t\t\t\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tresult = Array.from(new Uint8Array(buffer));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"length\" value if needed\r\n\t\tif(changeLength)\r\n\t\t{\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tthis.start += ((this.backward) ? ((-1) * size) : size);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, FunctionNamingConventionJS\r\n\t/**\r\n\t * Get 2-byte unsigned integer value\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {number}\r\n\t */\r\n\tgetUint16(changeLength = true)\r\n\t{\r\n\t\tconst block = this.getBlock(2, changeLength);\r\n\t\t\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(block.length < 2)\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert byte array to \"Uint16Array\" value\r\n\t\tconst value = new Uint16Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tview[0] = block[1];\r\n\t\tview[1] = block[0];\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, FunctionNamingConventionJS\r\n\t/**\r\n\t * Get 2-byte signed integer value\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {number}\r\n\t */\r\n\tgetInt16(changeLength = true)\r\n\t{\r\n\t\tconst block = this.getBlock(2, changeLength);\r\n\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(block.length < 2)\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\r\n\t\t//region Convert byte array to \"Int16Array\" value\r\n\t\tconst value = new Int16Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\r\n\t\tview[0] = block[1];\r\n\t\tview[1] = block[0];\r\n\t\t//endregion\r\n\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, FunctionNamingConventionJS\r\n\t/**\r\n\t * Get 3-byte unsigned integer value\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {number}\r\n\t */\r\n\tgetUint24(changeLength = true)\r\n\t{\r\n\t\tconst block = this.getBlock(3, changeLength);\r\n\t\t\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(block.length < 3)\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value\r\n\t\tconst value = new Uint32Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tfor(let i = 3; i >= 1; i--)\r\n\t\t\tview[3 - i] = block[i - 1];\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, FunctionNamingConventionJS\r\n\t/**\r\n\t * Get 4-byte unsigned integer value\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {number}\r\n\t */\r\n\tgetUint32(changeLength = true)\r\n\t{\r\n\t\tconst block = this.getBlock(4, changeLength);\r\n\t\t\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(block.length < 4)\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value\r\n\t\tconst value = new Uint32Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tfor(let i = 3; i >= 0; i--)\r\n\t\t\tview[3 - i] = block[i];\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Get 4-byte signed integer value\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {number}\r\n\t */\r\n\tgetInt32(changeLength = true)\r\n\t{\r\n\t\tconst block = this.getBlock(4, changeLength);\r\n\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(block.length < 4)\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\r\n\t\t//region Convert byte array to \"Int32Array\" value\r\n\t\tconst value = new Int32Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tfor(let i = 3; i >= 0; i--)\r\n\t\t\tview[3 - i] = block[i];\r\n\t\t//endregion\r\n\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n/**\r\n * Get parsed values from \"byte map\"\r\n * @param {ByteStream} stream Stream to parse data from\r\n * @param {Object} map Object with information how to parse \"byte map\"\r\n * @param {number} elements Number of elements in parsing byte map\r\n * @param {?number} [start=null] Start position to parse from\r\n * @param {?number} [length=null] Length of byte block to parse from\r\n * @returns {*}\r\n */\r\nexport function parseByteMap(stream, map, elements, start = null, length = null)\r\n{\r\n\t/*\r\n\t Map example:\r\n\t \r\n\t let map = [\r\n\t {\r\n\t type: \"string\",\r\n\t name: \"type\",\r\n\t minlength: 1,\r\n\t maxlength: 1,\r\n\t func: function(array)\r\n\t {\r\n\t let result = {\r\n\t status: (-1),\r\n\t length: 1\r\n\t };\r\n\t \r\n\t switch(array[0])\r\n\t {\r\n\t case 0x6E: // \"n\"\r\n\t result.value = \"n\";\r\n\t break;\r\n\t case 0x66: // \"f\"\r\n\t result.value = \"f\";\r\n\t break;\r\n\t default:\r\n\t return result;\r\n\t }\r\n\t \r\n\t result.status = 1;\r\n\t \r\n\t return result;\r\n\t }\r\n\t },\r\n\t {\r\n\t type: \"check\",\r\n\t minlength: 1,\r\n\t maxlength: 2,\r\n\t func: function(array)\r\n\t {\r\n\t let position = (-1);\r\n\t \r\n\t if(array[0] == 0x0A)\r\n\t position = 1;\r\n\t if(array[1] == 0x0A)\r\n\t position = 2;\r\n\t \r\n\t return {\r\n\t status: (position > 0) ? 1 : (-1),\r\n\t length: position\r\n\t };\r\n\t }\r\n\t }\r\n\t ];\r\n\t */\r\n\t\r\n\t//region Initial variables\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\tif(start === null)\r\n\t{\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tstart = 0;\r\n\t}\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(start > (stream.buffer.byteLength - 1))\r\n\t\treturn false;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\tif(length === null)\r\n\t{\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tlength = stream.buffer.byteLength - start;\r\n\t}\r\n\t\r\n\tif(length > (stream.buffer.byteLength - start))\r\n\t{\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tlength = stream.buffer.byteLength - start;\r\n\t}\r\n\t\r\n\tlet dataView;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\tif((start == 0) && (length == stream.buffer.byteLength))\r\n\t\tdataView = stream.view;\r\n\telse\r\n\t\tdataView = new Uint8Array(stream.buffer, start, length);\r\n\t\r\n\tconst resultArray = new Array(elements);\r\n\tlet elementsCount = 0;\r\n\t\r\n\tlet count = 0;\r\n\tconst mapLength = map.length;\r\n\t//endregion\r\n\t\r\n\t//region Parse all byte, structure by structure\r\n\twhile(count < length)\r\n\t{\r\n\t\tlet structureLength = 0;\r\n\t\t\r\n\t\tresultArray[elementsCount] = {};\r\n\t\t\r\n\t\tfor(let i = 0; i < mapLength; i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, JSUnresolvedVariable, EqualityComparisonWithCoercionJS\r\n\t\t\tif(map[i].maxlength == 0)\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(\"defaultValue\" in map[i])\r\n\t\t\t\t\t(resultArray[elementsCount])[map[i].name] = map[i].defaultValue;\r\n\t\t\t\t\r\n\t\t\t\t// noinspection ContinueStatementJS\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tconst array = new Array(map[i].maxlength);\r\n\t\t\t\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tfor(let j = 0; j < map[i].maxlength; j++)\r\n\t\t\t{\r\n\t\t\t\t// noinspection IncrementDecrementResultUsedJS\r\n\t\t\t\tarray[j] = dataView[count++];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tconst result = (map[i].func)(array);\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(result.status == (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\t\tif(resultArray.length == 1)\r\n\t\t\t\t\treturn [];\r\n\r\n\t\t\t\treturn resultArray.slice(0, resultArray.length - 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(map[i].type != \"check\")\r\n\t\t\t\t(resultArray[elementsCount])[map[i].name] = result.value;\r\n\t\t\t\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tcount -= (map[i].maxlength - result.length);\r\n\t\t\tstructureLength += result.length;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection IncrementDecrementResultUsedJS\r\n\t\t(resultArray[elementsCount++]).structureLength = structureLength;\r\n\t}\r\n\t//endregion\r\n\t\r\n\treturn resultArray;\r\n}\r\n//**************************************************************************************\r\n//region \"Bits-to-string\" array\r\nconst bitsToStringArray = [\r\n\t\"00000000\", \"00000001\", \"00000010\",\r\n\t\"00000011\", \"00000100\", \"00000101\",\r\n\t\"00000110\", \"00000111\", \"00001000\",\r\n\t\"00001001\", \"00001010\", \"00001011\",\r\n\t\"00001100\", \"00001101\", \"00001110\",\r\n\t\"00001111\", \"00010000\", \"00010001\",\r\n\t\"00010010\", \"00010011\", \"00010100\",\r\n\t\"00010101\", \"00010110\", \"00010111\",\r\n\t\"00011000\", \"00011001\", \"00011010\",\r\n\t\"00011011\", \"00011100\", \"00011101\",\r\n\t\"00011110\", \"00011111\", \"00100000\",\r\n\t\"00100001\", \"00100010\", \"00100011\",\r\n\t\"00100100\", \"00100101\", \"00100110\",\r\n\t\"00100111\", \"00101000\", \"00101001\",\r\n\t\"00101010\", \"00101011\", \"00101100\",\r\n\t\"00101101\", \"00101110\", \"00101111\",\r\n\t\"00110000\", \"00110001\", \"00110010\",\r\n\t\"00110011\", \"00110100\", \"00110101\",\r\n\t\"00110110\", \"00110111\", \"00111000\",\r\n\t\"00111001\", \"00111010\", \"00111011\",\r\n\t\"00111100\", \"00111101\", \"00111110\",\r\n\t\"00111111\", \"01000000\", \"01000001\",\r\n\t\"01000010\", \"01000011\", \"01000100\",\r\n\t\"01000101\", \"01000110\", \"01000111\",\r\n\t\"01001000\", \"01001001\", \"01001010\",\r\n\t\"01001011\", \"01001100\", \"01001101\",\r\n\t\"01001110\", \"01001111\", \"01010000\",\r\n\t\"01010001\", \"01010010\", \"01010011\",\r\n\t\"01010100\", \"01010101\", \"01010110\",\r\n\t\"01010111\", \"01011000\", \"01011001\",\r\n\t\"01011010\", \"01011011\", \"01011100\",\r\n\t\"01011101\", \"01011110\", \"01011111\",\r\n\t\"01100000\", \"01100001\", \"01100010\",\r\n\t\"01100011\", \"01100100\", \"01100101\",\r\n\t\"01100110\", \"01100111\", \"01101000\",\r\n\t\"01101001\", \"01101010\", \"01101011\",\r\n\t\"01101100\", \"01101101\", \"01101110\",\r\n\t\"01101111\", \"01110000\", \"01110001\",\r\n\t\"01110010\", \"01110011\", \"01110100\",\r\n\t\"01110101\", \"01110110\", \"01110111\",\r\n\t\"01111000\", \"01111001\", \"01111010\",\r\n\t\"01111011\", \"01111100\", \"01111101\",\r\n\t\"01111110\", \"01111111\", \"10000000\",\r\n\t\"10000001\", \"10000010\", \"10000011\",\r\n\t\"10000100\", \"10000101\", \"10000110\",\r\n\t\"10000111\", \"10001000\", \"10001001\",\r\n\t\"10001010\", \"10001011\", \"10001100\",\r\n\t\"10001101\", \"10001110\", \"10001111\",\r\n\t\"10010000\", \"10010001\", \"10010010\",\r\n\t\"10010011\", \"10010100\", \"10010101\",\r\n\t\"10010110\", \"10010111\", \"10011000\",\r\n\t\"10011001\", \"10011010\", \"10011011\",\r\n\t\"10011100\", \"10011101\", \"10011110\",\r\n\t\"10011111\", \"10100000\", \"10100001\",\r\n\t\"10100010\", \"10100011\", \"10100100\",\r\n\t\"10100101\", \"10100110\", \"10100111\",\r\n\t\"10101000\", \"10101001\", \"10101010\",\r\n\t\"10101011\", \"10101100\", \"10101101\",\r\n\t\"10101110\", \"10101111\", \"10110000\",\r\n\t\"10110001\", \"10110010\", \"10110011\",\r\n\t\"10110100\", \"10110101\", \"10110110\",\r\n\t\"10110111\", \"10111000\", \"10111001\",\r\n\t\"10111010\", \"10111011\", \"10111100\",\r\n\t\"10111101\", \"10111110\", \"10111111\",\r\n\t\"11000000\", \"11000001\", \"11000010\",\r\n\t\"11000011\", \"11000100\", \"11000101\",\r\n\t\"11000110\", \"11000111\", \"11001000\",\r\n\t\"11001001\", \"11001010\", \"11001011\",\r\n\t\"11001100\", \"11001101\", \"11001110\",\r\n\t\"11001111\", \"11010000\", \"11010001\",\r\n\t\"11010010\", \"11010011\", \"11010100\",\r\n\t\"11010101\", \"11010110\", \"11010111\",\r\n\t\"11011000\", \"11011001\", \"11011010\",\r\n\t\"11011011\", \"11011100\", \"11011101\",\r\n\t\"11011110\", \"11011111\", \"11100000\",\r\n\t\"11100001\", \"11100010\", \"11100011\",\r\n\t\"11100100\", \"11100101\", \"11100110\",\r\n\t\"11100111\", \"11101000\", \"11101001\",\r\n\t\"11101010\", \"11101011\", \"11101100\",\r\n\t\"11101101\", \"11101110\", \"11101111\",\r\n\t\"11110000\", \"11110001\", \"11110010\",\r\n\t\"11110011\", \"11110100\", \"11110101\",\r\n\t\"11110110\", \"11110111\", \"11111000\",\r\n\t\"11111001\", \"11111010\", \"11111011\",\r\n\t\"11111100\", \"11111101\", \"11111110\",\r\n\t\"11111111\"\r\n];\r\n//endregion\r\n//**************************************************************************************\r\nexport class BitStream\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"BitStream\" class\r\n\t * @param {{[byteStream]: ByteStream, [view]: Uint8Array, [buffer]: ArrayBuffer, [string]: string, [bitsCount]: number}} parameters\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tthis.buffer = new ArrayBuffer(0);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = 0; // Number of bits stored in current \"BitStream\"\r\n\t\t\r\n\t\tfor(const key of Object.keys(parameters))\r\n\t\t{\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase \"byteStream\":\r\n\t\t\t\t\tthis.fromByteStream(parameters.byteStream);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"view\":\r\n\t\t\t\t\tthis.fromUint8Array(parameters.view);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"buffer\":\r\n\t\t\t\t\tthis.fromArrayBuffer(parameters.buffer);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tthis.fromString(parameters.string);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"uint32\":\r\n\t\t\t\t\tthis.fromUint32(parameters.uint32);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bitsCount\":\r\n\t\t\t\t\tthis.bitsCount = parameters.bitsCount;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Clear existing stream\r\n\t */\r\n\tclear()\r\n\t{\r\n\t\tthis.buffer = new ArrayBuffer(0);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = 0;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"BitStream\" by data from existing \"ByteStream\"\r\n\t * @param {ByteStream} stream\r\n\t */\r\n\tfromByteStream(stream)\r\n\t{\r\n\t\tthis.buffer = stream.buffer.slice(0);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = this.view.length << 3;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"BitStream\" object from existing \"ArrayBuffer\"\r\n\t * @param {ArrayBuffer} array The ArrayBuffer to copy from\r\n\t */\r\n\tfromArrayBuffer(array)\r\n\t{\r\n\t\tthis.buffer = array.slice(0);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = this.view.length << 3;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Initialize \"BitStream\" object from existing \"Uint8Array\"\r\n\t * @param {Uint8Array} array The Uint8Array to copy from\r\n\t */\r\n\tfromUint8Array(array)\r\n\t{\r\n\t\tthis.buffer = new ArrayBuffer(array.length);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.view.set(array);\r\n\t\t\r\n\t\tthis.bitsCount = this.view.length << 3;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"BitStream\" object from existing bit string\r\n\t * @param {string} string The string to initialize from\r\n\t */\r\n\tfromString(string)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst stringLength = string.length;\r\n\t\t\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tthis.buffer = new ArrayBuffer((stringLength >> 3) + ((stringLength % 8) ? 1 : 0));\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = ((stringLength >> 3) + 1) << 3; // In order to handle correct shifting\r\n\t\t\r\n\t\tlet byteIndex = 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert from \"bit string\" to bytes\r\n\t\tfor(let i = 0; i < stringLength; i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(string[i] == \"1\")\r\n\t\t\t\tthis.view[byteIndex] |= 1 << (7 - (i % 8));\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(i && (((i + 1) % 8) == 0))\r\n\t\t\t\tbyteIndex++;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Shift \"BitStream\" into correct position\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(stringLength % 8)\r\n\t\t\tthis.shiftRight(8 - (stringLength % 8));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"bitsCount\"\r\n\t\tthis.bitsCount = stringLength;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"BitStream\" object from existing uint32 number\r\n\t * @param {Number} number The string to initialize from\r\n\t */\r\n\tfromUint32(uint32)\r\n\t{\r\n\t\tthis.buffer = new ArrayBuffer(4);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\r\n\t\tconst value = new Uint32Array([uint32]);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tfor(let i = 3; i >= 0; i--)\r\n\t\t\tthis.view[i] = view[3 - i];\r\n\r\n\t\tthis.bitsCount = 32;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Represent \"BitStream\" object content as a string\r\n\t * @param {?number} [start=null] Start number to convert to string from\r\n\t * @param {?number} [length=null] Length of BitStream to convert to string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(start = null, length = null)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((start >= this.view.length) || (start < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.view.length - start;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((length >= this.view.length) || (length < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.view.length - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert from bytes to \"bit string\"\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = start; i < (start + length); i++)\r\n\t\t\tresult.push(bitsToStringArray[this.view[i]]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t// noinspection ChainedFunctionCallJS\r\n\t\treturn result.join(\"\").slice((this.view.length << 3) - this.bitsCount);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Shift entire \"BitStream\" value right to number of bits\r\n\t * @param {number} shift Number of bits to shift value\r\n\t * @param {boolean} [needShrink=true] Need to shrink result or not\r\n\t */\r\n\tshiftRight(shift, needShrink = true)\r\n\t{\r\n\t\t//region Check parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(this.view.length == 0)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((shift < 0) || (shift > 8))\r\n\t\t\tthrow new Error(\"The \\\"shift\\\" parameter must be in range 0-8\");\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(shift > this.bitsCount)\r\n\t\t\tthrow new Error(\"The \\\"shift\\\" parameter can not be bigger than \\\"this.bitsCount\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\t// noinspection MagicNumberJS\r\n\t\tconst shiftMask = 0xFF >> (8 - shift);\r\n\t\tthis.view[this.view.length - 1] >>= shift;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Shift value\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tfor(let i = (this.view.length - 2); i >= 0; i--)\r\n\t\t{\r\n\t\t\t// noinspection NonShortCircuitBooleanExpressionJS\r\n\t\t\tthis.view[i + 1] |= (this.view[i] & shiftMask) << (8 - shift);\r\n\t\t\tthis.view[i] >>= shift;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Decrease number of bits stored into value\r\n\t\tthis.bitsCount -= shift;\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(this.bitsCount == 0)\r\n\t\t\tthis.clear();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change stream size if needed\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(needShrink)\r\n\t\t\tthis.shrink();\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Shift entire \"BitStream\" value left to number of bits\r\n\t * @param {number} shift Number of bits to shift value\r\n\t */\r\n\tshiftLeft(shift)\r\n\t{\r\n\t\t/*\r\n\t\t NOTE: We do not really shift value because of internal structure of \"BitStream\":\r\n\t\t all bytes inside \"BitStream\" are aligned to right position. So, even if we will\r\n\t\t really shift value to left after that we will need again shift it right to the\r\n\t\t same number of bits. Thus all that we do here is hiding of left bits and descresing\r\n\t\t the \"bitsCount\" number.\r\n\t\t */\r\n\t\t\r\n\t\t//region Check parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(this.view.length == 0)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((shift < 0) || (shift > 8))\r\n\t\t\tthrow new Error(\"The \\\"shift\\\" parameter must be in range 0-8\");\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(shift > this.bitsCount)\r\n\t\t\tthrow new Error(\"The \\\"shift\\\" parameter can not be bigger than \\\"this.bitsCount\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Remove shifted bits\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst bitsOffset = this.bitsCount & 0x07;\r\n\t\tif(bitsOffset > shift)\r\n\t\t{\r\n\t\t\t// noinspection MagicNumberJS\r\n\t\t\tthis.view[0] &= 0xFF >> (bitsOffset + shift);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//region Change size of buffer\r\n\t\t\tconst buffer = new ArrayBuffer(this.buffer.byteLength - 1);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tview.set(new Uint8Array(this.buffer, 1, this.buffer.byteLength - 1));\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Mask item with index 0\r\n\t\t\t// noinspection MagicNumberJS\r\n\t\t\tview[0] &= 0xFF >> (shift - bitsOffset);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Store final array into current stream\r\n\t\t\tthis.buffer = buffer.slice(0);\r\n\t\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Decrease number of bits stored into value\r\n\t\tthis.bitsCount -= shift;\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(this.bitsCount == 0)\r\n\t\t\tthis.clear();\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, FunctionTooLongJS\r\n\t/**\r\n\t * Return slice of existing \"BitStream\"\r\n\t * @param {?number} [start=null] Start position of the slice (in bits)\r\n\t * @param {?number} [end=null] End position of the slice (in bits)\r\n\t * @returns {BitStream}\r\n\t */\r\n\tslice(start = null, end = null)\r\n\t{\r\n\t\t//region Make ability to pass non-value bits\r\n\t\tlet valueShift = 0;\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.bitsCount % 8)\r\n\t\t\tvalueShift = (8 - (this.bitsCount % 8));\r\n\t\t\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tstart += valueShift;\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tend += valueShift;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start < 0) || (start > ((this.view.length << 3) - 1)))\r\n\t\t\treturn new BitStream(); //(\"Wrong start position: \" + start);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(end == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tend = (this.view.length << 3) - 1;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((end < 0) || (end > ((this.view.length << 3) - 1)))\r\n\t\t\treturn new BitStream(); //(\"Wrong end position: \" + end);\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif((end - start + 1) > this.bitsCount)\r\n\t\t\treturn new BitStream(); //(\"Maximum length is \" + this.bitsCount);\r\n\t\t\r\n\t\tconst startIndex = start >> 3;\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst startOffset = start & 0x07;\r\n\t\t\r\n\t\tconst endIndex = end >> 3;\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst endOffset = end & 0x07;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\tconst bitsLength = ((endIndex - startIndex) == 0) ? 1 : (endIndex - startIndex + 1);\r\n\t\t\r\n\t\tconst result = new BitStream();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Store \"primary bytes\"\r\n\t\tresult.buffer = new ArrayBuffer(bitsLength);\r\n\t\tresult.view = new Uint8Array(result.buffer);\r\n\t\tresult.bitsCount = bitsLength << 3;\r\n\t\t\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tresult.view.set(new Uint8Array(this.buffer, startIndex, bitsLength));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"start byte\"\r\n\t\t// noinspection MagicNumberJS\r\n\t\tresult.view[0] &= (0xFF >> startOffset);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"end byte\"\r\n\t\t// noinspection MagicNumberJS\r\n\t\tresult.view[bitsLength] &= (0xFF << (7 - endOffset));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Shift result array to right\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(7 - endOffset)\r\n\t\t\tresult.shiftRight(7 - endOffset, false);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Set final number of bits\r\n\t\tresult.bitsCount = (end - start + 1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Cut unnecessary bytes from result\r\n\t\tresult.shrink();\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Return copy of existing \"BitStream\"\r\n\t * @param {?number} [start=null] Start position of the copy (in bits)\r\n\t * @param {?number} [length=null] Length of the copy (in bits)\r\n\t * @returns {BitStream}\r\n\t */\r\n\tcopy(start = null, length = null)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start < 0) || (start > ((this.view.length << 3) - 1)))\r\n\t\t\treturn new BitStream(); //(\"Wrong start position: \" + start);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length === null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (this.view.length << 3) - start - 1;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(length > this.bitsCount)\r\n\t\t\treturn new BitStream(); //(\"Maximum length is \" + this.bitsCount);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn this.slice(start, start + length - 1);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Shrink unnecessary bytes in current stream accordingly to \"bitsCount\" value\r\n\t */\r\n\tshrink()\r\n\t{\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst currentLength = (this.bitsCount >> 3) + ((this.bitsCount % 8) ? 1 : 0);\r\n\t\tif(currentLength < this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t//region Change size of buffer\r\n\t\t\tconst buffer = new ArrayBuffer(currentLength);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tview.set(new Uint8Array(this.buffer, this.buffer.byteLength - currentLength, currentLength));\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Store final array into current stream\r\n\t\t\tthis.buffer = buffer.slice(0);\r\n\t\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\t//endregion\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Reverse bits order in each byte in the stream\r\n\t * Got it from here: http://graphics.stanford.edu/~seander/bithacks.html#ReverseByteWith32Bits\r\n\t */\r\n\treverseBytes()\r\n\t{\r\n\t\t//region Reverse bits order in each byte in the stream\r\n\t\tfor(let i = 0; i < this.view.length; i++)\r\n\t\t{\r\n\t\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\t\tthis.view[i] = ((this.view[i] * 0x0802 & 0x22110) | (this.view[i] * 0x8020 & 0x88440)) * 0x10101 >> 16;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Shift \"most significant\" byte\r\n\t\tif(this.bitsCount % 8)\r\n\t\t{\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tconst currentLength = (this.bitsCount >> 3) + ((this.bitsCount % 8) ? 1 : 0);\r\n\t\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\t\tthis.view[this.view.length - currentLength] >>= (8 - (this.bitsCount & 0x07));\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Reverse all bits in entire \"BitStream\"\r\n\t */\r\n\treverseValue()\r\n\t{\r\n\t\tconst initialValue = this.toString();\r\n\t\tconst initialValueLength = initialValue.length;\r\n\t\t\r\n\t\tconst reversedValue = new Array(initialValueLength);\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = 0; i < initialValueLength; i++)\r\n\t\t\treversedValue[initialValueLength - 1 - i] = initialValue[i];\r\n\t\t\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tthis.fromString(reversedValue.join(\"\"));\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Trying to represent entire \"BitStream\" as an unsigned integer.\r\n\t * @return {number}\r\n\t */\r\n\tgetNumberValue()\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst byteLength = (this.buffer.byteLength - 1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(byteLength > 3)\r\n\t\t\treturn (-1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(byteLength == (-1))\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value\r\n\t\tconst value = new Uint32Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tfor(let i = byteLength; i >= 0; i--)\r\n\t\t\tview[byteLength - i] = this.view[i];\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find any bit pattern in \"BitStream\"\r\n\t * @param {BitStream} pattern Stream having pattern value\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {number}\r\n\t */\r\n\tfindPattern(pattern, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\tconst stringPattern = new ByteStream({\r\n\t\t\tstring: pattern.toString()\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findPattern(stringPattern, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find first position of any pattern from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{id: number, position: number}}\r\n\t */\r\n\tfindFirstIn(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findFirstIn(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of any pattern from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllIn(patterns, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findAllIn(stringPatterns, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of a pattern\r\n\t * @param {BitStream} pattern Stream having pattern value\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array|number}\r\n\t */\r\n\tfindAllPatternIn(pattern, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\" \r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\tconst stringPattern = new ByteStream({\r\n\t\t\tstring: pattern.toString()\r\n\t\t});\r\n\t\t//endregion \r\n\t\t\r\n\t\treturn stringStream.findAllPatternIn(stringPattern, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find first position of data, not included in patterns from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{left: {id: number, position: *}, right: {id: number, position: number}, value: ByteStream}}\r\n\t */\r\n\tfindFirstNotIn(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findFirstNotIn(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of data, not included in patterns from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllNotIn(patterns, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findAllNotIn(stringPatterns, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{position, value}|*}\r\n\t */\r\n\tfindFirstSequence(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findFirstSequence(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllSequences(patterns, start, length)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findAllSequences(stringPatterns, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {BitStream} leftPattern Left pattern to search for\r\n\t * @param {BitStream} rightPattern Right pattern to search for\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedPatterns(leftPattern, rightPattern, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\tconst stringLeftPattern = new ByteStream({\r\n\t\t\tstring: leftPattern.toString()\r\n\t\t});\r\n\t\tconst stringRightPattern = new ByteStream({\r\n\t\t\tstring: rightPattern.toString()\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findPairedPatterns(stringLeftPattern, stringRightPattern, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleLoopsJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {Array.<BitStream>} inputLeftPatterns Array of left patterns to search for\r\n\t * @param {Array.<BitStream>} inputRightPatterns Array of right patterns to search for\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedArrays(inputLeftPatterns, inputRightPatterns, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringLeftPatterns = new Array(inputLeftPatterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < inputLeftPatterns.length; i++)\r\n\t\t{\r\n\t\t\tstringLeftPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: inputLeftPatterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tconst stringRightPatterns = new Array(inputRightPatterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < inputRightPatterns.length; i++)\r\n\t\t{\r\n\t\t\tstringRightPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: inputRightPatterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findPairedArrays(stringLeftPatterns, stringRightPatterns, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Replace one pattern with other\r\n\t * @param {BitStream} searchPattern The pattern to search for\r\n\t * @param {BitStream} replacePattern The pattern to replace initial pattern\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {boolean}\r\n\t */\r\n\treplacePattern(searchPattern, replacePattern, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\tconst stringSearchPattern = new ByteStream({\r\n\t\t\tstring: searchPattern.toString()\r\n\t\t});\r\n\t\tconst stringReplacePattern = new ByteStream({\r\n\t\t\tstring: replacePattern.toString()\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Re-initialize existing data\r\n\t\tif(stringStream.findPairedPatterns(stringSearchPattern, stringReplacePattern, start, length))\r\n\t\t{\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tthis.fromString(stringStream.toString());\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Skip any pattern from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {*}\r\n\t */\r\n\tskipPatterns(patterns, start, length, backward)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.skipPatterns(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Skip any pattern not from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {number}\r\n\t */\r\n\tskipNotPatterns(patterns, start, length, backward)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.skipNotPatterns(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a new \"BitStream\" content to the current \"BitStream\"\r\n\t * @param {BitStream} stream A new \"stream\" to append to current \"stream\"\r\n\t */\r\n\tappend(stream)\r\n\t{\r\n\t\t//region Initialize current stream with new data\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tthis.fromString([\r\n\t\t\tthis.toString(),\r\n\t\t\tstream.toString()\r\n\t\t].join(\"\"));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class SeqBitStream\r\n{\r\n\t//**********************************************************************************\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal variables\r\n\t\tthis.stream = new BitStream();\r\n\t\t\r\n\t\tthis._start = 0;\r\n\t\tthis._length = this.stream.bitsCount;\r\n\t\t\r\n\t\tthis.backward = false;\r\n\t\t\r\n\t\tthis.appendBlock = 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\tfor(const key of Object.keys(parameters))\r\n\t\t{\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase \"stream\":\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\tcase \"length\":\r\n\t\t\t\tcase \"backward\":\r\n\t\t\t\tcase \"appendBlock\":\r\n\t\t\t\t\tthis[key] = parameters[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\tset start(value)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(value > this.stream.bitsCount)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tthis._length -= ((this.backward) ? (this._start - value) : (value - this._start));\r\n\t\tthis._start = value;\r\n\t\t\r\n\t\t//region Initialization of \"prev\" internal variables\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevStart = this._start;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevLength = this._length;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\tget start()\r\n\t{\r\n\t\treturn this._start;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\tset length(value)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(value > this.stream.bitsCount)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevLength = this._length;\r\n\t\tthis._length = value;\r\n\t}\r\n\t//**********************************************************************************\r\n\tget length()\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\t//**********************************************************************************\r\n\tset stream(value)\r\n\t{\r\n\t\tthis._stream = value;\r\n\t\t\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevLength = this._length;\r\n\t\tthis._length = value.bitsCount;\r\n\t\t\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevStart = this._start;\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tthis._start = (this.backward) ? this.length : 0;\r\n\t}\r\n\t//**********************************************************************************\r\n\tget stream()\r\n\t{\r\n\t\treturn this._stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Get next \"length\" bits from the stream\r\n\t * @param {number} length Number of bits to read\r\n\t * @returns {*}\r\n\t */\r\n\tgetBits(length)\r\n\t{\r\n\t\t//region Check input parameters \r\n\t\tif((this.start + length) > this.stream.bitsCount)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (this.stream.bitsCount - this.start);\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet result;\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Copy necessary length of bits\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\tresult = this.stream.copy(this.start - length, length);\r\n\t\t\tthis.start -= result.bitsCount;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult = this.stream.copy(this.start, length);\r\n\t\t\tthis.start += result.bitsCount;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionTooLongJS\r\n\t/**\r\n\t * Get string representation for the next \"length\" bits from the stream\r\n\t * @param {number} length Number of bits to read\r\n\t * @returns {string}\r\n\t */\r\n\tgetBitsString(length)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\tif((this.start + length) > this.stream.bitsCount)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (this.stream.bitsCount - this.start);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet result = [];\r\n\t\t\r\n\t\tlet start;\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.backward)\r\n\t\t\tstart = this.start - length;\r\n\t\telse\r\n\t\t\tstart = this.start;\r\n\t\t\r\n\t\tlet end = this.start + length - 1;\r\n\t\t\r\n\t\t//region Make ability to pass non-value bits\r\n\t\tlet valueShift = 0;\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.stream.bitsCount % 8)\r\n\t\t\tvalueShift = (8 - (this.stream.bitsCount % 8));\r\n\t\t\r\n\t\tstart += valueShift;\r\n\t\tend += valueShift;\r\n\t\t//endregion\r\n\t\t\r\n\t\tconst startIndex = start >> 3;\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst startOffset = start & 0x07;\r\n\t\t\r\n\t\tconst endIndex = end >> 3;\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst endOffset = end & 0x07;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\tconst bitsLengthIndex = startIndex + (((endIndex - startIndex) == 0) ? 1 : (endIndex - startIndex + 1));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get string representation of bits\r\n\t\tfor(let i = startIndex; i < bitsLengthIndex; i++)\r\n\t\t{\r\n\t\t\tlet value = bitsToStringArray[this.stream.view[i]];\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(i == startIndex)\r\n\t\t\t\tvalue = value.slice(startOffset);\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(i == (bitsLengthIndex - 1))\r\n\t\t\t\tvalue = value.slice(0, endOffset - 7 + value.length);\r\n\t\t\t\r\n\t\t\tresult.push(value);\r\n\t\t}\r\n\t\t\r\n\t\tresult = result.join(\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change internal values\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.backward)\r\n\t\t\tthis.start -= result.length;\r\n\t\telse\r\n\t\t\tthis.start += result.length;\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Get number value representation of the next \"length\" bits from the stream, preliminary reversed\r\n\t * @param {number} length Number of bits to read\r\n\t * @returns {*}\r\n\t */\r\n\tgetBitsReversedValue(length)\r\n\t{\r\n\t\t//region Initial variables \r\n\t\tconst initialValue = this.getBitsString(length);\r\n\t\tconst initialValueLength = initialValue.length;\r\n\t\t\r\n\t\tlet byteIndex;\r\n\t\t\r\n\t\tconst initialOffset = 8 - (initialValueLength % 8);\r\n\t\t\r\n\t\tconst reversedValue = new Array(initialValueLength);\r\n\t\t\r\n\t\tconst value = new Uint32Array(1);\r\n\t\tconst valueView = new Uint8Array(value.buffer, 0, 4);\r\n\t\t\r\n\t\tlet i;\r\n\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, MagicNumberJS, NonBlockStatementBodyJS\r\n\t\tif(initialValueLength > 32)\r\n\t\t\treturn (-1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, MagicNumberJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(length == 32)\r\n\t\t\tbyteIndex = 3;\r\n\t\telse\r\n\t\t\tbyteIndex = ((initialValueLength - 1) >> 3);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Reverse value \r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(i = 0; i < initialValueLength; i++)\r\n\t\t\treversedValue[initialValueLength - 1 - i] = initialValue[i];\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value \r\n\t\tfor(i = initialOffset; i < (initialOffset + initialValueLength); i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(reversedValue[i - initialOffset] == \"1\")\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tvalueView[byteIndex] |= 0x01 << (7 - (i % 8));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(i && (((i + 1) % 8) == 0))\r\n\t\t\t\tbyteIndex--;\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Represent remaining bits in \"BitStream\" as a string\r\n\t * @return {string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tconst streamToDisplay = this.stream.copy(this.start, this.length);\r\n\t\treturn streamToDisplay.toString();\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilFromBase, utilToBase, bufferToHexCodes, toBase64, fromBase64, arrayBufferToString, stringToArrayBuffer } from \"pvutils\";\r\nimport { ByteStream, SeqStream } from \"bytestreamjs\";\r\nimport { getCrypto, getEngine } from \"./common.js\";\r\nimport PublicKeyInfo from \"./PublicKeyInfo.js\";\r\n//**************************************************************************************\r\nexport class SignedCertificateTimestamp\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for SignedCertificateTimestamp class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", SignedCertificateTimestamp.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc logID\r\n\t\t */\r\n\t\tthis.logID = getParametersValue(parameters, \"logID\", SignedCertificateTimestamp.defaultValues(\"logID\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @desc timestamp\r\n\t\t */\r\n\t\tthis.timestamp = getParametersValue(parameters, \"timestamp\", SignedCertificateTimestamp.defaultValues(\"timestamp\"));\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc extensions\r\n\t\t */\r\n\t\tthis.extensions = getParametersValue(parameters, \"extensions\", SignedCertificateTimestamp.defaultValues(\"extensions\"));\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc hashAlgorithm\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", SignedCertificateTimestamp.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc signatureAlgorithm\r\n\t\t */\r\n\t\tthis.signatureAlgorithm = getParametersValue(parameters, \"signatureAlgorithm\", SignedCertificateTimestamp.defaultValues(\"signatureAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc signature\r\n\t\t */\r\n\t\tthis.signature = getParametersValue(parameters, \"signature\", SignedCertificateTimestamp.defaultValues(\"signature\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"stream\"\r\n\t\tif(\"stream\" in parameters)\r\n\t\t\tthis.fromStream(parameters.stream);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"logID\":\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"timestamp\":\r\n\t\t\t\treturn new Date(0);\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\tcase \"signatureAlgorithm\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"signature\":\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SignedCertificateTimestamp class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\tif((schema instanceof asn1js.RawData) === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SignedCertificateTimestamp\");\r\n\t\t\r\n\t\tconst seqStream = new SeqStream({\r\n\t\t\tstream: new ByteStream({\r\n\t\t\t\tbuffer: schema.data\r\n\t\t\t})\r\n\t\t});\r\n\t\t\r\n\t\tthis.fromStream(seqStream);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert SeqStream data into current class\r\n\t * @param {!SeqStream} stream\r\n\t */\r\n\tfromStream(stream)\r\n\t{\r\n\t\tconst blockLength = stream.getUint16();\r\n\t\t\r\n\t\tthis.version = (stream.getBlock(1))[0];\r\n\t\t\r\n\t\tif(this.version === 0)\r\n\t\t{\r\n\t\t\tthis.logID = (new Uint8Array(stream.getBlock(32))).buffer.slice(0);\r\n\t\t\tthis.timestamp = new Date(utilFromBase(new Uint8Array(stream.getBlock(8)), 8));\r\n\t\t\t\r\n\t\t\t//region Extensions\r\n\t\t\tconst extensionsLength = stream.getUint16();\r\n\t\t\tthis.extensions = (new Uint8Array(stream.getBlock(extensionsLength))).buffer.slice(0);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Hash algorithm\r\n\t\t\tswitch((stream.getBlock(1))[0])\r\n\t\t\t{\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.hashAlgorithm = \"none\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.hashAlgorithm = \"md5\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.hashAlgorithm = \"sha1\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.hashAlgorithm = \"sha224\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis.hashAlgorithm = \"sha256\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tthis.hashAlgorithm = \"sha384\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tthis.hashAlgorithm = \"sha512\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Object's stream was not correct for SignedCertificateTimestamp\");\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Signature algorithm\r\n\t\t\tswitch((stream.getBlock(1))[0])\r\n\t\t\t{\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.signatureAlgorithm = \"anonymous\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.signatureAlgorithm = \"rsa\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.signatureAlgorithm = \"dsa\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.signatureAlgorithm = \"ecdsa\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Object's stream was not correct for SignedCertificateTimestamp\");\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Signature\r\n\t\t\tconst signatureLength = stream.getUint16();\r\n\t\t\tconst signatureData = (new Uint8Array(stream.getBlock(signatureLength))).buffer.slice(0);\r\n\t\t\t\r\n\t\t\tconst asn1 = asn1js.fromBER(signatureData);\r\n\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\tthrow new Error(\"Object's stream was not correct for SignedCertificateTimestamp\");\r\n\t\t\t\r\n\t\t\tthis.signature = asn1.result;\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\tif(blockLength !== (47 + extensionsLength + signatureLength))\r\n\t\t\t\tthrow new Error(\"Object's stream was not correct for SignedCertificateTimestamp\");\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\tconst stream = this.toStream();\r\n\t\t\r\n\t\treturn new asn1js.RawData({ data: stream.stream.buffer });\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to SeqStream data\r\n\t * @returns {SeqStream} SeqStream object\r\n\t */\r\n\ttoStream()\r\n\t{\r\n\t\tconst stream = new SeqStream();\r\n\t\t\r\n\t\tstream.appendUint16(47 + this.extensions.byteLength + this.signature.valueBeforeDecode.byteLength);\r\n\t\tstream.appendChar(this.version);\r\n\t\tstream.appendView(new Uint8Array(this.logID));\r\n\t\t\r\n\t\tconst timeBuffer = new ArrayBuffer(8);\r\n\t\tconst timeView = new Uint8Array(timeBuffer);\r\n\t\t\r\n\t\tconst baseArray = utilToBase(this.timestamp.valueOf(), 8);\r\n\t\ttimeView.set(new Uint8Array(baseArray), 8 - baseArray.byteLength);\r\n\t\t\r\n\t\tstream.appendView(timeView);\r\n\t\tstream.appendUint16(this.extensions.byteLength);\r\n\t\t\r\n\t\tif(this.extensions.byteLength)\r\n\t\t\tstream.appendView(new Uint8Array(this.extensions));\r\n\t\t\r\n\t\tlet _hashAlgorithm;\r\n\t\t\r\n\t\tswitch(this.hashAlgorithm.toLowerCase())\r\n\t\t{\r\n\t\t\tcase \"none\":\r\n\t\t\t\t_hashAlgorithm = 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"md5\":\r\n\t\t\t\t_hashAlgorithm = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha1\":\r\n\t\t\t\t_hashAlgorithm = 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha224\":\r\n\t\t\t\t_hashAlgorithm = 3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha256\":\r\n\t\t\t\t_hashAlgorithm = 4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha384\":\r\n\t\t\t\t_hashAlgorithm = 5;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha512\":\r\n\t\t\t\t_hashAlgorithm = 6;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Incorrect data for hashAlgorithm: ${this.hashAlgorithm}`);\r\n\t\t}\r\n\t\t\r\n\t\tstream.appendChar(_hashAlgorithm);\r\n\t\t\r\n\t\tlet _signatureAlgorithm;\r\n\t\t\r\n\t\tswitch(this.signatureAlgorithm.toLowerCase())\r\n\t\t{\r\n\t\t\tcase \"anonymous\":\r\n\t\t\t\t_signatureAlgorithm = 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rsa\":\r\n\t\t\t\t_signatureAlgorithm = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"dsa\":\r\n\t\t\t\t_signatureAlgorithm = 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ecdsa\":\r\n\t\t\t\t_signatureAlgorithm = 3;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Incorrect data for signatureAlgorithm: ${this.signatureAlgorithm}`);\r\n\t\t}\r\n\t\t\r\n\t\tstream.appendChar(_signatureAlgorithm);\r\n\t\t\r\n\t\tconst _signature = this.signature.toBER(false);\r\n\t\t\r\n\t\tstream.appendUint16(_signature.byteLength);\r\n\t\tstream.appendView(new Uint8Array(_signature));\r\n\t\t\r\n\t\treturn stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tversion: this.version,\r\n\t\t\tlogID: bufferToHexCodes(this.logID),\r\n\t\t\ttimestamp: this.timestamp,\r\n\t\t\textensions: bufferToHexCodes(this.extensions),\r\n\t\t\thashAlgorithm: this.hashAlgorithm,\r\n\t\t\tsignatureAlgorithm: this.signatureAlgorithm,\r\n\t\t\tsignature: this.signature.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Verify SignedCertificateTimestamp for specific input data\r\n\t * @param {Object[]} logs Array of objects with information about each CT Log (like here: https://ct.grahamedgecombe.com/logs.json)\r\n\t * @param {String} logs.log_id Identifier of the CT Log encoded in BASE-64 format\r\n\t * @param {String} logs.key Public key of the CT Log encoded in BASE-64 format\r\n\t * @param {ArrayBuffer} data Data to verify signature against. Could be encoded Certificate or encoded PreCert\r\n\t * @param {Number} [dataType=0] Type = 0 (data is encoded Certificate), type = 1 (data is encoded PreCert)\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tasync verify(logs, data, dataType = 0)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet logId = toBase64(arrayBufferToString(this.logID));\r\n\t\t\r\n\t\tlet publicKeyBase64 = null;\r\n\t\tlet publicKeyInfo;\r\n\t\t\r\n\t\tlet stream = new SeqStream();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Found and init public key\r\n\t\tfor(const log of logs)\r\n\t\t{\r\n\t\t\tif(log.log_id === logId)\r\n\t\t\t{\r\n\t\t\t\tpublicKeyBase64 = log.key;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(publicKeyBase64 === null)\r\n\t\t\tthrow new Error(`Public key not found for CT with logId: ${logId}`);\r\n\t\t\r\n\t\tconst asn1 = asn1js.fromBER(stringToArrayBuffer(fromBase64(publicKeyBase64)));\r\n\t\tif(asn1.offset === (-1))\r\n\t\t\tthrow new Error(`Incorrect key value for CT Log with logId: ${logId}`);\r\n\t\t\r\n\t\tpublicKeyInfo = new PublicKeyInfo({ schema: asn1.result });\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initialize signed data block\r\n\t\tstream.appendChar(0x00); // sct_version\r\n\t\tstream.appendChar(0x00); // signature_type = certificate_timestamp\r\n\t\t\r\n\t\tconst timeBuffer = new ArrayBuffer(8);\r\n\t\tconst timeView = new Uint8Array(timeBuffer);\r\n\t\t\r\n\t\tconst baseArray = utilToBase(this.timestamp.valueOf(), 8);\r\n\t\ttimeView.set(new Uint8Array(baseArray), 8 - baseArray.byteLength);\r\n\t\t\r\n\t\tstream.appendView(timeView);\r\n\t\t\r\n\t\tstream.appendUint16(dataType);\r\n\t\t\r\n\t\tif(dataType === 0)\r\n\t\t\tstream.appendUint24(data.byteLength);\r\n\t\t\r\n\t\tstream.appendView(new Uint8Array(data));\r\n\t\t\r\n\t\tstream.appendUint16(this.extensions.byteLength);\r\n\t\t\r\n\t\tif(this.extensions.byteLength !== 0)\r\n\t\t\tstream.appendView(new Uint8Array(this.extensions));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Perform verification\r\n\t\treturn getEngine().subtle.verifyWithPublicKey(\r\n\t\t\tstream._stream._buffer.slice(0, stream._length),\r\n\t\t\t{ valueBlock: { valueHex: this.signature.toBER(false) } },\r\n\t\t\tpublicKeyInfo,\r\n\t\t\t{ algorithmId: \"\" },\r\n\t\t\t\"SHA-256\"\r\n\t\t);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6962\r\n */\r\nexport default class SignedCertificateTimestampList\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for SignedCertificateTimestampList class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<SignedCertificateTimestamp>}\r\n\t\t * @desc timestamps\r\n\t\t */\r\n\t\tthis.timestamps = getParametersValue(parameters, \"timestamps\", SignedCertificateTimestampList.defaultValues(\"timestamps\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"timestamps\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SignedCertificateTimestampList class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"timestamps\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SignedCertificateTimestampList class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * SignedCertificateTimestampList ::= OCTET STRING\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [optional]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\tif((\"optional\" in names) === false)\r\n\t\t\tnames.optional = false;\r\n\t\t\r\n\t\treturn (new asn1js.OctetString({\r\n\t\t\tname: (names.blockName || \"SignedCertificateTimestampList\"),\r\n\t\t\toptional: names.optional\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tif((schema instanceof asn1js.OctetString) === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SignedCertificateTimestampList\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tconst seqStream = new SeqStream({\r\n\t\t\tstream: new ByteStream({\r\n\t\t\t\tbuffer: schema.valueBlock.valueHex\r\n\t\t\t})\r\n\t\t});\r\n\t\t\r\n\t\tlet dataLength = seqStream.getUint16();\r\n\t\tif(dataLength !== seqStream.length)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SignedCertificateTimestampList\");\r\n\t\t\r\n\t\twhile(seqStream.length)\r\n\t\t\tthis.timestamps.push(new SignedCertificateTimestamp({ stream: seqStream }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst stream = new SeqStream();\r\n\t\t\r\n\t\tlet overallLength = 0;\r\n\t\t\r\n\t\tconst timestampsData = [];\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get overall length\r\n\t\tfor(const timestamp of this.timestamps)\r\n\t\t{\r\n\t\t\tconst timestampStream = timestamp.toStream();\r\n\t\t\ttimestampsData.push(timestampStream);\r\n\t\t\toverallLength += timestampStream.stream.buffer.byteLength;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\tstream.appendUint16(overallLength);\r\n\t\t\r\n\t\t//region Set data from all timestamps\r\n\t\tfor(const timestamp of timestampsData)\r\n\t\t\tstream.appendView(timestamp.stream.view);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn new asn1js.OctetString({ valueHex: stream.stream.buffer.slice(0) });\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\ttimestamps: Array.from(this.timestamps, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Verify SignedCertificateTimestamp for specific certificate content\r\n * @param {Certificate} certificate Certificate for which verification would be performed\r\n * @param {Certificate} issuerCertificate Certificate of the issuer of target certificate\r\n * @param {Object[]} logs Array of objects with information about each CT Log (like here: https://ct.grahamedgecombe.com/logs.json)\r\n * @param {String} logs.log_id Identifier of the CT Log encoded in BASE-64 format\r\n * @param {String} logs.key Public key of the CT Log encoded in BASE-64 format\r\n * @param {Number} [index=-1] Index of SignedCertificateTimestamp inside SignedCertificateTimestampList (for -1 would verify all)\r\n * @return {Array} Array of verification results\r\n */\r\nexport async function verifySCTsForCertificate(certificate, issuerCertificate, logs, index = (-1))\r\n{\r\n\t//region Initial variables\r\n\tlet parsedValue = null;\r\n\tlet tbs;\r\n\tlet issuerId;\r\n\t\r\n\tconst stream = new SeqStream();\r\n\t\r\n\tlet preCert;\r\n\t//endregion\r\n\t\r\n\t//region Get a \"crypto\" extension\r\n\tconst crypto = getCrypto();\r\n\tif(typeof crypto === \"undefined\")\r\n\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t//endregion\r\n\t\r\n\t//region Remove certificate extension\r\n\tfor(let i = 0; i < certificate.extensions.length; i++)\r\n\t{\r\n\t\tswitch(certificate.extensions[i].extnID)\r\n\t\t{\r\n\t\t\tcase \"1.3.6.1.4.1.11129.2.4.2\":\r\n\t\t\t\t{\r\n\t\t\t\t\tparsedValue = certificate.extensions[i].parsedValue;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(parsedValue.timestamps.length === 0)\r\n\t\t\t\t\t\tthrow new Error(\"Nothing to verify in the certificate\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tcertificate.extensions.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\t//endregion\r\n\t\r\n\t//region Check we do have what to verify\r\n\tif(parsedValue === null)\r\n\t\tthrow new Error(\"No SignedCertificateTimestampList extension in the specified certificate\");\r\n\t//endregion\r\n\t\r\n\t//region Prepare modifier TBS value\r\n\ttbs = certificate.encodeTBS().toBER(false);\r\n\t//endregion\r\n\t\r\n\t//region Initialize \"issuer_key_hash\" value\r\n\tissuerId = await crypto.digest({ name: \"SHA-256\" }, new Uint8Array(issuerCertificate.subjectPublicKeyInfo.toSchema().toBER(false)));\r\n\t//endregion\r\n\t\r\n\t//region Make final \"PreCert\" value\r\n\tstream.appendView(new Uint8Array(issuerId));\r\n\tstream.appendUint24(tbs.byteLength);\r\n\tstream.appendView(new Uint8Array(tbs));\r\n\t\r\n\tpreCert = stream._stream._buffer.slice(0, stream._length);\r\n\t//endregion\r\n\t\r\n\t//region Call verification function for specified index\r\n\tif(index === (-1))\r\n\t{\r\n\t\tconst verifyArray = [];\r\n\t\t\r\n\t\tfor(const timestamp of parsedValue.timestamps)\r\n\t\t{\r\n\t\t\tconst verifyResult = await timestamp.verify(logs, preCert, 1);\r\n\t\t\tverifyArray.push(verifyResult);\r\n\t\t}\r\n\t\t\r\n\t\treturn verifyArray;\r\n\t}\r\n\t\r\n\tif(index >= parsedValue.timestamps.length)\r\n\t\tindex = (parsedValue.timestamps.length - 1);\r\n\t\r\n\treturn [await parsedValue.timestamps[index].verify(logs, preCert, 1)];\r\n\t//endregion\r\n}\r\n//**********************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from \"[MS-WCCE]: Windows Client Certificate Enrollment Protocol\"\r\n */\r\nexport default class CertificateTemplate\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CertificateTemplate class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc templateID\r\n\t\t */\r\n\t\tthis.templateID = getParametersValue(parameters, \"templateID\", CertificateTemplate.defaultValues(\"templateID\"));\r\n\r\n\t\tif(\"templateMajorVersion\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc templateMajorVersion\r\n\t\t\t */\r\n\t\t\tthis.templateMajorVersion = getParametersValue(parameters, \"templateMajorVersion\", CertificateTemplate.defaultValues(\"templateMajorVersion\"));\r\n\r\n\t\tif(\"templateMinorVersion\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @desc templateMinorVersion\r\n\t\t\t */\r\n\t\t\tthis.templateMinorVersion = getParametersValue(parameters, \"templateMinorVersion\", CertificateTemplate.defaultValues(\"templateMinorVersion\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"templateID\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"templateMajorVersion\":\r\n\t\t\tcase \"templateMinorVersion\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CertificateTemplate class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * CertificateTemplateOID ::= SEQUENCE {\r\n     *    templateID              OBJECT IDENTIFIER,\r\n     *    templateMajorVersion    INTEGER (0..4294967295) OPTIONAL,\r\n     *    templateMinorVersion    INTEGER (0..4294967295) OPTIONAL\r\n     * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [templateID]\r\n\t\t * @property {string} [templateMajorVersion]\r\n\t\t * @property {string} [templateMinorVersion]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.templateID || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\tname: (names.templateMajorVersion || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\tname: (names.templateMinorVersion || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"templateID\",\r\n\t\t\t\"templateMajorVersion\",\r\n\t\t\t\"templateMinorVersion\"\r\n\t\t]);\r\n\t\t//endregion\r\n\r\n\t\t//region Check the schema is valid\r\n\t\tlet asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tCertificateTemplate.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\ttemplateID: \"templateID\",\r\n\t\t\t\t\ttemplateMajorVersion: \"templateMajorVersion\",\r\n\t\t\t\t\ttemplateMinorVersion: \"templateMinorVersion\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CertificateTemplate\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.templateID = asn1.result.templateID.valueBlock.toString();\r\n\r\n\t\tif(\"templateMajorVersion\" in asn1.result)\r\n\t\t\tthis.templateMajorVersion = asn1.result.templateMajorVersion.valueBlock.valueDec;\r\n\r\n\t\tif(\"templateMinorVersion\" in asn1.result)\r\n\t\t\tthis.templateMinorVersion = asn1.result.templateMinorVersion.valueBlock.valueDec;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.templateID }));\r\n\r\n\t\tif(\"templateMajorVersion\" in this)\r\n\t\t\toutputArray.push(new asn1js.Integer({ value: this.templateMajorVersion }));\r\n\r\n\t\tif(\"templateMinorVersion\" in this)\r\n\t\t\toutputArray.push(new asn1js.Integer({ value: this.templateMinorVersion }));\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\textnID: this.templateID\r\n\t\t};\r\n\r\n\t\tif(\"templateMajorVersion\" in this)\r\n\t\t\tobject.templateMajorVersion = this.templateMajorVersion;\r\n\r\n\t\tif(\"templateMinorVersion\" in this)\r\n\t\t\tobject.templateMinorVersion = this.templateMinorVersion;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from https://docs.microsoft.com/en-us/windows/desktop/seccrypto/certification-authority-renewal\r\n */\r\nexport default class CAVersion\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CAVersion class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc certificateIndex\r\n\t\t */\r\n\t\tthis.certificateIndex = getParametersValue(parameters, \"certificateIndex\", CAVersion.defaultValues(\"certificateIndex\"));\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc keyIndex\r\n\t\t */\r\n\t\tthis.keyIndex = getParametersValue(parameters, \"keyIndex\", CAVersion.defaultValues(\"keyIndex\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certificateIndex\":\r\n\t\t\tcase \"keyIndex\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CAVersion class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * CAVersion ::= INTEGER\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\treturn (new asn1js.Integer());\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tif(schema.constructor.blockName() !== asn1js.Integer.blockName())\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CAVersion\");\r\n\t\t//endregion\r\n\r\n\t\t//region Check length of the input value and correct it if needed\r\n\t\tlet value = schema.valueBlock.valueHex.slice(0);\r\n\t\tconst valueView = new Uint8Array(value);\r\n\r\n\t\tswitch(true)\r\n\t\t{\r\n\t\t\tcase (value.byteLength < 4):\r\n\t\t\t\t{\r\n\t\t\t\t\tconst tempValue = new ArrayBuffer(4);\r\n\t\t\t\t\tconst tempValueView = new Uint8Array(tempValue);\r\n\r\n\t\t\t\t\ttempValueView.set(valueView, 4 - value.byteLength);\r\n\r\n\t\t\t\t\tvalue = tempValue.slice(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase (value.byteLength > 4):\r\n\t\t\t\t{\r\n\t\t\t\t\tconst tempValue = new ArrayBuffer(4);\r\n\t\t\t\t\tconst tempValueView = new Uint8Array(tempValue);\r\n\r\n\t\t\t\t\ttempValueView.set(valueView.slice(0, 4));\r\n\r\n\t\t\t\t\tvalue = tempValue.slice(0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tconst keyIndexBuffer = value.slice(0, 2);\r\n\t\tconst keyIndexView8 = new Uint8Array(keyIndexBuffer);\r\n\t\tlet temp = keyIndexView8[0];\r\n\t\tkeyIndexView8[0] = keyIndexView8[1];\r\n\t\tkeyIndexView8[1] = temp;\r\n\r\n\t\tconst keyIndexView16 = new Uint16Array(keyIndexBuffer);\r\n\r\n\t\tthis.keyIndex = keyIndexView16[0];\r\n\r\n\t\tconst certificateIndexBuffer = value.slice(2);\r\n\t\tconst certificateIndexView8 = new Uint8Array(certificateIndexBuffer);\r\n\t\ttemp = certificateIndexView8[0];\r\n\t\tcertificateIndexView8[0] = certificateIndexView8[1];\r\n\t\tcertificateIndexView8[1] = temp;\r\n\r\n\t\tconst certificateIndexView16 = new Uint16Array(certificateIndexBuffer);\r\n\r\n\t\tthis.certificateIndex = certificateIndexView16[0];\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create raw values\r\n\t\tconst certificateIndexBuffer = new ArrayBuffer(2);\r\n\t\tconst certificateIndexView = new Uint16Array(certificateIndexBuffer);\r\n\r\n\t\tcertificateIndexView[0] = this.certificateIndex;\r\n\r\n\t\tconst certificateIndexView8 = new Uint8Array(certificateIndexBuffer);\r\n\t\tlet temp = certificateIndexView8[0];\r\n\t\tcertificateIndexView8[0] = certificateIndexView8[1];\r\n\t\tcertificateIndexView8[1] = temp;\r\n\r\n\t\tconst keyIndexBuffer = new ArrayBuffer(2);\r\n\t\tconst keyIndexView = new Uint16Array(keyIndexBuffer);\r\n\r\n\t\tkeyIndexView[0] = this.keyIndex;\r\n\r\n\t\tconst keyIndexView8 = new Uint8Array(keyIndexBuffer);\r\n\t\ttemp = keyIndexView8[0];\r\n\t\tkeyIndexView8[0] = keyIndexView8[1];\r\n\t\tkeyIndexView8[1] = temp;\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Integer({\r\n\t\t\tvalueHex: utilConcatBuf(keyIndexBuffer, certificateIndexBuffer)\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tcertificateIndex: this.certificateIndex,\r\n\t\t\tkeyIndex: this.keyIndex\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3739\r\n */\r\nexport class QCStatement\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for QCStatement class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.id = getParametersValue(parameters, \"id\", QCStatement.defaultValues(\"id\"));\r\n\r\n\t\tif(\"type\" in parameters)\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * @type {*} Any data described by \"id\"\r\n\t\t\t */\r\n\t\t\tthis.type = getParametersValue(parameters, \"type\", QCStatement.defaultValues(\"type\"));\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"id\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn new asn1js.Null();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for QCStatement class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"id\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn (memberValue instanceof asn1js.Null);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for QCStatement class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n \t *\t QCStatement ::= SEQUENCE {\r\n\t *       statementId   QC-STATEMENT.&id({SupportedStatements}),\r\n\t *       statementInfo QC-STATEMENT.&Type({SupportedStatements}{@statementId}) OPTIONAL\r\n\t *   }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [id]\r\n\t\t * @property {string} [type]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.id || \"\") }),\r\n\t\t\t\tnew asn1js.Any({\r\n\t\t\t\t\tname: (names.type || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"id\",\r\n\t\t\t\"type\"\r\n\t\t]);\r\n\t\t//endregion\r\n\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tQCStatement.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tid: \"id\",\r\n\t\t\t\t\ttype: \"type\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for QCStatement\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.id = asn1.result.id.valueBlock.toString();\r\n\r\n\t\tif(\"type\" in asn1.result)\r\n\t\t\tthis.type = asn1.result.type;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\tconst value = [\r\n\t\t\tnew asn1js.ObjectIdentifier({ value: this.id })\r\n\t\t];\r\n\r\n\t\tif(\"type\" in this)\r\n\t\t\tvalue.push(this.type);\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\tid: this.id\r\n\t\t};\r\n\r\n\t\tif(\"type\" in this)\r\n\t\t\tobject.type = this.type.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3739\r\n */\r\nexport default class QCStatements\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for QCStatements class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array<QCStatement>}\r\n\t\t */\r\n\t\tthis.values = getParametersValue(parameters, \"values\", QCStatements.defaultValues(\"values\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"values\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for QCStatements class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"values\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for QCStatements class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * QCStatements ::= SEQUENCE OF QCStatement\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.values || \"\"),\r\n\t\t\t\t\tvalue: QCStatement.schema(names.value || {})\r\n\t\t\t\t}),\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"values\"\r\n\t\t]);\r\n\t\t//endregion\r\n\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tQCStatements.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tvalues: \"values\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for QCStatements\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.values = Array.from(asn1.result.values, element => new QCStatement({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.values, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\textensions: Array.from(this.values, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport SubjectDirectoryAttributes from \"./SubjectDirectoryAttributes.js\";\r\nimport PrivateKeyUsagePeriod from \"./PrivateKeyUsagePeriod.js\";\r\nimport AltName from \"./AltName.js\";\r\nimport BasicConstraints from \"./BasicConstraints.js\";\r\nimport IssuingDistributionPoint from \"./IssuingDistributionPoint.js\";\r\nimport GeneralNames from \"./GeneralNames.js\";\r\nimport NameConstraints from \"./NameConstraints.js\";\r\nimport CRLDistributionPoints from \"./CRLDistributionPoints.js\";\r\nimport CertificatePolicies from \"./CertificatePolicies.js\";\r\nimport PolicyMappings from \"./PolicyMappings.js\";\r\nimport AuthorityKeyIdentifier from \"./AuthorityKeyIdentifier.js\";\r\nimport PolicyConstraints from \"./PolicyConstraints.js\";\r\nimport ExtKeyUsage from \"./ExtKeyUsage.js\";\r\nimport InfoAccess from \"./InfoAccess.js\";\r\nimport SignedCertificateTimestampList from \"./SignedCertificateTimestampList.js\";\r\nimport CertificateTemplate from \"./CertificateTemplate.js\";\r\nimport CAVersion from \"./CAVersion.js\";\r\nimport QCStatements from \"./QCStatements.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class Extension\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Extension class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc extnID\r\n\t\t */\r\n\t\tthis.extnID = getParametersValue(parameters, \"extnID\", Extension.defaultValues(\"extnID\"));\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @desc critical\r\n\t\t */\r\n\t\tthis.critical = getParametersValue(parameters, \"critical\", Extension.defaultValues(\"critical\"));\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc extnValue\r\n\t\t */\r\n\t\tif(\"extnValue\" in parameters)\r\n\t\t\tthis.extnValue = new asn1js.OctetString({ valueHex: parameters.extnValue });\r\n\t\telse\r\n\t\t\tthis.extnValue = Extension.defaultValues(\"extnValue\");\r\n\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Object}\r\n\t\t\t * @desc parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", Extension.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"extnID\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"critical\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"extnValue\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Extension class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * Extension  ::=  SEQUENCE  {\r\n\t *    extnID      OBJECT IDENTIFIER,\r\n\t *    critical    BOOLEAN DEFAULT FALSE,\r\n\t *    extnValue   OCTET STRING\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [extnID]\r\n\t\t * @property {string} [critical]\r\n\t\t * @property {string} [extnValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.extnID || \"\") }),\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\tname: (names.critical || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.extnValue || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"extnID\",\r\n\t\t\t\"critical\",\r\n\t\t\t\"extnValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tlet asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tExtension.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\textnID: \"extnID\",\r\n\t\t\t\t\tcritical: \"critical\",\r\n\t\t\t\t\textnValue: \"extnValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Extension\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.extnID = asn1.result.extnID.valueBlock.toString();\r\n\t\tif(\"critical\" in asn1.result)\r\n\t\t\tthis.critical = asn1.result.critical.valueBlock.value;\r\n\t\tthis.extnValue = asn1.result.extnValue;\r\n\r\n\t\t//region Get \"parsedValue\" for well-known extensions\r\n\t\tasn1 = asn1js.fromBER(this.extnValue.valueBlock.valueHex);\r\n\t\tif(asn1.offset === (-1))\r\n\t\t\treturn;\r\n\r\n\t\tswitch(this.extnID)\r\n\t\t{\r\n\t\t\tcase \"2.5.29.9\": // SubjectDirectoryAttributes\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated SubjectDirectoryAttributes\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.14\": // SubjectKeyIdentifier\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple OCTETSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.15\": // KeyUsage\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple BITSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.16\": // PrivateKeyUsagePeriod\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated PrivateKeyUsagePeriod\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.17\": // SubjectAltName\r\n\t\t\tcase \"2.5.29.18\": // IssuerAltName\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AltName({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AltName();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated AltName\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.19\": // BasicConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new BasicConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new BasicConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated BasicConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.20\": // CRLNumber\r\n\t\t\tcase \"2.5.29.27\": // BaseCRLNumber (delta CRL indicator)\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.21\": // CRLReason\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple ENUMERATED\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.24\": // InvalidityDate\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple GeneralizedTime\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.28\": // IssuingDistributionPoint\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new IssuingDistributionPoint({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new IssuingDistributionPoint();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated IssuingDistributionPoint\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.29\": // CertificateIssuer\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new GeneralNames({ schema: asn1.result }); // Should be just a simple\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new GeneralNames();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated GeneralNames\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.30\": // NameConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new NameConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new NameConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated NameConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.31\": // CRLDistributionPoints\r\n\t\t\tcase \"2.5.29.46\": // FreshestCRL\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CRLDistributionPoints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CRLDistributionPoints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CRLDistributionPoints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.32\": // CertificatePolicies\r\n\t\t\tcase \"1.3.6.1.4.1.311.21.10\": // szOID_APPLICATION_CERT_POLICIES - Microsoft-specific OID\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificatePolicies({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificatePolicies();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificatePolicies\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.33\": // PolicyMappings\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyMappings({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyMappings();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificatePolicies\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.35\": // AuthorityKeyIdentifier\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated AuthorityKeyIdentifier\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.36\": // PolicyConstraints\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyConstraints({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new PolicyConstraints();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated PolicyConstraints\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.37\": // ExtKeyUsage\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new ExtKeyUsage({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new ExtKeyUsage();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated ExtKeyUsage\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.54\": // InhibitAnyPolicy\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.1\": // AuthorityInfoAccess\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.11\": // SubjectInfoAccess\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new InfoAccess({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new InfoAccess();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated InfoAccess\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.11129.2.4.2\": // SignedCertificateTimestampList\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SignedCertificateTimestampList({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new SignedCertificateTimestampList();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated SignedCertificateTimestampList\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.311.20.2\": // szOID_ENROLL_CERTTYPE_EXTENSION - Microsoft-specific extension\r\n\t\t\t\tthis.parsedValue = asn1.result; // Used to be simple Unicode string\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.311.21.2\": // szOID_CERTSRV_PREVIOUS_CERT_HASH - Microsoft-specific extension\r\n\t\t\t\tthis.parsedValue = asn1.result; // Used to be simple OctetString\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.311.21.7\": // szOID_CERTIFICATE_TEMPLATE - Microsoft-specific extension\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificateTemplate({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CertificateTemplate();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CertificateTemplate\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.4.1.311.21.1\": // szOID_CERTSRV_CA_VERSION - Microsoft-specific extension\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CAVersion({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new CAVersion();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated CAVersion\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.3\": // QCStatements\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new QCStatements({ schema: asn1.result });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.parsedValue = new QCStatements();\r\n\t\t\t\t\tthis.parsedValue.parsingError = \"Incorrectly formated QCStatements\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.extnID }));\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.critical }));\r\n\r\n\t\toutputArray.push(this.extnValue);\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\textnID: this.extnID,\r\n\t\t\textnValue: this.extnValue.toJSON()\r\n\t\t};\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\tobject.critical = this.critical;\r\n\r\n\t\tif(\"parsedValue\" in this)\r\n\t\t{\r\n\t\t\tif(\"toJSON\" in this.parsedValue)\r\n\t\t\t\tobject.parsedValue = this.parsedValue.toJSON();\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport Extension from \"./Extension.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class Extensions\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Extensions class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Array.<Extension>}\r\n\t\t * @desc type\r\n\t\t */\r\n\t\tthis.extensions = getParametersValue(parameters, \"extensions\", Extensions.defaultValues(\"extensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Extensions class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @param {boolean} optional Flag that current schema should be optional\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {}, optional = false)\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [extensions]\r\n\t\t * @property {string} [extension]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\toptional,\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\tname: (names.extensions || \"\"),\r\n\t\t\t\t\tvalue: Extension.schema(names.extension || {})\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"extensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tExtensions.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\textensions: \"extensions\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Extensions\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.extensions = Array.from(asn1.result.extensions, element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: Array.from(this.extensions, element => element.toSchema())\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\textensions: Array.from(this.extensions, element => element.toJSON())\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, bufferToHexCodes, clearProps } from \"pvutils\";\r\nimport { getCrypto, getEngine } from \"./common.js\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\nimport Time from \"./Time.js\";\r\nimport PublicKeyInfo from \"./PublicKeyInfo.js\";\r\nimport Extension from \"./Extension.js\";\r\nimport Extensions from \"./Extensions.js\";\r\n//**************************************************************************************\r\nfunction tbsCertificate(parameters = {})\r\n{\r\n\t//TBSCertificate  ::=  SEQUENCE  {\r\n\t//    version         [0]  EXPLICIT Version DEFAULT v1,\r\n\t//    serialNumber         CertificateSerialNumber,\r\n\t//    signature            AlgorithmIdentifier,\r\n\t//    issuer               Name,\r\n\t//    validity             Validity,\r\n\t//    subject              Name,\r\n\t//    subjectPublicKeyInfo SubjectPublicKeyInfo,\r\n\t//    issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\r\n\t//                         -- If present, version MUST be v2 or v3\r\n\t//    subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\r\n\t//                         -- If present, version MUST be v2 or v3\r\n\t//    extensions      [3]  EXPLICIT Extensions OPTIONAL\r\n\t//    -- If present, version MUST be v3\r\n\t//}\r\n\t\r\n\t/**\r\n\t * @type {Object}\r\n\t * @property {string} [blockName]\r\n\t * @property {string} [tbsCertificateVersion]\r\n\t * @property {string} [tbsCertificateSerialNumber]\r\n\t * @property {string} [signature]\r\n\t * @property {string} [issuer]\r\n\t * @property {string} [tbsCertificateValidity]\r\n\t * @property {string} [notBefore]\r\n\t * @property {string} [notAfter]\r\n\t * @property {string} [subject]\r\n\t * @property {string} [subjectPublicKeyInfo]\r\n\t * @property {string} [tbsCertificateIssuerUniqueID]\r\n\t * @property {string} [tbsCertificateSubjectUniqueID]\r\n\t * @property {string} [extensions]\r\n\t */\r\n\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\r\n\treturn (new asn1js.Sequence({\r\n\t\tname: (names.blockName || \"tbsCertificate\"),\r\n\t\tvalue: [\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Integer({ name: (names.tbsCertificateVersion || \"tbsCertificate.version\") }) // EXPLICIT integer value\r\n\t\t\t\t]\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Integer({ name: (names.tbsCertificateSerialNumber || \"tbsCertificate.serialNumber\") }),\r\n\t\t\tAlgorithmIdentifier.schema(names.signature || {\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"tbsCertificate.signature\"\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tRelativeDistinguishedNames.schema(names.issuer || {\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"tbsCertificate.issuer\"\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Sequence({\r\n\t\t\t\tname: (names.tbsCertificateValidity || \"tbsCertificate.validity\"),\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tTime.schema(names.notBefore || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tutcTimeName: \"tbsCertificate.notBefore\",\r\n\t\t\t\t\t\t\tgeneralTimeName: \"tbsCertificate.notBefore\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tTime.schema(names.notAfter || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tutcTimeName: \"tbsCertificate.notAfter\",\r\n\t\t\t\t\t\t\tgeneralTimeName: \"tbsCertificate.notAfter\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t}),\r\n\t\t\tRelativeDistinguishedNames.schema(names.subject || {\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"tbsCertificate.subject\"\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tPublicKeyInfo.schema(names.subjectPublicKeyInfo || {\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"tbsCertificate.subjectPublicKeyInfo\"\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Primitive({\r\n\t\t\t\tname: (names.tbsCertificateIssuerUniqueID || \"tbsCertificate.issuerUniqueID\"),\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t}\r\n\t\t\t}), // IMPLICIT bistring value\r\n\t\t\tnew asn1js.Primitive({\r\n\t\t\t\tname: (names.tbsCertificateSubjectUniqueID || \"tbsCertificate.subjectUniqueID\"),\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t}\r\n\t\t\t}), // IMPLICIT bistring value\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [Extensions.schema(names.extensions || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: \"tbsCertificate.extensions\"\r\n\t\t\t\t\t}\r\n\t\t\t\t})]\r\n\t\t\t}) // EXPLICIT SEQUENCE value\r\n\t\t]\r\n\t}));\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class Certificate\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Certificate class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc ToBeSigned (TBS) part of the certificate\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", Certificate.defaultValues(\"tbs\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc Version number\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", Certificate.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc Serial number of the certificate\r\n\t\t */\r\n\t\tthis.serialNumber = getParametersValue(parameters, \"serialNumber\", Certificate.defaultValues(\"serialNumber\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc This field contains the algorithm identifier for the algorithm used by the CA to sign the certificate\r\n\t\t */\r\n\t\tthis.signature = getParametersValue(parameters, \"signature\", Certificate.defaultValues(\"signature\"));\r\n\t\t/**\r\n\t\t * @type {RelativeDistinguishedNames}\r\n\t\t * @desc The issuer field identifies the entity that has signed and issued the certificate\r\n\t\t */\r\n\t\tthis.issuer = getParametersValue(parameters, \"issuer\", Certificate.defaultValues(\"issuer\"));\r\n\t\t/**\r\n\t\t * @type {Time}\r\n\t\t * @desc The date on which the certificate validity period begins\r\n\t\t */\r\n\t\tthis.notBefore = getParametersValue(parameters, \"notBefore\", Certificate.defaultValues(\"notBefore\"));\r\n\t\t/**\r\n\t\t * @type {Time}\r\n\t\t * @desc The date on which the certificate validity period ends\r\n\t\t */\r\n\t\tthis.notAfter = getParametersValue(parameters, \"notAfter\", Certificate.defaultValues(\"notAfter\"));\r\n\t\t/**\r\n\t\t * @type {RelativeDistinguishedNames}\r\n\t\t * @desc The subject field identifies the entity associated with the public key stored in the subject public key field\r\n\t\t */\r\n\t\tthis.subject = getParametersValue(parameters, \"subject\", Certificate.defaultValues(\"subject\"));\r\n\t\t/**\r\n\t\t * @type {PublicKeyInfo}\r\n\t\t * @desc This field is used to carry the public key and identify the algorithm with which the key is used\r\n\t\t */\r\n\t\tthis.subjectPublicKeyInfo = getParametersValue(parameters, \"subjectPublicKeyInfo\", Certificate.defaultValues(\"subjectPublicKeyInfo\"));\r\n\t\t\r\n\t\tif(\"issuerUniqueID\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {ArrayBuffer}\r\n\t\t\t * @desc The subject and issuer unique identifiers are present in the certificate to handle the possibility of reuse of subject and/or issuer names over time\r\n\t\t\t */\r\n\t\t\tthis.issuerUniqueID = getParametersValue(parameters, \"issuerUniqueID\", Certificate.defaultValues(\"issuerUniqueID\"));\r\n\t\t\r\n\t\tif(\"subjectUniqueID\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {ArrayBuffer}\r\n\t\t\t * @desc The subject and issuer unique identifiers are present in the certificate to handle the possibility of reuse of subject and/or issuer names over time\r\n\t\t\t */\r\n\t\t\tthis.subjectUniqueID = getParametersValue(parameters, \"subjectUniqueID\", Certificate.defaultValues(\"subjectUniqueID\"));\r\n\t\t\r\n\t\tif(\"extensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array}\r\n\t\t\t * @desc If present, this field is a SEQUENCE of one or more certificate extensions\r\n\t\t\t */\r\n\t\t\tthis.extensions = getParametersValue(parameters, \"extensions\", Certificate.defaultValues(\"extensions\"));\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc The signatureAlgorithm field contains the identifier for the cryptographic algorithm used by the CA to sign this certificate\r\n\t\t */\r\n\t\tthis.signatureAlgorithm = getParametersValue(parameters, \"signatureAlgorithm\", Certificate.defaultValues(\"signatureAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {BitString}\r\n\t\t * @desc The signatureValue field contains a digital signature computed upon the ASN.1 DER encoded tbsCertificate\r\n\t\t */\r\n\t\tthis.signatureValue = getParametersValue(parameters, \"signatureValue\", Certificate.defaultValues(\"signatureValue\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"serialNumber\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"signature\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"issuer\":\r\n\t\t\t\treturn new RelativeDistinguishedNames();\r\n\t\t\tcase \"notBefore\":\r\n\t\t\t\treturn new Time();\r\n\t\t\tcase \"notAfter\":\r\n\t\t\t\treturn new Time();\r\n\t\t\tcase \"subject\":\r\n\t\t\t\treturn new RelativeDistinguishedNames();\r\n\t\t\tcase \"subjectPublicKeyInfo\":\r\n\t\t\t\treturn new PublicKeyInfo();\r\n\t\t\tcase \"issuerUniqueID\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"subjectUniqueID\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"signatureAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"signatureValue\":\r\n\t\t\t\treturn new asn1js.BitString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Certificate class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * Certificate  ::=  SEQUENCE  {\r\n\t *    tbsCertificate       TBSCertificate,\r\n\t *    signatureAlgorithm   AlgorithmIdentifier,\r\n\t *    signatureValue       BIT STRING  }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [tbsCertificate]\r\n\t\t * @property {string} [signatureAlgorithm]\r\n\t\t * @property {string} [signatureValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\ttbsCertificate(names.tbsCertificate),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.signatureAlgorithm || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: \"signatureAlgorithm\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.BitString({ name: (names.signatureValue || \"signatureValue\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"tbsCertificate\",\r\n\t\t\t\"tbsCertificate.extensions\",\r\n\t\t\t\"tbsCertificate.version\",\r\n\t\t\t\"tbsCertificate.serialNumber\",\r\n\t\t\t\"tbsCertificate.signature\",\r\n\t\t\t\"tbsCertificate.issuer\",\r\n\t\t\t\"tbsCertificate.notBefore\",\r\n\t\t\t\"tbsCertificate.notAfter\",\r\n\t\t\t\"tbsCertificate.subject\",\r\n\t\t\t\"tbsCertificate.subjectPublicKeyInfo\",\r\n\t\t\t\"tbsCertificate.issuerUniqueID\",\r\n\t\t\t\"tbsCertificate.subjectUniqueID\",\r\n\t\t\t\"signatureAlgorithm\",\r\n\t\t\t\"signatureValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tCertificate.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\ttbsCertificate: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\textensions: {\r\n\t\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\t\textensions: \"tbsCertificate.extensions\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Certificate\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.tbsCertificate.valueBeforeDecode;\r\n\t\t\r\n\t\tif(\"tbsCertificate.version\" in asn1.result)\r\n\t\t\tthis.version = asn1.result[\"tbsCertificate.version\"].valueBlock.valueDec;\r\n\t\tthis.serialNumber = asn1.result[\"tbsCertificate.serialNumber\"];\r\n\t\tthis.signature = new AlgorithmIdentifier({ schema: asn1.result[\"tbsCertificate.signature\"] });\r\n\t\tthis.issuer = new RelativeDistinguishedNames({ schema: asn1.result[\"tbsCertificate.issuer\"] });\r\n\t\tthis.notBefore = new Time({ schema: asn1.result[\"tbsCertificate.notBefore\"] });\r\n\t\tthis.notAfter = new Time({ schema: asn1.result[\"tbsCertificate.notAfter\"] });\r\n\t\tthis.subject = new RelativeDistinguishedNames({ schema: asn1.result[\"tbsCertificate.subject\"] });\r\n\t\tthis.subjectPublicKeyInfo = new PublicKeyInfo({ schema: asn1.result[\"tbsCertificate.subjectPublicKeyInfo\"] });\r\n\t\tif(\"tbsCertificate.issuerUniqueID\" in asn1.result)\r\n\t\t\tthis.issuerUniqueID = asn1.result[\"tbsCertificate.issuerUniqueID\"].valueBlock.valueHex;\r\n\t\tif(\"tbsCertificate.subjectUniqueID\" in asn1.result)\r\n\t\t\tthis.subjectUniqueID = asn1.result[\"tbsCertificate.subjectUniqueID\"].valueBlock.valueHex;\r\n\t\tif(\"tbsCertificate.extensions\" in asn1.result)\r\n\t\t\tthis.extensions = Array.from(asn1.result[\"tbsCertificate.extensions\"], element => new Extension({ schema: element }));\r\n\t\t\r\n\t\tthis.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.signatureAlgorithm });\r\n\t\tthis.signatureValue = asn1.result.signatureValue;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create ASN.1 schema for existing values of TBS part for the certificate\r\n\t */\r\n\tencodeTBS()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif((\"version\" in this) && (this.version !== Certificate.defaultValues(\"version\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Integer({ value: this.version }) // EXPLICIT integer value\r\n\t\t\t\t]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\toutputArray.push(this.serialNumber);\r\n\t\toutputArray.push(this.signature.toSchema());\r\n\t\toutputArray.push(this.issuer.toSchema());\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tthis.notBefore.toSchema(),\r\n\t\t\t\tthis.notAfter.toSchema()\r\n\t\t\t]\r\n\t\t}));\r\n\t\t\r\n\t\toutputArray.push(this.subject.toSchema());\r\n\t\toutputArray.push(this.subjectPublicKeyInfo.toSchema());\r\n\t\t\r\n\t\tif(\"issuerUniqueID\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.issuerUniqueID\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(\"subjectUniqueID\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.subjectUniqueID\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"extensions\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Sequence({\r\n\t\t\t\t\tvalue: Array.from(this.extensions, element => element.toSchema())\r\n\t\t\t\t})]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create and return output sequence\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\tlet tbsSchema = {};\r\n\t\t\r\n\t\t//region Decode stored TBS value\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.length === 0) // No stored certificate TBS part\r\n\t\t\t\treturn Certificate.schema().value[0];\r\n\t\t\t\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t\ttbsSchema = this.encodeTBS();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\ttbsSchema,\r\n\t\t\t\tthis.signatureAlgorithm.toSchema(),\r\n\t\t\t\tthis.signatureValue\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\ttbs: bufferToHexCodes(this.tbs, 0, this.tbs.byteLength),\r\n\t\t\tserialNumber: this.serialNumber.toJSON(),\r\n\t\t\tsignature: this.signature.toJSON(),\r\n\t\t\tissuer: this.issuer.toJSON(),\r\n\t\t\tnotBefore: this.notBefore.toJSON(),\r\n\t\t\tnotAfter: this.notAfter.toJSON(),\r\n\t\t\tsubject: this.subject.toJSON(),\r\n\t\t\tsubjectPublicKeyInfo: this.subjectPublicKeyInfo.toJSON(),\r\n\t\t\tsignatureAlgorithm: this.signatureAlgorithm.toJSON(),\r\n\t\t\tsignatureValue: this.signatureValue.toJSON()\r\n\t\t};\r\n\t\t\r\n\t\tif((\"version\" in this) && (this.version !== Certificate.defaultValues(\"version\")))\r\n\t\t\tobject.version = this.version;\r\n\t\t\r\n\t\tif(\"issuerUniqueID\" in this)\r\n\t\t\tobject.issuerUniqueID = bufferToHexCodes(this.issuerUniqueID, 0, this.issuerUniqueID.byteLength);\r\n\t\t\r\n\t\tif(\"subjectUniqueID\" in this)\r\n\t\t\tobject.subjectUniqueID = bufferToHexCodes(this.subjectUniqueID, 0, this.subjectUniqueID.byteLength);\r\n\t\t\r\n\t\tif(\"extensions\" in this)\r\n\t\t\tobject.extensions = Array.from(this.extensions, element => element.toJSON());\r\n\t\t\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Importing public key for current certificate\r\n\t */\r\n\tgetPublicKey(parameters = null)\r\n\t{\r\n\t\treturn getEngine().subtle.getPublicKey(this.subjectPublicKeyInfo, this.signatureAlgorithm, parameters);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Get hash value for subject public key (default SHA-1)\r\n\t * @param {String} [hashAlgorithm=SHA-1] Hashing algorithm name\r\n\t */\r\n\tgetKeyHash(hashAlgorithm = \"SHA-1\")\r\n\t{\r\n\t\t//region Get a \"crypto\" extension\r\n\t\tconst crypto = getCrypto();\r\n\t\tif(typeof crypto === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn crypto.digest({ name: hashAlgorithm }, new Uint8Array(this.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHex));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Make a signature for current value from TBS section\r\n\t * @param {Object} privateKey Private key for \"subjectPublicKeyInfo\" structure\r\n\t * @param {string} [hashAlgorithm=\"SHA-1\"] Hashing algorithm\r\n\t */\r\n\tsign(privateKey, hashAlgorithm = \"SHA-1\")\r\n\t{\r\n\t\t//region Initial checking\r\n\t\t//region Check private key\r\n\t\tif(typeof privateKey === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Need to provide a private key for signing\");\r\n\t\t//endregion\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\tlet parameters;\r\n\t\t\r\n\t\tconst engine = getEngine();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get a \"default parameters\" for current algorithm and set correct signature algorithm\r\n\t\tsequence = sequence.then(() => engine.subtle.getSignatureParameters(privateKey, hashAlgorithm));\r\n\t\t\r\n\t\tsequence = sequence.then(result =>\r\n\t\t{\r\n\t\t\tparameters = result.parameters;\r\n\t\t\tthis.signature = result.signatureAlgorithm;\r\n\t\t\tthis.signatureAlgorithm = result.signatureAlgorithm;\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create TBS data for signing\r\n\t\tsequence = sequence.then(() =>\r\n\t\t{\r\n\t\t\tthis.tbs = this.encodeTBS().toBER(false);\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Signing TBS data on provided private key\r\n\t\tsequence = sequence.then(() => engine.subtle.signWithPrivateKey(this.tbs, privateKey, parameters));\r\n\t\t\r\n\t\tsequence = sequence.then(result =>\r\n\t\t{\r\n\t\t\tthis.signatureValue = new asn1js.BitString({ valueHex: result });\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\tverify(issuerCertificate = null)\r\n\t{\r\n\t\t//region Global variables\r\n\t\tlet subjectPublicKeyInfo = {};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Set correct \"subjectPublicKeyInfo\" value\r\n\t\tif(issuerCertificate !== null)\r\n\t\t\tsubjectPublicKeyInfo = issuerCertificate.subjectPublicKeyInfo;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(this.issuer.isEqual(this.subject)) // Self-signed certificate\r\n\t\t\t\tsubjectPublicKeyInfo = this.subjectPublicKeyInfo;\r\n\t\t}\r\n\t\t\r\n\t\tif((subjectPublicKeyInfo instanceof PublicKeyInfo) === false)\r\n\t\t\treturn Promise.reject(\"Please provide issuer certificate as a parameter\");\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn getEngine().subtle.verifyWithPublicKey(this.tbs, this.signatureValue, subjectPublicKeyInfo, this.signatureAlgorithm);\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, bufferToHexCodes, clearProps } from \"pvutils\";\r\nimport { getEngine } from \"./common.js\";\r\nimport PublicKeyInfo from \"./PublicKeyInfo.js\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\nimport Attribute from \"./Attribute.js\";\r\n//**************************************************************************************\r\nfunction CertificationRequestInfo(parameters = {})\r\n{\r\n\t//CertificationRequestInfo ::= SEQUENCE {\r\n\t//    version       INTEGER { v1(0) } (v1,...),\r\n\t//    subject       Name,\r\n\t//    subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\r\n\t//    attributes    [0] Attributes{{ CRIAttributes }}\r\n\t//}\r\n\t\r\n\t/**\r\n\t * @type {Object}\r\n\t * @property {string} [blockName]\r\n\t * @property {string} [CertificationRequestInfo]\r\n\t * @property {string} [CertificationRequestInfoVersion]\r\n\t * @property {string} [subject]\r\n\t * @property {string} [CertificationRequestInfoAttributes]\r\n\t * @property {string} [attributes]\r\n\t */\r\n\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\r\n\treturn (new asn1js.Sequence({\r\n\t\tname: (names.CertificationRequestInfo || \"CertificationRequestInfo\"),\r\n\t\tvalue: [\r\n\t\t\tnew asn1js.Integer({ name: (names.CertificationRequestInfoVersion || \"CertificationRequestInfo.version\") }),\r\n\t\t\tRelativeDistinguishedNames.schema(names.subject || {\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"CertificationRequestInfo.subject\"\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tPublicKeyInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"CertificationRequestInfo.subjectPublicKeyInfo\"\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tnew asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\toptional: true, // Because OpenSSL makes wrong \"attributes\" field\r\n\t\t\t\t\t\tname: (names.CertificationRequestInfoAttributes || \"CertificationRequestInfo.attributes\"),\r\n\t\t\t\t\t\tvalue: Attribute.schema(names.attributes || {})\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t})\r\n\t\t]\r\n\t}));\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC2986\r\n */\r\nexport default class CertificationRequest\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Attribute class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @desc tbs\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", CertificationRequest.defaultValues(\"tbs\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", CertificationRequest.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {RelativeDistinguishedNames}\r\n\t\t * @desc subject\r\n\t\t */\r\n\t\tthis.subject = getParametersValue(parameters, \"subject\", CertificationRequest.defaultValues(\"subject\"));\r\n\t\t/**\r\n\t\t * @type {PublicKeyInfo}\r\n\t\t * @desc subjectPublicKeyInfo\r\n\t\t */\r\n\t\tthis.subjectPublicKeyInfo = getParametersValue(parameters, \"subjectPublicKeyInfo\", CertificationRequest.defaultValues(\"subjectPublicKeyInfo\"));\r\n\t\t\r\n\t\tif(\"attributes\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Attribute>}\r\n\t\t\t * @desc attributes\r\n\t\t\t */\r\n\t\t\tthis.attributes = getParametersValue(parameters, \"attributes\", CertificationRequest.defaultValues(\"attributes\"));\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc signatureAlgorithm\r\n\t\t */\r\n\t\tthis.signatureAlgorithm = getParametersValue(parameters, \"signatureAlgorithm\", CertificationRequest.defaultValues(\"signatureAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {BitString}\r\n\t\t * @desc signatureAlgorithm\r\n\t\t */\r\n\t\tthis.signatureValue = getParametersValue(parameters, \"signatureValue\", CertificationRequest.defaultValues(\"signatureValue\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"subject\":\r\n\t\t\t\treturn new RelativeDistinguishedNames();\r\n\t\t\tcase \"subjectPublicKeyInfo\":\r\n\t\t\t\treturn new PublicKeyInfo();\r\n\t\t\tcase \"attributes\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"signatureAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"signatureValue\":\r\n\t\t\t\treturn new asn1js.BitString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CertificationRequest class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * CertificationRequest ::= SEQUENCE {\r\n\t *    certificationRequestInfo CertificationRequestInfo,\r\n\t *    signatureAlgorithm       AlgorithmIdentifier{{ SignatureAlgorithms }},\r\n\t *    signature                BIT STRING\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [certificationRequestInfo]\r\n\t\t * @property {string} [signatureAlgorithm]\r\n\t\t * @property {string} [signatureValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tCertificationRequestInfo(names.certificationRequestInfo || {}),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\tname: (names.signatureAlgorithm || \"signatureAlgorithm\"),\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.ObjectIdentifier(),\r\n\t\t\t\t\t\tnew asn1js.Any({ optional: true })\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.BitString({ name: (names.signatureValue || \"signatureValue\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"CertificationRequestInfo\",\r\n\t\t\t\"CertificationRequestInfo.version\",\r\n\t\t\t\"CertificationRequestInfo.subject\",\r\n\t\t\t\"CertificationRequestInfo.subjectPublicKeyInfo\",\r\n\t\t\t\"CertificationRequestInfo.attributes\",\r\n\t\t\t\"signatureAlgorithm\",\r\n\t\t\t\"signatureValue\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tCertificationRequest.schema()\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CertificationRequest\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.CertificationRequestInfo.valueBeforeDecode;\r\n\t\t\r\n\t\tthis.version = asn1.result[\"CertificationRequestInfo.version\"].valueBlock.valueDec;\r\n\t\tthis.subject = new RelativeDistinguishedNames({ schema: asn1.result[\"CertificationRequestInfo.subject\"] });\r\n\t\tthis.subjectPublicKeyInfo = new PublicKeyInfo({ schema: asn1.result[\"CertificationRequestInfo.subjectPublicKeyInfo\"] });\r\n\t\tif(\"CertificationRequestInfo.attributes\" in asn1.result)\r\n\t\t\tthis.attributes = Array.from(asn1.result[\"CertificationRequestInfo.attributes\"], element => new Attribute({ schema: element }));\r\n\t\t\r\n\t\tthis.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.signatureAlgorithm });\r\n\t\tthis.signatureValue = asn1.result.signatureValue;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Aux function making ASN1js Sequence from current TBS\r\n\t * @returns {Sequence}\r\n\t */\r\n\tencodeTBS()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [\r\n\t\t\tnew asn1js.Integer({ value: this.version }),\r\n\t\t\tthis.subject.toSchema(),\r\n\t\t\tthis.subjectPublicKeyInfo.toSchema()\r\n\t\t];\r\n\t\t\r\n\t\tif(\"attributes\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.attributes, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\t//region Decode stored TBS value\r\n\t\tlet tbsSchema;\r\n\t\t\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.byteLength === 0) // No stored TBS part\r\n\t\t\t\treturn CertificationRequest.schema();\r\n\t\t\t\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t\ttbsSchema = this.encodeTBS();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\ttbsSchema,\r\n\t\t\t\tthis.signatureAlgorithm.toSchema(),\r\n\t\t\t\tthis.signatureValue\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\ttbs: bufferToHexCodes(this.tbs, 0, this.tbs.byteLength),\r\n\t\t\tversion: this.version,\r\n\t\t\tsubject: this.subject.toJSON(),\r\n\t\t\tsubjectPublicKeyInfo: this.subjectPublicKeyInfo.toJSON(),\r\n\t\t\tsignatureAlgorithm: this.signatureAlgorithm.toJSON(),\r\n\t\t\tsignatureValue: this.signatureValue.toJSON()\r\n\t\t};\r\n\t\t\r\n\t\tif(\"attributes\" in this)\r\n\t\t\tobject.attributes = Array.from(this.attributes, element => element.toJSON());\r\n\t\t\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Makes signature for currect certification request\r\n\t * @param {Object} privateKey WebCrypto private key\r\n\t * @param {string} [hashAlgorithm=SHA-1] String representing current hashing algorithm\r\n\t */\r\n\tsign(privateKey, hashAlgorithm = \"SHA-1\")\r\n\t{\r\n\t\t//region Initial checking\r\n\t\t//region Get a private key from function parameter\r\n\t\tif(typeof privateKey === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Need to provide a private key for signing\");\r\n\t\t//endregion\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\tlet parameters;\r\n\t\t\r\n\t\tconst engine = getEngine();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get a \"default parameters\" for current algorithm and set correct signature algorithm\r\n\t\tsequence = sequence.then(() => engine.subtle.getSignatureParameters(privateKey, hashAlgorithm));\r\n\t\t\r\n\t\tsequence = sequence.then(result =>\r\n\t\t{\r\n\t\t\tparameters = result.parameters;\r\n\t\t\tthis.signatureAlgorithm = result.signatureAlgorithm;\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create TBS data for signing\r\n\t\tsequence = sequence.then(() =>\r\n\t\t{\r\n\t\t\tthis.tbs = this.encodeTBS().toBER(false);\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Signing TBS data on provided private key\r\n\t\tsequence = sequence.then(() => engine.subtle.signWithPrivateKey(this.tbs, privateKey, parameters));\r\n\t\t\r\n\t\tsequence = sequence.then(result =>\r\n\t\t{\r\n\t\t\tthis.signatureValue = new asn1js.BitString({ valueHex: result });\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Verify existing certification request signature\r\n\t * @returns {*}\r\n\t */\r\n\tverify()\r\n\t{\r\n\t\treturn getEngine().subtle.verifyWithPublicKey(this.tbs, this.signatureValue, this.subjectPublicKeyInfo, this.signatureAlgorithm);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Importing public key for current certificate request\r\n\t */\r\n\tgetPublicKey(parameters = null)\r\n\t{\r\n\t\treturn getEngine().getPublicKey(this.subjectPublicKeyInfo, this.signatureAlgorithm, parameters);\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import PrivateKeyInfo from \"./PrivateKeyInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5208\r\n */\r\nexport default class KeyBag extends PrivateKeyInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Attribute class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class OtherPrimeInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OtherPrimeInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc prime\r\n\t\t */\r\n\t\tthis.prime = getParametersValue(parameters, \"prime\", OtherPrimeInfo.defaultValues(\"prime\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc exponent\r\n\t\t */\r\n\t\tthis.exponent = getParametersValue(parameters, \"exponent\", OtherPrimeInfo.defaultValues(\"exponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc coefficient\r\n\t\t */\r\n\t\tthis.coefficient = getParametersValue(parameters, \"coefficient\", OtherPrimeInfo.defaultValues(\"coefficient\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"prime\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"coefficient\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OtherPrimeInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * OtherPrimeInfo ::= Sequence {\r\n\t *    prime             Integer,  -- ri\r\n\t *    exponent          Integer,  -- di\r\n\t *    coefficient       Integer   -- ti\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} prime\r\n\t\t * @property {string} exponent\r\n\t\t * @property {string} coefficient\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.coefficient || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"prime\",\r\n\t\t\t\"exponent\",\r\n\t\t\t\"coefficient\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOtherPrimeInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tprime: \"prime\",\r\n\t\t\t\t\texponent: \"exponent\",\r\n\t\t\t\t\tcoefficient: \"coefficient\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OtherPrimeInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.prime = asn1.result.prime.convertFromDER();\r\n\t\tthis.exponent = asn1.result.exponent.convertFromDER();\r\n\t\tthis.coefficient = asn1.result.coefficient.convertFromDER();\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tthis.prime.convertToDER(),\r\n\t\t\t\tthis.exponent.convertToDER(),\r\n\t\t\t\tthis.coefficient.convertToDER()\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tr: toBase64(arrayBufferToString(this.prime.valueBlock.valueHex), true, true),\r\n\t\t\td: toBase64(arrayBufferToString(this.exponent.valueBlock.valueHex), true, true),\r\n\t\t\tt: toBase64(arrayBufferToString(this.coefficient.valueBlock.valueHex), true, true)\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"r\" in json)\r\n\t\t\tthis.prime = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.r, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"r\\\"\");\r\n\r\n\t\tif(\"d\" in json)\r\n\t\t\tthis.exponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.d, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"d\\\"\");\r\n\r\n\t\tif(\"t\" in json)\r\n\t\t\tthis.coefficient = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.t, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"t\\\"\");\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC4055\r\n */\r\nexport default class RSASSAPSSParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSASSAPSSParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithms of hashing (DEFAULT sha1)\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSASSAPSSParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc Algorithm of \"mask generaion function (MGF)\" (DEFAULT mgf1SHA1)\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc Salt length (DEFAULT 20)\r\n\t\t */\r\n\t\tthis.saltLength = getParametersValue(parameters, \"saltLength\", RSASSAPSSParams.defaultValues(\"saltLength\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc (DEFAULT 1)\r\n\t\t */\r\n\t\tthis.trailerField = getParametersValue(parameters, \"trailerField\", RSASSAPSSParams.defaultValues(\"trailerField\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"saltLength\":\r\n\t\t\t\treturn 20;\r\n\t\t\tcase \"trailerField\":\r\n\t\t\t\treturn 1;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSASSAPSSParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSASSA-PSS-params  ::=  Sequence  {\r\n\t *    hashAlgorithm      [0] HashAlgorithm DEFAULT sha1Identifier,\r\n\t *    maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT mgf1SHA1Identifier,\r\n\t *    saltLength         [2] Integer DEFAULT 20,\r\n\t *    trailerField       [3] Integer DEFAULT 1  }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [saltLength]\r\n\t\t * @property {string} [trailerField]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.saltLength || \"\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.trailerField || \"\") })]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"hashAlgorithm\",\r\n\t\t\t\"maskGenAlgorithm\",\r\n\t\t\t\"saltLength\",\r\n\t\t\t\"trailerField\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSASSAPSSParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsaltLength: \"saltLength\",\r\n\t\t\t\t\ttrailerField: \"trailerField\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSASSAPSSParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"saltLength\" in asn1.result)\r\n\t\t\tthis.saltLength = asn1.result.saltLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"trailerField\" in asn1.result)\r\n\t\t\tthis.trailerField = asn1.result.trailerField.valueBlock.valueDec;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.saltLength })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.trailerField })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t\tobject.saltLength = this.saltLength;\r\n\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t\tobject.trailerField = this.trailerField;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64, nearestPowerOf2, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAPublicKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAPublicKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t * @property {Integer} [modulus]\r\n\t * @property {Integer} [publicExponent]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc Modulus part of RSA public key\r\n\t\t */\r\n\t\tthis.modulus = getParametersValue(parameters, \"modulus\", RSAPublicKey.defaultValues(\"modulus\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc Public exponent of RSA public key\r\n\t\t */\r\n\t\tthis.publicExponent = getParametersValue(parameters, \"publicExponent\", RSAPublicKey.defaultValues(\"publicExponent\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"modulus\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"publicExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAPublicKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSAPublicKey ::= Sequence {\r\n\t *    modulus           Integer,  -- n\r\n\t *    publicExponent    Integer   -- e\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} utcTimeName Name for \"utcTimeName\" choice\r\n\t\t * @property {string} generalTimeName Name for \"generalTimeName\" choice\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.modulus || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.publicExponent || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"modulus\",\r\n\t\t\t\"publicExponent\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAPublicKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tmodulus: \"modulus\",\r\n\t\t\t\t\tpublicExponent: \"publicExponent\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAPublicKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.modulus = asn1.result.modulus.convertFromDER(256);\r\n\t\tthis.publicExponent = asn1.result.publicExponent;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tthis.modulus.convertToDER(),\r\n\t\t\t\tthis.publicExponent\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tn: toBase64(arrayBufferToString(this.modulus.valueBlock.valueHex), true, true, true),\r\n\t\t\te: toBase64(arrayBufferToString(this.publicExponent.valueBlock.valueHex), true, true, true)\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"n\" in json)\r\n\t\t{\r\n\t\t\tconst array = stringToArrayBuffer(fromBase64(json.n, true));\r\n\t\t\tthis.modulus = new asn1js.Integer({ valueHex: array.slice(0, Math.pow(2, nearestPowerOf2(array.byteLength))) });\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"n\\\"\");\r\n\r\n\t\tif(\"e\" in json)\r\n\t\t\tthis.publicExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.e, true)).slice(0, 3) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"e\\\"\");\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64, clearProps } from \"pvutils\";\r\nimport ECPublicKey from \"./ECPublicKey.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5915\r\n */\r\nexport default class ECPrivateKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ECPrivateKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", ECPrivateKey.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @desc privateKey\r\n\t\t */\r\n\t\tthis.privateKey = getParametersValue(parameters, \"privateKey\", ECPrivateKey.defaultValues(\"privateKey\"));\r\n\r\n\t\tif(\"namedCurve\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {string}\r\n\t\t\t * @desc namedCurve\r\n\t\t\t */\r\n\t\t\tthis.namedCurve = getParametersValue(parameters, \"namedCurve\", ECPrivateKey.defaultValues(\"namedCurve\"));\r\n\r\n\t\tif(\"publicKey\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {ECPublicKey}\r\n\t\t\t * @desc publicKey\r\n\t\t\t */\r\n\t\t\tthis.publicKey = getParametersValue(parameters, \"publicKey\", ECPrivateKey.defaultValues(\"publicKey\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 1;\r\n\t\t\tcase \"privateKey\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"namedCurve\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"publicKey\":\r\n\t\t\t\treturn new ECPublicKey();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCPrivateKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn (memberValue === ECPrivateKey.defaultValues(memberName));\r\n\t\t\tcase \"privateKey\":\r\n\t\t\t\treturn (memberValue.isEqual(ECPrivateKey.defaultValues(memberName)));\r\n\t\t\tcase \"namedCurve\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"publicKey\":\r\n\t\t\t\treturn ((ECPublicKey.compareWithDefault(\"namedCurve\", memberValue.namedCurve)) &&\r\n\t\t\t\t\t\t(ECPublicKey.compareWithDefault(\"x\", memberValue.x)) &&\r\n\t\t\t\t\t\t(ECPublicKey.compareWithDefault(\"y\", memberValue.y)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCPrivateKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * ECPrivateKey ::= SEQUENCE {\r\n\t * version        INTEGER { ecPrivkeyVer1(1) } (ecPrivkeyVer1),\r\n\t * privateKey     OCTET STRING,\r\n\t * parameters [0] ECParameters {{ NamedCurve }} OPTIONAL,\r\n\t * publicKey  [1] BIT STRING OPTIONAL\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [privateKey]\r\n\t\t * @property {string} [namedCurve]\r\n\t\t * @property {string} [publicKey]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.privateKey || \"\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.namedCurve || \"\") })\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.BitString({ name: (names.publicKey || \"\") })\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"privateKey\",\r\n\t\t\t\"namedCurve\",\r\n\t\t\t\"publicKey\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tECPrivateKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tprivateKey: \"privateKey\",\r\n\t\t\t\t\tnamedCurve: \"namedCurve\",\r\n\t\t\t\t\tpublicKey: \"publicKey\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECPrivateKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.privateKey = asn1.result.privateKey;\r\n\r\n\t\tif(\"namedCurve\" in asn1.result)\r\n\t\t\tthis.namedCurve = asn1.result.namedCurve.valueBlock.toString();\r\n\r\n\t\tif(\"publicKey\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst publicKeyData = { schema: asn1.result.publicKey.valueBlock.valueHex };\r\n\t\t\tif(\"namedCurve\" in this)\r\n\t\t\t\tpublicKeyData.namedCurve = this.namedCurve;\r\n\r\n\t\t\tthis.publicKey = new ECPublicKey(publicKeyData);\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\tconst outputArray = [\r\n\t\t\tnew asn1js.Integer({ value: this.version }),\r\n\t\t\tthis.privateKey\r\n\t\t];\r\n\r\n\t\tif(\"namedCurve\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.namedCurve })\r\n\t\t\t\t]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif(\"publicKey\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.BitString({ valueHex: this.publicKey.toSchema().toBER(false) })\r\n\t\t\t\t]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t});\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tif(((\"namedCurve\" in this) === false) || (ECPrivateKey.compareWithDefault(\"namedCurve\", this.namedCurve)))\r\n\t\t\tthrow new Error(\"Not enough information for making JSON: absent \\\"namedCurve\\\" value\");\r\n\r\n\t\tlet crvName = \"\";\r\n\r\n\t\tswitch(this.namedCurve)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.3.1.7\": // P-256\r\n\t\t\t\tcrvName = \"P-256\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.34\": // P-384\r\n\t\t\t\tcrvName = \"P-384\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.35\": // P-521\r\n\t\t\t\tcrvName = \"P-521\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\r\n\t\tconst privateKeyJSON = {\r\n\t\t\tcrv: crvName,\r\n\t\t\td: toBase64(arrayBufferToString(this.privateKey.valueBlock.valueHex), true, true, false)\r\n\t\t};\r\n\r\n\t\tif(\"publicKey\" in this)\r\n\t\t{\r\n\t\t\tconst publicKeyJSON = this.publicKey.toJSON();\r\n\r\n\t\t\tprivateKeyJSON.x = publicKeyJSON.x;\r\n\t\t\tprivateKeyJSON.y = publicKeyJSON.y;\r\n\t\t}\r\n\r\n\t\treturn privateKeyJSON;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tlet coodinateLength = 0;\r\n\r\n\t\tif(\"crv\" in json)\r\n\t\t{\r\n\t\t\tswitch(json.crv.toUpperCase())\r\n\t\t\t{\r\n\t\t\t\tcase \"P-256\":\r\n\t\t\t\t\tthis.namedCurve = \"1.2.840.10045.3.1.7\";\r\n\t\t\t\t\tcoodinateLength = 32;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"P-384\":\r\n\t\t\t\t\tthis.namedCurve = \"1.3.132.0.34\";\r\n\t\t\t\t\tcoodinateLength = 48;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"P-521\":\r\n\t\t\t\t\tthis.namedCurve = \"1.3.132.0.35\";\r\n\t\t\t\t\tcoodinateLength = 66;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"crv\\\"\");\r\n\r\n\t\tif(\"d\" in json)\r\n\t\t{\r\n\t\t\tconst convertBuffer = stringToArrayBuffer(fromBase64(json.d, true));\r\n\t\t\t\r\n\t\t\tif(convertBuffer.byteLength < coodinateLength)\r\n\t\t\t{\r\n\t\t\t\tconst buffer = new ArrayBuffer(coodinateLength);\r\n\t\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\tconst convertBufferView = new Uint8Array(convertBuffer);\r\n\t\t\t\tview.set(convertBufferView, 1);\r\n\t\t\t\t\r\n\t\t\t\tthis.privateKey = new asn1js.OctetString({ valueHex: buffer });\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tthis.privateKey = new asn1js.OctetString({ valueHex: convertBuffer.slice(0, coodinateLength) });\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"d\\\"\");\r\n\r\n\t\tif((\"x\" in json) && (\"y\" in json))\r\n\t\t\tthis.publicKey = new ECPublicKey({ json });\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64, clearProps } from \"pvutils\";\r\nimport OtherPrimeInfo from \"./OtherPrimeInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAPrivateKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAPrivateKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", RSAPrivateKey.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc modulus\r\n\t\t */\r\n\t\tthis.modulus = getParametersValue(parameters, \"modulus\", RSAPrivateKey.defaultValues(\"modulus\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc publicExponent\r\n\t\t */\r\n\t\tthis.publicExponent = getParametersValue(parameters, \"publicExponent\", RSAPrivateKey.defaultValues(\"publicExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc privateExponent\r\n\t\t */\r\n\t\tthis.privateExponent = getParametersValue(parameters, \"privateExponent\", RSAPrivateKey.defaultValues(\"privateExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc prime1\r\n\t\t */\r\n\t\tthis.prime1 = getParametersValue(parameters, \"prime1\", RSAPrivateKey.defaultValues(\"prime1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc prime2\r\n\t\t */\r\n\t\tthis.prime2 = getParametersValue(parameters, \"prime2\", RSAPrivateKey.defaultValues(\"prime2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc exponent1\r\n\t\t */\r\n\t\tthis.exponent1 = getParametersValue(parameters, \"exponent1\", RSAPrivateKey.defaultValues(\"exponent1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc exponent2\r\n\t\t */\r\n\t\tthis.exponent2 = getParametersValue(parameters, \"exponent2\", RSAPrivateKey.defaultValues(\"exponent2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @desc coefficient\r\n\t\t */\r\n\t\tthis.coefficient = getParametersValue(parameters, \"coefficient\", RSAPrivateKey.defaultValues(\"coefficient\"));\r\n\r\n\t\tif(\"otherPrimeInfos\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<OtherPrimeInfo>}\r\n\t\t\t * @desc otherPrimeInfos\r\n\t\t\t */\r\n\t\t\tthis.otherPrimeInfos = getParametersValue(parameters, \"otherPrimeInfos\", RSAPrivateKey.defaultValues(\"otherPrimeInfos\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"modulus\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"publicExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"privateExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"coefficient\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"otherPrimeInfos\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAPrivateKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * RSAPrivateKey ::= Sequence {\r\n\t *    version           Version,\r\n\t *    modulus           Integer,  -- n\r\n\t *    publicExponent    Integer,  -- e\r\n\t *    privateExponent   Integer,  -- d\r\n\t *    prime1            Integer,  -- p\r\n\t *    prime2            Integer,  -- q\r\n\t *    exponent1         Integer,  -- d mod (p-1)\r\n\t *    exponent2         Integer,  -- d mod (q-1)\r\n\t *    coefficient       Integer,  -- (inverse of q) mod p\r\n\t *    otherPrimeInfos   OtherPrimeInfos OPTIONAL\r\n\t * }\r\n\t *\r\n\t * OtherPrimeInfos ::= Sequence SIZE(1..MAX) OF OtherPrimeInfo\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [modulus]\r\n\t\t * @property {string} [publicExponent]\r\n\t\t * @property {string} [privateExponent]\r\n\t\t * @property {string} [prime1]\r\n\t\t * @property {string} [prime2]\r\n\t\t * @property {string} [exponent1]\r\n\t\t * @property {string} [exponent2]\r\n\t\t * @property {string} [coefficient]\r\n\t\t * @property {string} [otherPrimeInfosName]\r\n\t\t * @property {Object} [otherPrimeInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.modulus || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.publicExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.privateExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.coefficient || \"\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.otherPrimeInfosName || \"\"),\r\n\t\t\t\t\t\t\tvalue: OtherPrimeInfo.schema(names.otherPrimeInfo || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"modulus\",\r\n\t\t\t\"publicExponent\",\r\n\t\t\t\"privateExponent\",\r\n\t\t\t\"prime1\",\r\n\t\t\t\"prime2\",\r\n\t\t\t\"exponent1\",\r\n\t\t\t\"exponent2\",\r\n\t\t\t\"coefficient\",\r\n\t\t\t\"otherPrimeInfos\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAPrivateKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tmodulus: \"modulus\",\r\n\t\t\t\t\tpublicExponent: \"publicExponent\",\r\n\t\t\t\t\tprivateExponent: \"privateExponent\",\r\n\t\t\t\t\tprime1: \"prime1\",\r\n\t\t\t\t\tprime2: \"prime2\",\r\n\t\t\t\t\texponent1: \"exponent1\",\r\n\t\t\t\t\texponent2: \"exponent2\",\r\n\t\t\t\t\tcoefficient: \"coefficient\",\r\n\t\t\t\t\totherPrimeInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"otherPrimeInfos\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAPrivateKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.modulus = asn1.result.modulus.convertFromDER(256);\r\n\t\tthis.publicExponent = asn1.result.publicExponent;\r\n\t\tthis.privateExponent = asn1.result.privateExponent.convertFromDER(256);\r\n\t\tthis.prime1 = asn1.result.prime1.convertFromDER(128);\r\n\t\tthis.prime2 = asn1.result.prime2.convertFromDER(128);\r\n\t\tthis.exponent1 = asn1.result.exponent1.convertFromDER(128);\r\n\t\tthis.exponent2 = asn1.result.exponent2.convertFromDER(128);\r\n\t\tthis.coefficient = asn1.result.coefficient.convertFromDER(128);\r\n\r\n\t\tif(\"otherPrimeInfos\" in asn1.result)\r\n\t\t\tthis.otherPrimeInfos = Array.from(asn1.result.otherPrimeInfos, element => new OtherPrimeInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.modulus.convertToDER());\r\n\t\toutputArray.push(this.publicExponent);\r\n\t\toutputArray.push(this.privateExponent.convertToDER());\r\n\t\toutputArray.push(this.prime1.convertToDER());\r\n\t\toutputArray.push(this.prime2.convertToDER());\r\n\t\toutputArray.push(this.exponent1.convertToDER());\r\n\t\toutputArray.push(this.exponent2.convertToDER());\r\n\t\toutputArray.push(this.coefficient.convertToDER());\r\n\t\t\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.otherPrimeInfos, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst jwk = {\r\n\t\t\tn: toBase64(arrayBufferToString(this.modulus.valueBlock.valueHex), true, true, true),\r\n\t\t\te: toBase64(arrayBufferToString(this.publicExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\td: toBase64(arrayBufferToString(this.privateExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\tp: toBase64(arrayBufferToString(this.prime1.valueBlock.valueHex), true, true, true),\r\n\t\t\tq: toBase64(arrayBufferToString(this.prime2.valueBlock.valueHex), true, true, true),\r\n\t\t\tdp: toBase64(arrayBufferToString(this.exponent1.valueBlock.valueHex), true, true, true),\r\n\t\t\tdq: toBase64(arrayBufferToString(this.exponent2.valueBlock.valueHex), true, true, true),\r\n\t\t\tqi: toBase64(arrayBufferToString(this.coefficient.valueBlock.valueHex), true, true, true)\r\n\t\t};\r\n\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t\tjwk.oth = Array.from(this.otherPrimeInfos, element => element.toJSON());\r\n\r\n\t\treturn jwk;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"n\" in json)\r\n\t\t\tthis.modulus = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.n, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"n\\\"\");\r\n\r\n\t\tif(\"e\" in json)\r\n\t\t\tthis.publicExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.e, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"e\\\"\");\r\n\r\n\t\tif(\"d\" in json)\r\n\t\t\tthis.privateExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.d, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"d\\\"\");\r\n\r\n\t\tif(\"p\" in json)\r\n\t\t\tthis.prime1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.p, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"p\\\"\");\r\n\r\n\t\tif(\"q\" in json)\r\n\t\t\tthis.prime2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.q, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"q\\\"\");\r\n\r\n\t\tif(\"dp\" in json)\r\n\t\t\tthis.exponent1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dp, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dp\\\"\");\r\n\r\n\t\tif(\"dq\" in json)\r\n\t\t\tthis.exponent2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dq, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dq\\\"\");\r\n\r\n\t\tif(\"qi\" in json)\r\n\t\t\tthis.coefficient = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.qi, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"qi\\\"\");\r\n\r\n\t\tif(\"oth\" in json)\r\n\t\t\tthis.otherPrimeInfos = Array.from(json.oth, element => new OtherPrimeInfo({ json: element }));\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC2898\r\n */\r\nexport default class PBES2Params\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PBES2Params class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc keyDerivationFunc\r\n\t\t */\r\n\t\tthis.keyDerivationFunc = getParametersValue(parameters, \"keyDerivationFunc\", PBES2Params.defaultValues(\"keyDerivationFunc\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @desc encryptionScheme\r\n\t\t */\r\n\t\tthis.encryptionScheme = getParametersValue(parameters, \"encryptionScheme\", PBES2Params.defaultValues(\"encryptionScheme\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyDerivationFunc\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"encryptionScheme\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PBES2Params class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * PBES2-params ::= SEQUENCE {\r\n\t *    keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\r\n\t *    encryptionScheme AlgorithmIdentifier {{PBES2-Encs}} }\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyDerivationFunc]\r\n\t\t * @property {string} [encryptionScheme]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyDerivationFunc || {}),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.encryptionScheme || {})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"keyDerivationFunc\",\r\n\t\t\t\"encryptionScheme\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPBES2Params.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyDerivationFunc: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyDerivationFunc\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tencryptionScheme: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"encryptionScheme\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PBES2Params\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.keyDerivationFunc = new AlgorithmIdentifier({ schema: asn1.result.keyDerivationFunc });\r\n\t\tthis.encryptionScheme = new AlgorithmIdentifier({ schema: asn1.result.encryptionScheme });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tthis.keyDerivationFunc.toSchema(),\r\n\t\t\t\tthis.encryptionScheme.toSchema()\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tkeyDerivationFunc: this.keyDerivationFunc.toJSON(),\r\n\t\t\tencryptionScheme: this.encryptionScheme.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, stringToArrayBuffer, arrayBufferToString, utilConcatBuf } from \"pvutils\";\r\nimport { createCMSECDSASignature, createECDSASignatureFromCMS } from \"./common.js\";\r\nimport PublicKeyInfo from \"./PublicKeyInfo.js\";\r\nimport PrivateKeyInfo from \"./PrivateKeyInfo.js\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\nimport EncryptedContentInfo from \"./EncryptedContentInfo.js\";\r\nimport RSASSAPSSParams from \"./RSASSAPSSParams.js\";\r\nimport PBKDF2Params from \"./PBKDF2Params.js\";\r\nimport PBES2Params from \"./PBES2Params.js\";\r\n//**************************************************************************************\r\n/**\r\n * Making MAC key using algorithm described in B.2 of PKCS#12 standard.\r\n */\r\nfunction makePKCS12B2Key(cryptoEngine, hashAlgorithm, keyLength, password, salt, iterationCount)\r\n{\r\n\t//region Initial variables\r\n\tlet u;\r\n\tlet v;\r\n\t\r\n\tconst result = [];\r\n\t//endregion\r\n\t\r\n\t//region Get \"u\" and \"v\" values\r\n\tswitch(hashAlgorithm.toUpperCase())\r\n\t{\r\n\t\tcase \"SHA-1\":\r\n\t\t\tu = 20; // 160\r\n\t\t\tv = 64; // 512\r\n\t\t\tbreak;\r\n\t\tcase \"SHA-256\":\r\n\t\t\tu = 32; // 256\r\n\t\t\tv = 64; // 512\r\n\t\t\tbreak;\r\n\t\tcase \"SHA-384\":\r\n\t\t\tu = 48; // 384\r\n\t\t\tv = 128; // 1024\r\n\t\t\tbreak;\r\n\t\tcase \"SHA-512\":\r\n\t\t\tu = 64; // 512\r\n\t\t\tv = 128; // 1024\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"Unsupported hashing algorithm\");\r\n\t}\r\n\t//endregion\r\n\t\r\n\t//region Main algorithm making key\r\n\t//region Transform password to UTF-8 like string\r\n\tconst passwordViewInitial = new Uint8Array(password);\r\n\t\r\n\tconst passwordTransformed = new ArrayBuffer((password.byteLength * 2) + 2);\r\n\tconst passwordTransformedView = new Uint8Array(passwordTransformed);\r\n\t\r\n\tfor(let i = 0; i < passwordViewInitial.length; i++)\r\n\t{\r\n\t\tpasswordTransformedView[i * 2] = 0x00;\r\n\t\tpasswordTransformedView[i * 2 + 1] = passwordViewInitial[i];\r\n\t}\r\n\t\r\n\tpasswordTransformedView[passwordTransformedView.length - 2] = 0x00;\r\n\tpasswordTransformedView[passwordTransformedView.length - 1] = 0x00;\r\n\t\r\n\tpassword = passwordTransformed.slice(0);\r\n\t//endregion\r\n\t\r\n\t//region Construct a string D (the \"diversifier\") by concatenating v/8 copies of ID\r\n\tconst D = new ArrayBuffer(v);\r\n\tconst dView = new Uint8Array(D);\r\n\t\r\n\tfor(let i = 0; i < D.byteLength; i++)\r\n\t\tdView[i] = 3; // The ID value equal to \"3\" for MACing (see B.3 of standard)\r\n\t//endregion\r\n\t\r\n\t//region Concatenate copies of the salt together to create a string S of length v * ceil(s / v) bytes (the final copy of the salt may be trunacted to create S)\r\n\tconst saltLength = salt.byteLength;\r\n\t\r\n\tconst sLen = v * Math.ceil(saltLength / v);\r\n\tconst S = new ArrayBuffer(sLen);\r\n\tconst sView = new Uint8Array(S);\r\n\t\r\n\tconst saltView = new Uint8Array(salt);\r\n\t\r\n\tfor(let i = 0; i < sLen; i++)\r\n\t\tsView[i] = saltView[i % saltLength];\r\n\t//endregion\r\n\t\r\n\t//region Concatenate copies of the password together to create a string P of length v * ceil(p / v) bytes (the final copy of the password may be truncated to create P)\r\n\tconst passwordLength = password.byteLength;\r\n\t\r\n\tconst pLen = v * Math.ceil(passwordLength / v);\r\n\tconst P = new ArrayBuffer(pLen);\r\n\tconst pView = new Uint8Array(P);\r\n\t\r\n\tconst passwordView = new Uint8Array(password);\r\n\t\r\n\tfor(let i = 0; i < pLen; i++)\r\n\t\tpView[i] = passwordView[i % passwordLength];\r\n\t//endregion\r\n\t\r\n\t//region Set I=S||P to be the concatenation of S and P\r\n\tconst sPlusPLength = S.byteLength + P.byteLength;\r\n\t\r\n\tlet I = new ArrayBuffer(sPlusPLength);\r\n\tlet iView = new Uint8Array(I);\r\n\t\r\n\tiView.set(sView);\r\n\tiView.set(pView, sView.length);\r\n\t//endregion\r\n\t\r\n\t//region Set c=ceil(n / u)\r\n\tconst c = Math.ceil((keyLength >> 3) / u);\r\n\t//endregion\r\n\t\r\n\t//region Initial variables\r\n\tlet internalSequence = Promise.resolve(I);\r\n\t//endregion\r\n\t\r\n\t//region For i=1, 2, ..., c, do the following:\r\n\tfor(let i = 0; i <= c; i++)\r\n\t{\r\n\t\tinternalSequence = internalSequence.then(_I =>\r\n\t\t{\r\n\t\t\t//region Create contecanetion of D and I\r\n\t\t\tconst dAndI = new ArrayBuffer(D.byteLength + _I.byteLength);\r\n\t\t\tconst dAndIView = new Uint8Array(dAndI);\r\n\t\t\t\r\n\t\t\tdAndIView.set(dView);\r\n\t\t\tdAndIView.set(iView, dView.length);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\treturn dAndI;\r\n\t\t});\r\n\t\t\r\n\t\t//region Make \"iterationCount\" rounds of hashing\r\n\t\tfor(let j = 0; j < iterationCount; j++)\r\n\t\t\tinternalSequence = internalSequence.then(roundBuffer => cryptoEngine.digest({ name: hashAlgorithm }, new Uint8Array(roundBuffer)));\r\n\t\t//endregion\r\n\t\t\r\n\t\tinternalSequence = internalSequence.then(roundBuffer =>\r\n\t\t{\r\n\t\t\t//region Concatenate copies of Ai to create a string B of length v bits (the final copy of Ai may be truncated to create B)\r\n\t\t\tconst B = new ArrayBuffer(v);\r\n\t\t\tconst bView = new Uint8Array(B);\r\n\t\t\t\r\n\t\t\tfor(let j = 0; j < B.byteLength; j++)\r\n\t\t\t\tbView[j] = roundBuffer[j % roundBuffer.length];\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Make new I value\r\n\t\t\tconst k = Math.ceil(saltLength / v) + Math.ceil(passwordLength / v);\r\n\t\t\tconst iRound = [];\r\n\t\t\t\r\n\t\t\tlet sliceStart = 0;\r\n\t\t\tlet sliceLength = v;\r\n\t\t\t\r\n\t\t\tfor(let j = 0; j < k; j++)\r\n\t\t\t{\r\n\t\t\t\tconst chunk = Array.from(new Uint8Array(I.slice(sliceStart, sliceStart + sliceLength)));\r\n\t\t\t\tsliceStart += v;\r\n\t\t\t\tif((sliceStart + v) > I.byteLength)\r\n\t\t\t\t\tsliceLength = I.byteLength - sliceStart;\r\n\t\t\t\t\r\n\t\t\t\tlet x = 0x1ff;\r\n\t\t\t\t\r\n\t\t\t\tfor(let l = (B.byteLength - 1); l >= 0; l--)\r\n\t\t\t\t{\r\n\t\t\t\t\tx >>= 8;\r\n\t\t\t\t\tx += bView[l] + chunk[l];\r\n\t\t\t\t\tchunk[l] = (x & 0xff);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tiRound.push(...chunk);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tI = new ArrayBuffer(iRound.length);\r\n\t\t\tiView = new Uint8Array(I);\r\n\t\t\t\r\n\t\t\tiView.set(iRound);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\tresult.push(...(new Uint8Array(roundBuffer)));\r\n\t\t\t\r\n\t\t\treturn I;\r\n\t\t});\r\n\t}\r\n\t//endregion\r\n\t\r\n\t//region Initialize final key\r\n\tinternalSequence = internalSequence.then(() =>\r\n\t{\r\n\t\tconst resultBuffer = new ArrayBuffer(keyLength >> 3);\r\n\t\tconst resultView = new Uint8Array(resultBuffer);\r\n\t\t\r\n\t\tresultView.set((new Uint8Array(result)).slice(0, keyLength >> 3));\r\n\t\t\r\n\t\treturn resultBuffer;\r\n\t});\r\n\t//endregion\r\n\t//endregion\r\n\t\r\n\treturn internalSequence;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Default cryptographic engine for Web Cryptography API\r\n */\r\nexport default class CryptoEngine\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CryptoEngine class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc Usually here we are expecting \"window.crypto\" or an equivalent from custom \"crypto engine\"\r\n\t\t */\r\n\t\tthis.crypto = getParametersValue(parameters, \"crypto\", {});\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @desc Usually here we are expecting \"window.crypto.subtle\" or an equivalent from custom \"crypto engine\"\r\n\t\t */\r\n\t\tthis.subtle = getParametersValue(parameters, \"subtle\", {});\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @desc Name of the \"crypto engine\"\r\n\t\t */\r\n\t\tthis.name = getParametersValue(parameters, \"name\", \"\");\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Import WebCrypto keys from different formats\r\n\t * @param {string} format\r\n\t * @param {ArrayBuffer|Uint8Array} keyData\r\n\t * @param {Object} algorithm\r\n\t * @param {boolean} extractable\r\n\t * @param {Array} keyUsages\r\n\t * @returns {Promise}\r\n\t */\r\n\timportKey(format, keyData, algorithm, extractable, keyUsages)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet jwk = {};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"keyData\" type if needed\r\n\t\tif(keyData instanceof Uint8Array)\r\n\t\t\tkeyData = keyData.buffer;\r\n\t\t//endregion\r\n\t\t\r\n\t\tswitch(format.toLowerCase())\r\n\t\t{\r\n\t\t\tcase \"raw\":\r\n\t\t\t\treturn this.subtle.importKey(\"raw\", keyData, algorithm, extractable, keyUsages);\r\n\t\t\tcase \"spki\":\r\n\t\t\t\t{\r\n\t\t\t\t\tconst asn1 = asn1js.fromBER(keyData);\r\n\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\treturn Promise.reject(\"Incorrect keyData\");\r\n\r\n\t\t\t\t\tconst publicKeyInfo = new PublicKeyInfo();\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpublicKeyInfo.fromSchema(asn1.result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn Promise.reject(\"Incorrect keyData\");\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t// noinspection FallThroughInSwitchStatementJS\r\n\t\t\t\t\tswitch(algorithm.name.toUpperCase())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase \"RSA-PSS\":\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//region Get information about used hash function\r\n\t\t\t\t\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\t\t\t\t\tjwk.alg = \"PS1\";\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\t\t\t\t\tjwk.alg = \"PS256\";\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\t\t\t\t\tjwk.alg = \"PS384\";\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\t\t\t\t\tjwk.alg = \"PS512\";\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect hash algorithm: ${algorithm.hash.name.toUpperCase()}`);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// break omitted\r\n\t\t\t\t\t\tcase \"RSASSA-PKCS1-V1_5\":\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkeyUsages = [\"verify\"]; // Override existing keyUsages value since the key is a public key\r\n\r\n\t\t\t\t\t\t\t\tjwk.kty = \"RSA\";\r\n\t\t\t\t\t\t\t\tjwk.ext = extractable;\r\n\t\t\t\t\t\t\t\tjwk.key_ops = keyUsages;\r\n\r\n\t\t\t\t\t\t\t\tif(publicKeyInfo.algorithm.algorithmId !== \"1.2.840.113549.1.1.1\")\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect public key algorithm: ${publicKeyInfo.algorithm.algorithmId}`);\r\n\r\n\t\t\t\t\t\t\t\t//region Get information about used hash function\r\n\t\t\t\t\t\t\t\tif((\"alg\" in jwk) === false)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RS1\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RS256\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RS384\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RS512\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect hash algorithm: ${algorithm.hash.name.toUpperCase()}`);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\t\t//region Create RSA Public Key elements\r\n\t\t\t\t\t\t\t\tconst publicKeyJSON = publicKeyInfo.toJSON();\r\n\r\n\t\t\t\t\t\t\t\tfor(const key of Object.keys(publicKeyJSON))\r\n\t\t\t\t\t\t\t\t\tjwk[key] = publicKeyJSON[key];\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"ECDSA\":\r\n\t\t\t\t\t\t\tkeyUsages = [\"verify\"]; // Override existing keyUsages value since the key is a public key\r\n\t\t\t\t\t\t\t// break omitted\r\n\t\t\t\t\t\tcase \"ECDH\":\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\t\t\tjwk = {\r\n\t\t\t\t\t\t\t\t\tkty: \"EC\",\r\n\t\t\t\t\t\t\t\t\text: extractable,\r\n\t\t\t\t\t\t\t\t\tkey_ops: keyUsages\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\t\t//region Get information about algorithm\r\n\t\t\t\t\t\t\t\tif(publicKeyInfo.algorithm.algorithmId !== \"1.2.840.10045.2.1\")\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect public key algorithm: ${publicKeyInfo.algorithm.algorithmId}`);\r\n\t\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\t\t//region Create ECDSA Public Key elements\r\n\t\t\t\t\t\t\t\tconst publicKeyJSON = publicKeyInfo.toJSON();\r\n\r\n\t\t\t\t\t\t\t\tfor(const key of Object.keys(publicKeyJSON))\r\n\t\t\t\t\t\t\t\t\tjwk[key] = publicKeyJSON[key];\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"RSA-OAEP\":\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tjwk.kty = \"RSA\";\r\n\t\t\t\t\t\t\t\tjwk.ext = extractable;\r\n\t\t\t\t\t\t\t\tjwk.key_ops = keyUsages;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(this.name.toLowerCase() === \"safari\")\r\n\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP\";\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP-256\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP-384\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP-512\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect hash algorithm: ${algorithm.hash.name.toUpperCase()}`);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//region Create ECDSA Public Key elements\r\n\t\t\t\t\t\t\t\tconst publicKeyJSON = publicKeyInfo.toJSON();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor(const key of Object.keys(publicKeyJSON))\r\n\t\t\t\t\t\t\t\t\tjwk[key] = publicKeyJSON[key];\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\treturn Promise.reject(`Incorrect algorithm name: ${algorithm.name.toUpperCase()}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pkcs8\":\r\n\t\t\t\t{\r\n\t\t\t\t\tconst privateKeyInfo = new PrivateKeyInfo();\r\n\r\n\t\t\t\t\t//region Parse \"PrivateKeyInfo\" object\r\n\t\t\t\t\tconst asn1 = asn1js.fromBER(keyData);\r\n\t\t\t\t\tif(asn1.offset === (-1))\r\n\t\t\t\t\t\treturn Promise.reject(\"Incorrect keyData\");\r\n\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprivateKeyInfo.fromSchema(asn1.result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn Promise.reject(\"Incorrect keyData\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif((\"parsedKey\" in privateKeyInfo) === false)\r\n\t\t\t\t\t\treturn Promise.reject(\"Incorrect keyData\");\r\n\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t// noinspection FallThroughInSwitchStatementJS\r\n\t\t\t\t\t// noinspection FallThroughInSwitchStatementJS\r\n\t\t\t\t\tswitch(algorithm.name.toUpperCase())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase \"RSA-PSS\":\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//region Get information about used hash function\r\n\t\t\t\t\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\t\t\t\t\tjwk.alg = \"PS1\";\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\t\t\t\t\tjwk.alg = \"PS256\";\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\t\t\t\t\tjwk.alg = \"PS384\";\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\t\t\t\t\tjwk.alg = \"PS512\";\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect hash algorithm: ${algorithm.hash.name.toUpperCase()}`);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// break omitted\r\n\t\t\t\t\t\tcase \"RSASSA-PKCS1-V1_5\":\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkeyUsages = [\"sign\"]; // Override existing keyUsages value since the key is a private key\r\n\r\n\t\t\t\t\t\t\t\tjwk.kty = \"RSA\";\r\n\t\t\t\t\t\t\t\tjwk.ext = extractable;\r\n\t\t\t\t\t\t\t\tjwk.key_ops = keyUsages;\r\n\r\n\t\t\t\t\t\t\t\t//region Get information about used hash function\r\n\t\t\t\t\t\t\t\tif(privateKeyInfo.privateKeyAlgorithm.algorithmId !== \"1.2.840.113549.1.1.1\")\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect private key algorithm: ${privateKeyInfo.privateKeyAlgorithm.algorithmId}`);\r\n\t\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\t\t//region Get information about used hash function\r\n\t\t\t\t\t\t\t\tif((\"alg\" in jwk) === false)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RS1\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RS256\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RS384\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RS512\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect hash algorithm: ${algorithm.hash.name.toUpperCase()}`);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\t\t//region Create RSA Private Key elements\r\n\t\t\t\t\t\t\t\tconst privateKeyJSON = privateKeyInfo.toJSON();\r\n\r\n\t\t\t\t\t\t\t\tfor(const key of Object.keys(privateKeyJSON))\r\n\t\t\t\t\t\t\t\t\tjwk[key] = privateKeyJSON[key];\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"ECDSA\":\r\n\t\t\t\t\t\t\tkeyUsages = [\"sign\"]; // Override existing keyUsages value since the key is a private key\r\n\t\t\t\t\t\t\t// break omitted\r\n\t\t\t\t\t\tcase \"ECDH\":\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//region Initial variables\r\n\t\t\t\t\t\t\t\tjwk = {\r\n\t\t\t\t\t\t\t\t\tkty: \"EC\",\r\n\t\t\t\t\t\t\t\t\text: extractable,\r\n\t\t\t\t\t\t\t\t\tkey_ops: keyUsages\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\t\t//region Get information about used hash function\r\n\t\t\t\t\t\t\t\tif(privateKeyInfo.privateKeyAlgorithm.algorithmId !== \"1.2.840.10045.2.1\")\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect algorithm: ${privateKeyInfo.privateKeyAlgorithm.algorithmId}`);\r\n\t\t\t\t\t\t\t\t//endregion\r\n\r\n\t\t\t\t\t\t\t\t//region Create ECDSA Private Key elements\r\n\t\t\t\t\t\t\t\tconst privateKeyJSON = privateKeyInfo.toJSON();\r\n\r\n\t\t\t\t\t\t\t\tfor(const key of Object.keys(privateKeyJSON))\r\n\t\t\t\t\t\t\t\t\tjwk[key] = privateKeyJSON[key];\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"RSA-OAEP\":\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tjwk.kty = \"RSA\";\r\n\t\t\t\t\t\t\t\tjwk.ext = extractable;\r\n\t\t\t\t\t\t\t\tjwk.key_ops = keyUsages;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//region Get information about used hash function\r\n\t\t\t\t\t\t\t\tif(this.name.toLowerCase() === \"safari\")\r\n\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP\";\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP-256\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP-384\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\t\t\t\t\t\tjwk.alg = \"RSA-OAEP-512\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(`Incorrect hash algorithm: ${algorithm.hash.name.toUpperCase()}`);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//region Create RSA Private Key elements\r\n\t\t\t\t\t\t\t\tconst privateKeyJSON = privateKeyInfo.toJSON();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor(const key of Object.keys(privateKeyJSON))\r\n\t\t\t\t\t\t\t\t\tjwk[key] = privateKeyJSON[key];\r\n\t\t\t\t\t\t\t\t//endregion\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\treturn Promise.reject(`Incorrect algorithm name: ${algorithm.name.toUpperCase()}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"jwk\":\r\n\t\t\t\tjwk = keyData;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject(`Incorrect format: ${format}`);\r\n\t\t}\r\n\t\t\r\n\t\t//region Special case for Safari browser (since its acting not as WebCrypto standard describes)\r\n\t\tif(this.name.toLowerCase() === \"safari\")\r\n\t\t{\r\n\t\t\t// Try to use both ways - import using ArrayBuffer and pure JWK (for Safari Technology Preview)\r\n\t\t\treturn Promise.resolve().then(() => this.subtle.importKey(\"jwk\", stringToArrayBuffer(JSON.stringify(jwk)), algorithm, extractable, keyUsages))\r\n\t\t\t\t.then(result => result, () => this.subtle.importKey(\"jwk\", jwk, algorithm, extractable, keyUsages));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn this.subtle.importKey(\"jwk\", jwk, algorithm, extractable, keyUsages);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Export WebCrypto keys to different formats\r\n\t * @param {string} format\r\n\t * @param {Object} key\r\n\t * @returns {Promise}\r\n\t */\r\n\texportKey(format, key)\r\n\t{\r\n\t\tlet sequence = this.subtle.exportKey(\"jwk\", key);\r\n\t\t\r\n\t\t//region Currently Safari returns ArrayBuffer as JWK thus we need an additional transformation\r\n\t\tif(this.name.toLowerCase() === \"safari\")\r\n\t\t{\r\n\t\t\tsequence = sequence.then(result =>\r\n\t\t\t{\r\n\t\t\t\t// Some additional checks for Safari Technology Preview\r\n\t\t\t\tif(result instanceof ArrayBuffer)\r\n\t\t\t\t\treturn JSON.parse(arrayBufferToString(result));\r\n\t\t\t\t\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\tswitch(format.toLowerCase())\r\n\t\t{\r\n\t\t\tcase \"raw\":\r\n\t\t\t\treturn this.subtle.exportKey(\"raw\", key);\r\n\t\t\tcase \"spki\":\r\n\t\t\t\tsequence = sequence.then(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tconst publicKeyInfo = new PublicKeyInfo();\r\n\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpublicKeyInfo.fromJSON(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn Promise.reject(\"Incorrect key data\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn publicKeyInfo.toSchema().toBER(false);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pkcs8\":\r\n\t\t\t\tsequence = sequence.then(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tconst privateKeyInfo = new PrivateKeyInfo();\r\n\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprivateKeyInfo.fromJSON(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn Promise.reject(\"Incorrect key data\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn privateKeyInfo.toSchema().toBER(false);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"jwk\":\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject(`Incorrect format: ${format}`);\r\n\t\t}\r\n\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert WebCrypto keys between different export formats\r\n\t * @param {string} inputFormat\r\n\t * @param {string} outputFormat\r\n\t * @param {ArrayBuffer|Object} keyData\r\n\t * @param {Object} algorithm\r\n\t * @param {boolean} extractable\r\n\t * @param {Array} keyUsages\r\n\t * @returns {Promise}\r\n\t */\r\n\tconvert(inputFormat, outputFormat, keyData, algorithm, extractable, keyUsages)\r\n\t{\r\n\t\tswitch(inputFormat.toLowerCase())\r\n\t\t{\r\n\t\t\tcase \"raw\":\r\n\t\t\t\tswitch(outputFormat.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"raw\":\r\n\t\t\t\t\t\treturn Promise.resolve(keyData);\r\n\t\t\t\t\tcase \"spki\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"raw\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"spki\", result));\r\n\t\t\t\t\tcase \"pkcs8\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"raw\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"pkcs8\", result));\r\n\t\t\t\t\tcase \"jwk\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"raw\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"jwk\", result));\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn Promise.reject(`Incorrect outputFormat: ${outputFormat}`);\r\n\t\t\t\t}\r\n\t\t\tcase \"spki\":\r\n\t\t\t\tswitch(outputFormat.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"raw\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"spki\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"raw\", result));\r\n\t\t\t\t\tcase \"spki\":\r\n\t\t\t\t\t\treturn Promise.resolve(keyData);\r\n\t\t\t\t\tcase \"pkcs8\":\r\n\t\t\t\t\t\treturn Promise.reject(\"Impossible to convert between SPKI/PKCS8\");\r\n\t\t\t\t\tcase \"jwk\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"spki\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"jwk\", result));\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn Promise.reject(`Incorrect outputFormat: ${outputFormat}`);\r\n\t\t\t\t}\r\n\t\t\tcase \"pkcs8\":\r\n\t\t\t\tswitch(outputFormat.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"raw\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"pkcs8\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"raw\", result));\r\n\t\t\t\t\tcase \"spki\":\r\n\t\t\t\t\t\treturn Promise.reject(\"Impossible to convert between SPKI/PKCS8\");\r\n\t\t\t\t\tcase \"pkcs8\":\r\n\t\t\t\t\t\treturn Promise.resolve(keyData);\r\n\t\t\t\t\tcase \"jwk\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"pkcs8\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"jwk\", result));\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn Promise.reject(`Incorrect outputFormat: ${outputFormat}`);\r\n\t\t\t\t}\r\n\t\t\tcase \"jwk\":\r\n\t\t\t\tswitch(outputFormat.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"raw\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"jwk\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"raw\", result));\r\n\t\t\t\t\tcase \"spki\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"jwk\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"spki\", result));\r\n\t\t\t\t\tcase \"pkcs8\":\r\n\t\t\t\t\t\treturn Promise.resolve()\r\n\t\t\t\t\t\t\t.then(() => this.importKey(\"jwk\", keyData, algorithm, extractable, keyUsages))\r\n\t\t\t\t\t\t\t.then(result => this.exportKey(\"pkcs8\", result));\r\n\t\t\t\t\tcase \"jwk\":\r\n\t\t\t\t\t\treturn Promise.resolve(keyData);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn Promise.reject(`Incorrect outputFormat: ${outputFormat}`);\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject(`Incorrect inputFormat: ${inputFormat}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"encrypt\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tencrypt(...args)\r\n\t{\r\n\t\treturn this.subtle.encrypt(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"decrypt\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tdecrypt(...args)\r\n\t{\r\n\t\treturn this.subtle.decrypt(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"sign\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tsign(...args)\r\n\t{\r\n\t\treturn this.subtle.sign(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"verify\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tverify(...args)\r\n\t{\r\n\t\treturn this.subtle.verify(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"digest\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tdigest(...args)\r\n\t{\r\n\t\treturn this.subtle.digest(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"generateKey\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tgenerateKey(...args)\r\n\t{\r\n\t\treturn this.subtle.generateKey(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"deriveKey\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tderiveKey(...args)\r\n\t{\r\n\t\treturn this.subtle.deriveKey(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"deriveBits\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tderiveBits(...args)\r\n\t{\r\n\t\treturn this.subtle.deriveBits(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"wrapKey\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\twrapKey(...args)\r\n\t{\r\n\t\treturn this.subtle.wrapKey(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Wrapper for standard function \"unwrapKey\"\r\n\t * @param args\r\n\t * @returns {Promise}\r\n\t */\r\n\tunwrapKey(...args)\r\n\t{\r\n\t\treturn this.subtle.unwrapKey(...args);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize input Uint8Array by random values (with help from current \"crypto engine\")\r\n\t * @param {!Uint8Array} view\r\n\t * @returns {*}\r\n\t */\r\n\tgetRandomValues(view)\r\n\t{\r\n\t\tif((\"getRandomValues\" in this.crypto) === false)\r\n\t\t\tthrow new Error(\"No support for getRandomValues\");\r\n\t\t\r\n\t\treturn this.crypto.getRandomValues(view);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Get WebCrypto algorithm by wel-known OID\r\n\t * @param {string} oid well-known OID to search for\r\n\t * @returns {Object}\r\n\t */\r\n\tgetAlgorithmByOID(oid)\r\n\t{\r\n\t\tswitch(oid)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.113549.1.1.1\":\r\n\t\t\tcase \"1.2.840.113549.1.1.5\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"RSASSA-PKCS1-v1_5\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-1\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.1.1.11\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"RSASSA-PKCS1-v1_5\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.1.1.12\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"RSASSA-PKCS1-v1_5\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-384\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.1.1.13\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"RSASSA-PKCS1-v1_5\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-512\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.1.1.10\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"RSA-PSS\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.1.1.7\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"RSA-OAEP\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.10045.2.1\":\r\n\t\t\tcase \"1.2.840.10045.4.1\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"ECDSA\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-1\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.10045.4.3.2\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"ECDSA\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.10045.4.3.3\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"ECDSA\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-384\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.10045.4.3.4\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"ECDSA\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-512\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.3.133.16.840.63.0.2\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"ECDH\",\r\n\t\t\t\t\tkdf: \"SHA-1\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.3.132.1.11.1\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"ECDH\",\r\n\t\t\t\t\tkdf: \"SHA-256\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.3.132.1.11.2\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"ECDH\",\r\n\t\t\t\t\tkdf: \"SHA-384\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.3.132.1.11.3\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"ECDH\",\r\n\t\t\t\t\tkdf: \"SHA-512\"\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.2\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-CBC\",\r\n\t\t\t\t\tlength: 128\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.22\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-CBC\",\r\n\t\t\t\t\tlength: 192\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.42\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-CBC\",\r\n\t\t\t\t\tlength: 256\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.6\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-GCM\",\r\n\t\t\t\t\tlength: 128\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.26\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-GCM\",\r\n\t\t\t\t\tlength: 192\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.46\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-GCM\",\r\n\t\t\t\t\tlength: 256\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.4\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-CFB\",\r\n\t\t\t\t\tlength: 128\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.24\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-CFB\",\r\n\t\t\t\t\tlength: 192\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.44\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-CFB\",\r\n\t\t\t\t\tlength: 256\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.5\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-KW\",\r\n\t\t\t\t\tlength: 128\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.25\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-KW\",\r\n\t\t\t\t\tlength: 192\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.1.45\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"AES-KW\",\r\n\t\t\t\t\tlength: 256\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.2.7\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"HMAC\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-1\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.2.9\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"HMAC\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.2.10\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"HMAC\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-384\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.2.11\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"HMAC\",\r\n\t\t\t\t\thash: {\r\n\t\t\t\t\t\tname: \"SHA-512\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.1.9.16.3.5\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"DH\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.3.14.3.2.26\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"SHA-1\"\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.2.1\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.2.2\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"SHA-384\"\r\n\t\t\t\t};\r\n\t\t\tcase \"2.16.840.1.101.3.4.2.3\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"SHA-512\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.2.840.113549.1.5.12\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"PBKDF2\"\r\n\t\t\t\t};\r\n\t\t\t//region Special case - OIDs for ECC curves\r\n\t\t\tcase \"1.2.840.10045.3.1.7\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"P-256\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.3.132.0.34\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"P-384\"\r\n\t\t\t\t};\r\n\t\t\tcase \"1.3.132.0.35\":\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: \"P-521\"\r\n\t\t\t\t};\r\n\t\t\t//endregion\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t\r\n\t\treturn {};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Get OID for each specific algorithm\r\n\t * @param {Object} algorithm\r\n\t * @returns {string}\r\n\t */\r\n\tgetOIDByAlgorithm(algorithm)\r\n\t{\r\n\t\tlet result = \"\";\r\n\t\t\r\n\t\tswitch(algorithm.name.toUpperCase())\r\n\t\t{\r\n\t\t\tcase \"RSASSA-PKCS1-V1_5\":\r\n\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\tresult = \"1.2.840.113549.1.1.5\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\tresult = \"1.2.840.113549.1.1.11\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\tresult = \"1.2.840.113549.1.1.12\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\tresult = \"1.2.840.113549.1.1.13\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"RSA-PSS\":\r\n\t\t\t\tresult = \"1.2.840.113549.1.1.10\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"RSA-OAEP\":\r\n\t\t\t\tresult = \"1.2.840.113549.1.1.7\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ECDSA\":\r\n\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\tresult = \"1.2.840.10045.4.1\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\tresult = \"1.2.840.10045.4.3.2\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\tresult = \"1.2.840.10045.4.3.3\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\tresult = \"1.2.840.10045.4.3.4\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ECDH\":\r\n\t\t\t\tswitch(algorithm.kdf.toUpperCase()) // Non-standard addition - hash algorithm of KDF function\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\tresult = \"1.3.133.16.840.63.0.2\"; // dhSinglePass-stdDH-sha1kdf-scheme\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\tresult = \"1.3.132.1.11.1\"; // dhSinglePass-stdDH-sha256kdf-scheme\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\tresult = \"1.3.132.1.11.2\"; // dhSinglePass-stdDH-sha384kdf-scheme\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\tresult = \"1.3.132.1.11.3\"; // dhSinglePass-stdDH-sha512kdf-scheme\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-CTR\":\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-CBC\":\r\n\t\t\t\tswitch(algorithm.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 128:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.2\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 192:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.22\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 256:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.42\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-CMAC\":\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-GCM\":\r\n\t\t\t\tswitch(algorithm.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 128:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.6\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 192:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.26\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 256:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.46\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-CFB\":\r\n\t\t\t\tswitch(algorithm.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 128:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.4\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 192:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.24\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 256:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.44\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-KW\":\r\n\t\t\t\tswitch(algorithm.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 128:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.5\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 192:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.25\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 256:\r\n\t\t\t\t\t\tresult = \"2.16.840.1.101.3.4.1.45\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"HMAC\":\r\n\t\t\t\tswitch(algorithm.hash.name.toUpperCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"SHA-1\":\r\n\t\t\t\t\t\tresult = \"1.2.840.113549.2.7\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\tresult = \"1.2.840.113549.2.9\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\tresult = \"1.2.840.113549.2.10\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\tresult = \"1.2.840.113549.2.11\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"DH\":\r\n\t\t\t\tresult = \"1.2.840.113549.1.9.16.3.5\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SHA-1\":\r\n\t\t\t\tresult = \"1.3.14.3.2.26\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SHA-256\":\r\n\t\t\t\tresult = \"2.16.840.1.101.3.4.2.1\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SHA-384\":\r\n\t\t\t\tresult = \"2.16.840.1.101.3.4.2.2\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SHA-512\":\r\n\t\t\t\tresult = \"2.16.840.1.101.3.4.2.3\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"CONCAT\":\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"HKDF\":\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"PBKDF2\":\r\n\t\t\t\tresult = \"1.2.840.113549.1.5.12\";\r\n\t\t\t\tbreak;\r\n\t\t\t//region Special case - OIDs for ECC curves\r\n\t\t\tcase \"P-256\":\r\n\t\t\t\tresult = \"1.2.840.10045.3.1.7\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"P-384\":\r\n\t\t\t\tresult = \"1.3.132.0.34\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"P-521\":\r\n\t\t\t\tresult = \"1.3.132.0.35\";\r\n\t\t\t\tbreak;\r\n\t\t\t//endregion\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Get default algorithm parameters for each kind of operation\r\n\t * @param {string} algorithmName Algorithm name to get common parameters for\r\n\t * @param {string} operation Kind of operation: \"sign\", \"encrypt\", \"generatekey\", \"importkey\", \"exportkey\", \"verify\"\r\n\t * @returns {*}\r\n\t */\r\n\tgetAlgorithmParameters(algorithmName, operation)\r\n\t{\r\n\t\tlet result = {\r\n\t\t\talgorithm: {},\r\n\t\t\tusages: []\r\n\t\t};\r\n\t\t\r\n\t\tswitch(algorithmName.toUpperCase())\r\n\t\t{\r\n\t\t\tcase \"RSASSA-PKCS1-V1_5\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSASSA-PKCS1-v1_5\",\r\n\t\t\t\t\t\t\t\tmodulusLength: 2048,\r\n\t\t\t\t\t\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"sign\", \"verify\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"verify\":\r\n\t\t\t\t\tcase \"sign\":\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSASSA-PKCS1-v1_5\",\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"verify\"] // For importKey(\"pkcs8\") usage must be \"sign\" only\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSASSA-PKCS1-v1_5\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"RSA-PSS\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"sign\":\r\n\t\t\t\t\tcase \"verify\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSA-PSS\",\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-1\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tsaltLength: 20\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"sign\", \"verify\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSA-PSS\",\r\n\t\t\t\t\t\t\t\tmodulusLength: 2048,\r\n\t\t\t\t\t\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-1\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"sign\", \"verify\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSA-PSS\",\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-1\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"verify\"] // For importKey(\"pkcs8\") usage must be \"sign\" only\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSA-PSS\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"RSA-OAEP\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"encrypt\":\r\n\t\t\t\t\tcase \"decrypt\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSA-OAEP\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSA-OAEP\",\r\n\t\t\t\t\t\t\t\tmodulusLength: 2048,\r\n\t\t\t\t\t\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSA-OAEP\",\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\"] // encrypt for \"spki\" and decrypt for \"pkcs8\"\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"RSA-OAEP\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ECDSA\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"ECDSA\",\r\n\t\t\t\t\t\t\t\tnamedCurve: \"P-256\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"sign\", \"verify\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"ECDSA\",\r\n\t\t\t\t\t\t\t\tnamedCurve: \"P-256\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"verify\"] // \"sign\" for \"pkcs8\"\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"verify\":\r\n\t\t\t\t\tcase \"sign\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"ECDSA\",\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"sign\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"ECDSA\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ECDH\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"ECDH\",\r\n\t\t\t\t\t\t\t\tnamedCurve: \"P-256\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"deriveKey\", \"deriveBits\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"derivekey\":\r\n\t\t\t\t\tcase \"derivebits\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"ECDH\",\r\n\t\t\t\t\t\t\t\tnamedCurve: \"P-256\",\r\n\t\t\t\t\t\t\t\tpublic: [] // Must be a \"publicKey\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"ECDH\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-CTR\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-CTR\",\r\n\t\t\t\t\t\t\t\tlength: 256\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"decrypt\":\r\n\t\t\t\t\tcase \"encrypt\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-CTR\",\r\n\t\t\t\t\t\t\t\tcounter: new Uint8Array(16),\r\n\t\t\t\t\t\t\t\tlength: 10\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-CTR\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-CBC\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-CBC\",\r\n\t\t\t\t\t\t\t\tlength: 256\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"decrypt\":\r\n\t\t\t\t\tcase \"encrypt\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-CBC\",\r\n\t\t\t\t\t\t\t\tiv: this.getRandomValues(new Uint8Array(16)) // For \"decrypt\" the value should be replaced with value got on \"encrypt\" step\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-CBC\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-GCM\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-GCM\",\r\n\t\t\t\t\t\t\t\tlength: 256\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"decrypt\":\r\n\t\t\t\t\tcase \"encrypt\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-GCM\",\r\n\t\t\t\t\t\t\t\tiv: this.getRandomValues(new Uint8Array(16)) // For \"decrypt\" the value should be replaced with value got on \"encrypt\" step\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-GCM\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"AES-KW\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\tcase \"wrapkey\":\r\n\t\t\t\t\tcase \"unwrapkey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-KW\",\r\n\t\t\t\t\t\t\t\tlength: 256\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"wrapKey\", \"unwrapKey\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"AES-KW\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"HMAC\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"sign\":\r\n\t\t\t\t\tcase \"verify\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"HMAC\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"sign\", \"verify\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"importkey\":\r\n\t\t\t\t\tcase \"exportkey\":\r\n\t\t\t\t\tcase \"generatekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"HMAC\",\r\n\t\t\t\t\t\t\t\tlength: 32,\r\n\t\t\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\t\t\tname: \"SHA-256\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"sign\", \"verify\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"HMAC\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"HKDF\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"derivekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"HKDF\",\r\n\t\t\t\t\t\t\t\thash: \"SHA-256\",\r\n\t\t\t\t\t\t\t\tsalt: new Uint8Array([]),\r\n\t\t\t\t\t\t\t\tinfo: new Uint8Array([])\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"HKDF\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"PBKDF2\":\r\n\t\t\t\tswitch(operation.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"derivekey\":\r\n\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"PBKDF2\",\r\n\t\t\t\t\t\t\t\thash: { name: \"SHA-256\" },\r\n\t\t\t\t\t\t\t\tsalt: new Uint8Array([]),\r\n\t\t\t\t\t\t\t\titerations: 10000\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: [\"encrypt\", \"decrypt\"]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\talgorithm: {\r\n\t\t\t\t\t\t\t\tname: \"PBKDF2\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tusages: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getting hash algorithm by signature algorithm\r\n\t * @param {AlgorithmIdentifier} signatureAlgorithm Signature algorithm\r\n\t * @returns {string}\r\n\t */\r\n\tgetHashAlgorithm(signatureAlgorithm)\r\n\t{\r\n\t\tlet result = \"\";\r\n\t\t\r\n\t\tswitch(signatureAlgorithm.algorithmId)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.4.1\": // ecdsa-with-SHA1\r\n\t\t\tcase \"1.2.840.113549.1.1.5\":\r\n\t\t\t\tresult = \"SHA-1\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.10045.4.3.2\": // ecdsa-with-SHA256\r\n\t\t\tcase \"1.2.840.113549.1.1.11\":\r\n\t\t\t\tresult = \"SHA-256\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.10045.4.3.3\": // ecdsa-with-SHA384\r\n\t\t\tcase \"1.2.840.113549.1.1.12\":\r\n\t\t\t\tresult = \"SHA-384\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.10045.4.3.4\": // ecdsa-with-SHA512\r\n\t\t\tcase \"1.2.840.113549.1.1.13\":\r\n\t\t\t\tresult = \"SHA-512\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.2.840.113549.1.1.10\": // RSA-PSS\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst params = new RSASSAPSSParams({ schema: signatureAlgorithm.algorithmParams });\r\n\t\t\t\t\t\tif(\"hashAlgorithm\" in params)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst algorithm = this.getAlgorithmByOID(params.hashAlgorithm.algorithmId);\r\n\t\t\t\t\t\t\tif((\"name\" in algorithm) === false)\r\n\t\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tresult = algorithm.name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tresult = \"SHA-1\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Specialized function encrypting \"EncryptedContentInfo\" object using parameters\r\n\t * @param {Object} parameters\r\n\t * @returns {Promise}\r\n\t */\r\n\tencryptEncryptedContentInfo(parameters)\r\n\t{\r\n\t\t//region Check for input parameters\r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"Parameters must have type \\\"Object\\\"\");\r\n\t\t\r\n\t\tif((\"password\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\"\");\r\n\t\t\r\n\t\tif((\"contentEncryptionAlgorithm\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"contentEncryptionAlgorithm\\\"\");\r\n\t\t\r\n\t\tif((\"hmacHashAlgorithm\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"hmacHashAlgorithm\\\"\");\r\n\t\t\r\n\t\tif((\"iterationCount\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"iterationCount\\\"\");\r\n\t\t\r\n\t\tif((\"contentToEncrypt\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"contentToEncrypt\\\"\");\r\n\t\t\r\n\t\tif((\"contentType\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"contentType\\\"\");\r\n\r\n\t\tconst contentEncryptionOID = this.getOIDByAlgorithm(parameters.contentEncryptionAlgorithm);\r\n\t\tif(contentEncryptionOID === \"\")\r\n\t\t\treturn Promise.reject(\"Wrong \\\"contentEncryptionAlgorithm\\\" value\");\r\n\t\t\r\n\t\tconst pbkdf2OID = this.getOIDByAlgorithm({\r\n\t\t\tname: \"PBKDF2\"\r\n\t\t});\r\n\t\tif(pbkdf2OID === \"\")\r\n\t\t\treturn Promise.reject(\"Can not find OID for PBKDF2\");\r\n\t\t\r\n\t\tconst hmacOID = this.getOIDByAlgorithm({\r\n\t\t\tname: \"HMAC\",\r\n\t\t\thash: {\r\n\t\t\t\tname: parameters.hmacHashAlgorithm\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(hmacOID === \"\")\r\n\t\t\treturn Promise.reject(`Incorrect value for \"hmacHashAlgorithm\": ${parameters.hmacHashAlgorithm}`);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t\r\n\t\tconst ivBuffer = new ArrayBuffer(16); // For AES we need IV 16 bytes long\r\n\t\tconst ivView = new Uint8Array(ivBuffer);\r\n\t\tthis.getRandomValues(ivView);\r\n\t\t\r\n\t\tconst saltBuffer = new ArrayBuffer(64);\r\n\t\tconst saltView = new Uint8Array(saltBuffer);\r\n\t\tthis.getRandomValues(saltView);\r\n\t\t\r\n\t\tconst contentView = new Uint8Array(parameters.contentToEncrypt);\r\n\t\t\r\n\t\tconst pbkdf2Params = new PBKDF2Params({\r\n\t\t\tsalt: new asn1js.OctetString({ valueHex: saltBuffer }),\r\n\t\t\titerationCount: parameters.iterationCount,\r\n\t\t\tprf: new AlgorithmIdentifier({\r\n\t\t\t\talgorithmId: hmacOID,\r\n\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t})\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Derive PBKDF2 key from \"password\" buffer\r\n\t\tsequence = sequence.then(() =>\r\n\t\t{\r\n\t\t\tconst passwordView = new Uint8Array(parameters.password);\r\n\t\t\t\r\n\t\t\treturn this.importKey(\"raw\",\r\n\t\t\t\tpasswordView,\r\n\t\t\t\t\"PBKDF2\",\r\n\t\t\t\tfalse,\r\n\t\t\t\t[\"deriveKey\"]);\r\n\t\t}, error =>\r\n\t\t\tPromise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Derive key for \"contentEncryptionAlgorithm\"\r\n\t\tsequence = sequence.then(result =>\r\n\t\t\tthis.deriveKey({\r\n\t\t\t\tname: \"PBKDF2\",\r\n\t\t\t\thash: {\r\n\t\t\t\t\tname: parameters.hmacHashAlgorithm\r\n\t\t\t\t},\r\n\t\t\t\tsalt: saltView,\r\n\t\t\t\titerations: parameters.iterationCount\r\n\t\t\t},\r\n\t\t\tresult,\r\n\t\t\tparameters.contentEncryptionAlgorithm,\r\n\t\t\tfalse,\r\n\t\t\t[\"encrypt\"]),\r\n\t\terror =>\r\n\t\t\tPromise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Encrypt content\r\n\t\tsequence = sequence.then(result =>\r\n\t\t\tthis.encrypt({\r\n\t\t\t\tname: parameters.contentEncryptionAlgorithm.name,\r\n\t\t\t\tiv: ivView\r\n\t\t\t},\r\n\t\t\tresult,\r\n\t\t\tcontentView),\r\n\t\terror =>\r\n\t\t\tPromise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Store all parameters in EncryptedData object\r\n\t\tsequence = sequence.then(result =>\r\n\t\t{\r\n\t\t\tconst pbes2Parameters = new PBES2Params({\r\n\t\t\t\tkeyDerivationFunc: new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: pbkdf2OID,\r\n\t\t\t\t\talgorithmParams: pbkdf2Params.toSchema()\r\n\t\t\t\t}),\r\n\t\t\t\tencryptionScheme: new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: contentEncryptionOID,\r\n\t\t\t\t\talgorithmParams: new asn1js.OctetString({ valueHex: ivBuffer })\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn new EncryptedContentInfo({\r\n\t\t\t\tcontentType: parameters.contentType,\r\n\t\t\t\tcontentEncryptionAlgorithm: new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.5.13\", // pkcs5PBES2\r\n\t\t\t\t\talgorithmParams: pbes2Parameters.toSchema()\r\n\t\t\t\t}),\r\n\t\t\t\tencryptedContent: new asn1js.OctetString({ valueHex: result })\r\n\t\t\t});\r\n\t\t}, error =>\r\n\t\t\tPromise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Decrypt data stored in \"EncryptedContentInfo\" object using parameters\r\n\t * @param parameters\r\n\t * @return {Promise}\r\n\t */\r\n\tdecryptEncryptedContentInfo(parameters)\r\n\t{\r\n\t\t//region Check for input parameters\r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"Parameters must have type \\\"Object\\\"\");\r\n\t\t\r\n\t\tif((\"password\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\"\");\r\n\t\t\r\n\t\tif((\"encryptedContentInfo\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"encryptedContentInfo\\\"\");\r\n\r\n\t\tif(parameters.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId !== \"1.2.840.113549.1.5.13\") // pkcs5PBES2\r\n\t\t\treturn Promise.reject(`Unknown \"contentEncryptionAlgorithm\": ${parameters.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId}`);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t\r\n\t\tlet pbes2Parameters;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tpbes2Parameters = new PBES2Params({ schema: parameters.encryptedContentInfo.contentEncryptionAlgorithm.algorithmParams });\r\n\t\t}\r\n\t\tcatch(ex)\r\n\t\t{\r\n\t\t\treturn Promise.reject(\"Incorrectly encoded \\\"pbes2Parameters\\\"\");\r\n\t\t}\r\n\t\t\r\n\t\tlet pbkdf2Params;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tpbkdf2Params = new PBKDF2Params({ schema: pbes2Parameters.keyDerivationFunc.algorithmParams });\r\n\t\t}\r\n\t\tcatch(ex)\r\n\t\t{\r\n\t\t\treturn Promise.reject(\"Incorrectly encoded \\\"pbkdf2Params\\\"\");\r\n\t\t}\r\n\t\t\r\n\t\tconst contentEncryptionAlgorithm = this.getAlgorithmByOID(pbes2Parameters.encryptionScheme.algorithmId);\r\n\t\tif((\"name\" in contentEncryptionAlgorithm) === false)\r\n\t\t\treturn Promise.reject(`Incorrect OID for \"contentEncryptionAlgorithm\": ${pbes2Parameters.encryptionScheme.algorithmId}`);\r\n\t\t\r\n\t\tconst ivBuffer = pbes2Parameters.encryptionScheme.algorithmParams.valueBlock.valueHex;\r\n\t\tconst ivView = new Uint8Array(ivBuffer);\r\n\t\t\r\n\t\tconst saltBuffer = pbkdf2Params.salt.valueBlock.valueHex;\r\n\t\tconst saltView = new Uint8Array(saltBuffer);\r\n\t\t\r\n\t\tconst iterationCount = pbkdf2Params.iterationCount;\r\n\t\t\r\n\t\tlet hmacHashAlgorithm = \"SHA-1\";\r\n\t\t\r\n\t\tif(\"prf\" in pbkdf2Params)\r\n\t\t{\r\n\t\t\tconst algorithm = this.getAlgorithmByOID(pbkdf2Params.prf.algorithmId);\r\n\t\t\tif((\"name\" in algorithm) === false)\r\n\t\t\t\treturn Promise.reject(\"Incorrect OID for HMAC hash algorithm\");\r\n\t\t\t\r\n\t\t\thmacHashAlgorithm = algorithm.hash.name;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Derive PBKDF2 key from \"password\" buffer\r\n\t\tsequence = sequence.then(() =>\r\n\t\t\tthis.importKey(\"raw\",\r\n\t\t\t\tparameters.password,\r\n\t\t\t\t\"PBKDF2\",\r\n\t\t\t\tfalse,\r\n\t\t\t\t[\"deriveKey\"]),\r\n\t\terror =>\r\n\t\t\tPromise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Derive key for \"contentEncryptionAlgorithm\"\r\n\t\tsequence = sequence.then(result =>\r\n\t\t\tthis.deriveKey({\r\n\t\t\t\tname: \"PBKDF2\",\r\n\t\t\t\thash: {\r\n\t\t\t\t\tname: hmacHashAlgorithm\r\n\t\t\t\t},\r\n\t\t\t\tsalt: saltView,\r\n\t\t\t\titerations: iterationCount\r\n\t\t\t},\r\n\t\t\tresult,\r\n\t\t\tcontentEncryptionAlgorithm,\r\n\t\t\tfalse,\r\n\t\t\t[\"decrypt\"]),\r\n\t\terror =>\r\n\t\t\tPromise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Decrypt internal content using derived key\r\n\t\tsequence = sequence.then(result =>\r\n\t\t{\r\n\t\t\t//region Create correct data block for decryption\r\n\t\t\tlet dataBuffer = new ArrayBuffer(0);\r\n\t\t\t\r\n\t\t\tif(parameters.encryptedContentInfo.encryptedContent.idBlock.isConstructed === false)\r\n\t\t\t\tdataBuffer = parameters.encryptedContentInfo.encryptedContent.valueBlock.valueHex;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(const content of parameters.encryptedContentInfo.encryptedContent.valueBlock.value)\r\n\t\t\t\t\tdataBuffer = utilConcatBuf(dataBuffer, content.valueBlock.valueHex);\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\treturn this.decrypt({\r\n\t\t\t\tname: contentEncryptionAlgorithm.name,\r\n\t\t\t\tiv: ivView\r\n\t\t\t},\r\n\t\t\tresult,\r\n\t\t\tdataBuffer);\r\n\t\t}, error =>\r\n\t\t\tPromise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Stamping (signing) data using algorithm simular to HMAC\r\n\t * @param {Object} parameters\r\n\t * @return {Promise.<T>|Promise}\r\n\t */\r\n\tstampDataWithPassword(parameters)\r\n\t{\r\n\t\t//region Check for input parameters\r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"Parameters must have type \\\"Object\\\"\");\r\n\t\t\r\n\t\tif((\"password\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\"\");\r\n\t\t\r\n\t\tif((\"hashAlgorithm\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"hashAlgorithm\\\"\");\r\n\t\t\r\n\t\tif((\"salt\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"iterationCount\\\"\");\r\n\t\t\r\n\t\tif((\"iterationCount\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"salt\\\"\");\r\n\t\t\r\n\t\tif((\"contentToStamp\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"contentToStamp\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Choose correct length for HMAC key\r\n\t\tlet length;\r\n\t\t\r\n\t\tswitch(parameters.hashAlgorithm.toLowerCase())\r\n\t\t{\r\n\t\t\tcase \"sha-1\":\r\n\t\t\t\tlength = 160;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha-256\":\r\n\t\t\t\tlength = 256;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha-384\":\r\n\t\t\t\tlength = 384;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha-512\":\r\n\t\t\t\tlength = 512;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject(`Incorrect \"parameters.hashAlgorithm\" parameter: ${parameters.hashAlgorithm}`);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t\r\n\t\tconst hmacAlgorithm = {\r\n\t\t\tname: \"HMAC\",\r\n\t\t\tlength,\r\n\t\t\thash: {\r\n\t\t\t\tname: parameters.hashAlgorithm\r\n\t\t\t}\r\n\t\t};\r\n\t\t//endregion\r\n\r\n\t\t//region Create PKCS#12 key for integrity checking\r\n\t\tsequence = sequence.then(() => makePKCS12B2Key(this, parameters.hashAlgorithm, length, parameters.password, parameters.salt, parameters.iterationCount));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Import HMAC key\r\n\t\t// noinspection JSCheckFunctionSignatures\r\n\t\tsequence = sequence.then(\r\n\t\t\tresult =>\r\n\t\t\t\tthis.importKey(\"raw\",\r\n\t\t\t\t\tnew Uint8Array(result),\r\n\t\t\t\t\thmacAlgorithm,\r\n\t\t\t\t\tfalse,\r\n\t\t\t\t\t[\"sign\"])\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make signed HMAC value\r\n\t\tsequence = sequence.then(\r\n\t\t\tresult =>\r\n\t\t\t\tthis.sign(hmacAlgorithm, result, new Uint8Array(parameters.contentToStamp)),\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\tverifyDataStampedWithPassword(parameters)\r\n\t{\r\n\t\t//region Check for input parameters\r\n\t\tif((parameters instanceof Object) === false)\r\n\t\t\treturn Promise.reject(\"Parameters must have type \\\"Object\\\"\");\r\n\t\t\r\n\t\tif((\"password\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"password\\\"\");\r\n\t\t\r\n\t\tif((\"hashAlgorithm\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"hashAlgorithm\\\"\");\r\n\t\t\r\n\t\tif((\"salt\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"iterationCount\\\"\");\r\n\t\t\r\n\t\tif((\"iterationCount\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"salt\\\"\");\r\n\t\t\r\n\t\tif((\"contentToVerify\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"contentToVerify\\\"\");\r\n\t\t\r\n\t\tif((\"signatureToVerify\" in parameters) === false)\r\n\t\t\treturn Promise.reject(\"Absent mandatory parameter \\\"signatureToVerify\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Choose correct length for HMAC key\r\n\t\tlet length;\r\n\t\t\r\n\t\tswitch(parameters.hashAlgorithm.toLowerCase())\r\n\t\t{\r\n\t\t\tcase \"sha-1\":\r\n\t\t\t\tlength = 160;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha-256\":\r\n\t\t\t\tlength = 256;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha-384\":\r\n\t\t\t\tlength = 384;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sha-512\":\r\n\t\t\t\tlength = 512;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject(`Incorrect \"parameters.hashAlgorithm\" parameter: ${parameters.hashAlgorithm}`);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t\r\n\t\tconst hmacAlgorithm = {\r\n\t\t\tname: \"HMAC\",\r\n\t\t\tlength,\r\n\t\t\thash: {\r\n\t\t\t\tname: parameters.hashAlgorithm\r\n\t\t\t}\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create PKCS#12 key for integrity checking\r\n\t\tsequence = sequence.then(() => makePKCS12B2Key(this, parameters.hashAlgorithm, length, parameters.password, parameters.salt, parameters.iterationCount));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Import HMAC key\r\n\t\t// noinspection JSCheckFunctionSignatures\r\n\t\tsequence = sequence.then(result =>\r\n\t\t\tthis.importKey(\"raw\",\r\n\t\t\t\tnew Uint8Array(result),\r\n\t\t\t\thmacAlgorithm,\r\n\t\t\t\tfalse,\r\n\t\t\t\t[\"verify\"])\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make signed HMAC value\r\n\t\tsequence = sequence.then(\r\n\t\t\tresult =>\r\n\t\t\t\tthis.verify(hmacAlgorithm, result, new Uint8Array(parameters.signatureToVerify), new Uint8Array(parameters.contentToVerify)),\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Get signature parameters by analyzing private key algorithm\r\n\t * @param {Object} privateKey The private key user would like to use\r\n\t * @param {string} [hashAlgorithm=\"SHA-1\"] Hash algorithm user would like to use\r\n\t * @return {Promise.<T>|Promise}\r\n\t */\r\n\tgetSignatureParameters(privateKey, hashAlgorithm = \"SHA-1\")\r\n\t{\r\n\t\t//region Check hashing algorithm\r\n\t\tconst oid = this.getOIDByAlgorithm({ name: hashAlgorithm });\r\n\t\tif(oid === \"\")\r\n\t\t\treturn Promise.reject(`Unsupported hash algorithm: ${hashAlgorithm}`);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tconst signatureAlgorithm = new AlgorithmIdentifier();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get a \"default parameters\" for current algorithm\r\n\t\tconst parameters = this.getAlgorithmParameters(privateKey.algorithm.name, \"sign\");\r\n\t\tparameters.algorithm.hash.name = hashAlgorithm;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Fill internal structures base on \"privateKey\" and \"hashAlgorithm\"\r\n\t\tswitch(privateKey.algorithm.name.toUpperCase())\r\n\t\t{\r\n\t\t\tcase \"RSASSA-PKCS1-V1_5\":\r\n\t\t\tcase \"ECDSA\":\r\n\t\t\t\tsignatureAlgorithm.algorithmId = this.getOIDByAlgorithm(parameters.algorithm);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"RSA-PSS\":\r\n\t\t\t\t{\r\n\t\t\t\t\t//region Set \"saltLength\" as a length (in octets) of hash function result\r\n\t\t\t\t\tswitch(hashAlgorithm.toUpperCase())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase \"SHA-256\":\r\n\t\t\t\t\t\t\tparameters.algorithm.saltLength = 32;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"SHA-384\":\r\n\t\t\t\t\t\t\tparameters.algorithm.saltLength = 48;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"SHA-512\":\r\n\t\t\t\t\t\t\tparameters.algorithm.saltLength = 64;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t\r\n\t\t\t\t\t//region Fill \"RSASSA_PSS_params\" object\r\n\t\t\t\t\tconst paramsObject = {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(hashAlgorithm.toUpperCase() !== \"SHA-1\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst hashAlgorithmOID = this.getOIDByAlgorithm({ name: hashAlgorithm });\r\n\t\t\t\t\t\tif(hashAlgorithmOID === \"\")\r\n\t\t\t\t\t\t\treturn Promise.reject(`Unsupported hash algorithm: ${hashAlgorithm}`);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tparamsObject.hashAlgorithm = new AlgorithmIdentifier({\r\n\t\t\t\t\t\t\talgorithmId: hashAlgorithmOID,\r\n\t\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tparamsObject.maskGenAlgorithm = new AlgorithmIdentifier({\r\n\t\t\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\t\t\talgorithmParams: paramsObject.hashAlgorithm.toSchema()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(parameters.algorithm.saltLength !== 20)\r\n\t\t\t\t\t\tparamsObject.saltLength = parameters.algorithm.saltLength;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst pssParameters = new RSASSAPSSParams(paramsObject);\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t\t\r\n\t\t\t\t\t//region Automatically set signature algorithm\r\n\t\t\t\t\tsignatureAlgorithm.algorithmId = \"1.2.840.113549.1.1.10\";\r\n\t\t\t\t\tsignatureAlgorithm.algorithmParams = pssParameters.toSchema();\r\n\t\t\t\t\t//endregion\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn Promise.reject(`Unsupported signature algorithm: ${privateKey.algorithm.name}`);\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\treturn Promise.resolve().then(() => ({\r\n\t\t\tsignatureAlgorithm,\r\n\t\t\tparameters\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Sign data with pre-defined private key\r\n\t * @param {ArrayBuffer} data Data to be signed\r\n\t * @param {Object} privateKey Private key to use\r\n\t * @param {Object} parameters Parameters for used algorithm\r\n\t * @return {Promise.<T>|Promise}\r\n\t */\r\n\tsignWithPrivateKey(data, privateKey, parameters)\r\n\t{\r\n\t\treturn this.sign(parameters.algorithm,\r\n\t\t\tprivateKey,\r\n\t\t\tnew Uint8Array(data))\r\n\t\t\t.then(result =>\r\n\t\t\t{\r\n\t\t\t\t//region Special case for ECDSA algorithm\r\n\t\t\t\tif(parameters.algorithm.name === \"ECDSA\")\r\n\t\t\t\t\tresult = createCMSECDSASignature(result);\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\treturn result;\r\n\t\t\t}, error =>\r\n\t\t\t\tPromise.reject(`Signing error: ${error}`)\r\n\t\t\t);\r\n\t}\r\n\t//**********************************************************************************\r\n\tfillPublicKeyParameters(publicKeyInfo, signatureAlgorithm)\r\n\t{\r\n\t\tconst parameters = {};\r\n\t\t\r\n\t\t//region Find signer's hashing algorithm\r\n\t\tconst shaAlgorithm = this.getHashAlgorithm(signatureAlgorithm);\r\n\t\tif(shaAlgorithm === \"\")\r\n\t\t\treturn Promise.reject(`Unsupported signature algorithm: ${signatureAlgorithm.algorithmId}`);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get information about public key algorithm and default parameters for import\r\n\t\tlet algorithmId;\r\n\t\tif(signatureAlgorithm.algorithmId === \"1.2.840.113549.1.1.10\")\r\n\t\t\talgorithmId = signatureAlgorithm.algorithmId;\r\n\t\telse\r\n\t\t\talgorithmId = publicKeyInfo.algorithm.algorithmId;\r\n\t\t\r\n\t\tconst algorithmObject = this.getAlgorithmByOID(algorithmId);\r\n\t\tif((\"name\" in algorithmObject) === \"\")\r\n\t\t\treturn Promise.reject(`Unsupported public key algorithm: ${signatureAlgorithm.algorithmId}`);\r\n\t\t\r\n\t\tparameters.algorithm = this.getAlgorithmParameters(algorithmObject.name, \"importkey\");\r\n\t\tif(\"hash\" in parameters.algorithm.algorithm)\r\n\t\t\tparameters.algorithm.algorithm.hash.name = shaAlgorithm;\r\n\t\t\r\n\t\t//region Special case for ECDSA\r\n\t\tif(algorithmObject.name === \"ECDSA\")\r\n\t\t{\r\n\t\t\t//region Get information about named curve\r\n\t\t\tlet algorithmParamsChecked = false;\r\n\t\t\t\r\n\t\t\tif((\"algorithmParams\" in publicKeyInfo.algorithm) === true)\r\n\t\t\t{\r\n\t\t\t\tif(\"idBlock\" in publicKeyInfo.algorithm.algorithmParams)\r\n\t\t\t\t{\r\n\t\t\t\t\tif((publicKeyInfo.algorithm.algorithmParams.idBlock.tagClass === 1) && (publicKeyInfo.algorithm.algorithmParams.idBlock.tagNumber === 6))\r\n\t\t\t\t\t\talgorithmParamsChecked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(algorithmParamsChecked === false)\r\n\t\t\t\treturn Promise.reject(\"Incorrect type for ECDSA public key parameters\");\r\n\t\t\t\r\n\t\t\tconst curveObject = this.getAlgorithmByOID(publicKeyInfo.algorithm.algorithmParams.valueBlock.toString());\r\n\t\t\tif((\"name\" in curveObject) === false)\r\n\t\t\t\treturn Promise.reject(`Unsupported named curve algorithm: ${publicKeyInfo.algorithm.algorithmParams.valueBlock.toString()}`);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\tparameters.algorithm.algorithm.namedCurve = curveObject.name;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn parameters;\r\n\t}\r\n\t//**********************************************************************************\r\n\tgetPublicKey(publicKeyInfo, signatureAlgorithm, parameters = null)\r\n\t{\r\n\t\tif(parameters === null)\r\n\t\t\tparameters = this.fillPublicKeyParameters(publicKeyInfo, signatureAlgorithm);\r\n\t\t\r\n\t\tconst publicKeyInfoSchema = publicKeyInfo.toSchema();\r\n\t\tconst publicKeyInfoBuffer = publicKeyInfoSchema.toBER(false);\r\n\t\tconst publicKeyInfoView = new Uint8Array(publicKeyInfoBuffer);\r\n\t\t\r\n\t\treturn this.importKey(\"spki\",\r\n\t\t\tpublicKeyInfoView,\r\n\t\t\tparameters.algorithm.algorithm,\r\n\t\t\ttrue,\r\n\t\t\tparameters.algorithm.usages\r\n\t\t);\r\n\t}\r\n\t//**********************************************************************************\r\n\tverifyWithPublicKey(data, signature, publicKeyInfo, signatureAlgorithm, shaAlgorithm = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find signer's hashing algorithm\r\n\t\tif(shaAlgorithm === null)\r\n\t\t{\r\n\t\t\tshaAlgorithm = this.getHashAlgorithm(signatureAlgorithm);\r\n\t\t\tif(shaAlgorithm === \"\")\r\n\t\t\t\treturn Promise.reject(`Unsupported signature algorithm: ${signatureAlgorithm.algorithmId}`);\r\n\t\t\t\r\n\t\t\t//region Import public key\r\n\t\t\tsequence = sequence.then(() =>\r\n\t\t\t\tthis.getPublicKey(publicKeyInfo, signatureAlgorithm));\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst parameters = {};\r\n\t\t\t\r\n\t\t\t//region Get information about public key algorithm and default parameters for import\r\n\t\t\tlet algorithmId;\r\n\t\t\tif(signatureAlgorithm.algorithmId === \"1.2.840.113549.1.1.10\")\r\n\t\t\t\talgorithmId = signatureAlgorithm.algorithmId;\r\n\t\t\telse\r\n\t\t\t\talgorithmId = publicKeyInfo.algorithm.algorithmId;\r\n\t\t\t\r\n\t\t\tconst algorithmObject = this.getAlgorithmByOID(algorithmId);\r\n\t\t\tif((\"name\" in algorithmObject) === \"\")\r\n\t\t\t\treturn Promise.reject(`Unsupported public key algorithm: ${signatureAlgorithm.algorithmId}`);\r\n\t\t\t\r\n\t\t\tparameters.algorithm = this.getAlgorithmParameters(algorithmObject.name, \"importkey\");\r\n\t\t\tif(\"hash\" in parameters.algorithm.algorithm)\r\n\t\t\t\tparameters.algorithm.algorithm.hash.name = shaAlgorithm;\r\n\t\t\t\r\n\t\t\t//region Special case for ECDSA\r\n\t\t\tif(algorithmObject.name === \"ECDSA\")\r\n\t\t\t{\r\n\t\t\t\t//region Get information about named curve\r\n\t\t\t\tlet algorithmParamsChecked = false;\r\n\t\t\t\t\r\n\t\t\t\tif((\"algorithmParams\" in publicKeyInfo.algorithm) === true)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(\"idBlock\" in publicKeyInfo.algorithm.algorithmParams)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif((publicKeyInfo.algorithm.algorithmParams.idBlock.tagClass === 1) && (publicKeyInfo.algorithm.algorithmParams.idBlock.tagNumber === 6))\r\n\t\t\t\t\t\t\talgorithmParamsChecked = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(algorithmParamsChecked === false)\r\n\t\t\t\t\treturn Promise.reject(\"Incorrect type for ECDSA public key parameters\");\r\n\t\t\t\t\r\n\t\t\t\tconst curveObject = this.getAlgorithmByOID(publicKeyInfo.algorithm.algorithmParams.valueBlock.toString());\r\n\t\t\t\tif((\"name\" in curveObject) === false)\r\n\t\t\t\t\treturn Promise.reject(`Unsupported named curve algorithm: ${publicKeyInfo.algorithm.algorithmParams.valueBlock.toString()}`);\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\tparameters.algorithm.algorithm.namedCurve = curveObject.name;\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t//endregion\r\n\r\n\t\t\t//region Import public key\r\n\t\t\tsequence = sequence.then(() =>\r\n\t\t\t\tthis.getPublicKey(publicKeyInfo, null, parameters));\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Verify signature\r\n\t\tsequence = sequence.then(publicKey =>\r\n\t\t{\r\n\t\t\t//region Get default algorithm parameters for verification\r\n\t\t\tconst algorithm = this.getAlgorithmParameters(publicKey.algorithm.name, \"verify\");\r\n\t\t\tif(\"hash\" in algorithm.algorithm)\r\n\t\t\t\talgorithm.algorithm.hash.name = shaAlgorithm;\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Special case for ECDSA signatures\r\n\t\t\tlet signatureValue = signature.valueBlock.valueHex;\r\n\t\t\t\r\n\t\t\tif(publicKey.algorithm.name === \"ECDSA\")\r\n\t\t\t{\r\n\t\t\t\tconst asn1 = asn1js.fromBER(signatureValue);\r\n\t\t\t\t// noinspection JSCheckFunctionSignatures\r\n\t\t\t\tsignatureValue = createECDSASignatureFromCMS(asn1.result);\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Special case for RSA-PSS\r\n\t\t\tif(publicKey.algorithm.name === \"RSA-PSS\")\r\n\t\t\t{\r\n\t\t\t\tlet pssParameters;\r\n\t\t\t\t\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tpssParameters = new RSASSAPSSParams({ schema: signatureAlgorithm.algorithmParams });\r\n\t\t\t\t}\r\n\t\t\t\tcatch(ex)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject(ex);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(\"saltLength\" in pssParameters)\r\n\t\t\t\t\talgorithm.algorithm.saltLength = pssParameters.saltLength;\r\n\t\t\t\telse\r\n\t\t\t\t\talgorithm.algorithm.saltLength = 20;\r\n\t\t\t\t\r\n\t\t\t\tlet hashAlgo = \"SHA-1\";\r\n\t\t\t\t\r\n\t\t\t\tif(\"hashAlgorithm\" in pssParameters)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst hashAlgorithm = this.getAlgorithmByOID(pssParameters.hashAlgorithm.algorithmId);\r\n\t\t\t\t\tif((\"name\" in hashAlgorithm) === false)\r\n\t\t\t\t\t\treturn Promise.reject(`Unrecognized hash algorithm: ${pssParameters.hashAlgorithm.algorithmId}`);\r\n\t\t\t\t\t\r\n\t\t\t\t\thashAlgo = hashAlgorithm.name;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\talgorithm.algorithm.hash.name = hashAlgo;\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\treturn this.verify(algorithm.algorithm,\r\n\t\t\t\tpublicKey,\r\n\t\t\t\tnew Uint8Array(signatureValue),\r\n\t\t\t\tnew Uint8Array(data)\r\n\t\t\t);\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/** @license React v16.14.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function u(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(u(227));\nfunction ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;\nfunction oa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};\nfunction ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}\nfunction ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),za=null,Aa=null,Ba=null;\nfunction Ca(a){if(a=ma(a)){if(\"function\"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}\nfunction Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};\nfunction Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction Ta(a,b,c,d){if(null===b||\"undefined\"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});[\"capture\",\"download\"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});[\"rowSpan\",\"start\"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Ua,\nVa);C[b]=new v(b,1,!1,a,null,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});\nC.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty(\"ReactCurrentDispatcher\")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty(\"ReactCurrentBatchConfig\")||(Wa.ReactCurrentBatchConfig={suspense:null});\nfunction Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar Ya=/^(.*)[\\\\\\/]/,E=\"function\"===typeof Symbol&&Symbol.for,Za=E?Symbol.for(\"react.element\"):60103,$a=E?Symbol.for(\"react.portal\"):60106,ab=E?Symbol.for(\"react.fragment\"):60107,bb=E?Symbol.for(\"react.strict_mode\"):60108,cb=E?Symbol.for(\"react.profiler\"):60114,db=E?Symbol.for(\"react.provider\"):60109,eb=E?Symbol.for(\"react.context\"):60110,fb=E?Symbol.for(\"react.concurrent_mode\"):60111,gb=E?Symbol.for(\"react.forward_ref\"):60112,hb=E?Symbol.for(\"react.suspense\"):60113,ib=E?Symbol.for(\"react.suspense_list\"):\n60120,jb=E?Symbol.for(\"react.memo\"):60115,kb=E?Symbol.for(\"react.lazy\"):60116,lb=E?Symbol.for(\"react.block\"):60121,mb=\"function\"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||\"object\"!==typeof a)return null;a=mb&&a[mb]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}\nfunction pb(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ab:return\"Fragment\";case $a:return\"Portal\";case cb:return\"Profiler\";case bb:return\"StrictMode\";case hb:return\"Suspense\";case ib:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case eb:return\"Context.Consumer\";case db:return\"Context.Provider\";case gb:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\"ForwardRef\");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ya,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nfunction rb(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function sb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction tb(a){var b=sb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=sb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Ab(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,\"checked\",b,!1)}\nfunction Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Db(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Eb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Db(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function Fb(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}\nfunction Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:rb(c)}}\nfunction Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var Mb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Nb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Ob(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Nb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Pb,Qb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||\"innerHTML\"in a)a.innerHTML=b;else{Pb=Pb||document.createElement(\"div\");Pb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Tb={animationend:Sb(\"Animation\",\"AnimationEnd\"),animationiteration:Sb(\"Animation\",\"AnimationIteration\"),animationstart:Sb(\"Animation\",\"AnimationStart\"),transitionend:Sb(\"Transition\",\"TransitionEnd\")},Ub={},Vb={};\nya&&(Vb=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),\"TransitionEvent\"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}\nvar Xb=Wb(\"animationend\"),Yb=Wb(\"animationiteration\"),Zb=Wb(\"animationstart\"),$b=Wb(\"transitionend\"),ac=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bc=new (\"function\"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}\nfunction dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}\nfunction gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;\nfunction lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}\nfunction nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}\nfunction rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}\nfunction sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=\nic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case \"scroll\":vc(b,\"scroll\",!0);break;case \"focus\":case \"blur\":vc(b,\"focus\",!0);vc(b,\"blur\",!0);c.set(\"blur\",null);c.set(\"focus\",null);break;case \"cancel\":case \"close\":oc(a)&&vc(b,a,!0);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}\nvar wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit\".split(\" \"),Ic=\"focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture\".split(\" \");\nfunction Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}\nfunction Lc(a,b){switch(a){case \"focus\":case \"blur\":Bc=null;break;case \"dragenter\":case \"dragleave\":Cc=null;break;case \"mouseover\":case \"mouseout\":Dc=null;break;case \"pointerover\":case \"pointerout\":Ec.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}\nfunction Oc(a,b,c,d,e){switch(b){case \"focus\":return Bc=Mc(Bc,a,b,c,d,e),!0;case \"dragenter\":return Cc=Mc(Cc,a,b,c,d,e),!0;case \"mouseover\":return Dc=Mc(Dc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}\nfunction Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}\nfunction Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}\nvar Wc={},Yc=new Map,Zc=new Map,$c=[\"abort\",\"abort\",Xb,\"animationEnd\",Yb,\"animationIteration\",Zb,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\n\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",$b,\"transitionEnd\",\"waiting\",\"waiting\"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f=\"on\"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+\"Capture\"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}\nad(\"blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),0);\nad(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);ad($c,2);for(var bd=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);\nvar dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}\nfunction id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}\nfunction Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}\nvar jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(\"\"+b).trim():b+\"px\"}\nfunction md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ld(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,\"\"));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(u(62,\"\"));}}\nfunction pd(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}\nfunction td(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}\nfunction wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}\nfunction yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}var zd=\"$\",Ad=\"/$\",Bd=\"$?\",Cd=\"$!\",Dd=null,Ed=null;function Fd(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction Gd(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd=\"function\"===typeof setTimeout?setTimeout:void 0,Id=\"function\"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}\nfunction Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md=\"__reactInternalInstance$\"+Ld,Nd=\"__reactEventHandlers$\"+Ld,Od=\"__reactContainere$\"+Ld;\nfunction tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}\nfunction Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==typeof c)throw Error(u(231,\nb,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],\"captured\",a);for(b=0;b<c.length;b++)Td(c[b],\"bubbled\",a)}}\nfunction Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;\nfunction ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e=\"value\"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}\nfunction G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}\nn(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nG.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&\"CompositionEvent\"in window,ke=null;ya&&\"documentMode\"in document&&(ke=document.documentMode);\nvar le=ya&&\"TextEvent\"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},pe=!1;\nfunction qe(a,b){switch(a){case \"keyup\":return-1!==ie.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function re(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var se=!1;function te(a,b){switch(a){case \"compositionend\":return re(b);case \"keypress\":if(32!==b.which)return null;pe=!0;return ne;case \"textInput\":return a=b.data,a===ne&&pe?null:a;default:return null}}\nfunction ue(a,b){if(se)return\"compositionend\"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return me&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case \"compositionstart\":var f=oe.compositionStart;break b;case \"compositionend\":f=oe.compositionEnd;break b;case \"compositionupdate\":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&\"ko\"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd=\"value\"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,\nb,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!we[a.type]:\"textarea\"===b?!0:!1}\nvar ye={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type=\"change\";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if(\"change\"===a)return b}var Fe=!1;ya&&(Fe=oc(\"input\")&&(!document.documentMode||9<document.documentMode));\nfunction Ge(){Ae&&(Ae.detachEvent(\"onpropertychange\",He),Be=Ae=null)}function He(a){if(\"value\"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){\"focus\"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent(\"onpropertychange\",He)):\"blur\"===a&&Ge()}function Je(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return De(Be)}function Ke(a,b){if(\"click\"===a)return De(b)}function Le(a,b){if(\"input\"===a||\"change\"===a)return De(b)}\nvar Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&\"input\"===f.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Db(e,\"number\",e.value)}},Ne=G.extend({view:null,detail:null}),\nOe={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}\nvar Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?\"mousemove\"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Se;Se=a.screenY;return Ue?\"mousemove\"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f=\"mouseover\"===a||\"pointerover\"===a,g=\"mouseout\"===a||\"pointerout\"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if(\"mouseout\"===a||\"mouseover\"===\na){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p=\"mouse\"}else if(\"pointerout\"===a||\"pointerover\"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p=\"pointer\";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+\"leave\";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+\"enter\";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;\nk=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],\"bubbled\",l);for(p=d.length;0<p--;)Vd(d[p],\"captured\",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e=\"function\"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;\nfunction bf(a,b){if($e(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}\nvar cf=ya&&\"documentMode\"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},ef=null,ff=null,gf=null,hf=!1;\nfunction jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;\"selectionStart\"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type=\"select\",a.target=ef,Xd(a),a)}\nvar kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case \"focus\":if(xe(e)||\"true\"===e.contentEditable)ef=e,ff=b,gf=null;break;case \"blur\":gf=ff=ef=null;break;case \"mousedown\":hf=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return hf=!1,jf(c,d);case \"selectionchange\":if(cf)break;\ncase \"keydown\":case \"keyup\":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar pf={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},qf={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=of(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?qf[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return\"keypress\"===\na.type?of(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?of(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case \"keypress\":if(0===of(c))return null;case \"keydown\":case \"keyup\":a=rf;break;case \"blur\":case \"focus\":a=nf;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=\nVe;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=sf;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case \"scroll\":a=Ne;break;case \"wheel\":a=vf;break;case \"copy\":case \"cut\":case \"paste\":a=mf;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=\nWe;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}\nfunction I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}\nfunction Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||\"Unknown\",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}\nfunction Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}\nvar If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};\nfunction ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}\nfunction fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}\nfunction og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}\nfunction sg(a,b){if(mg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}\nfunction vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}\nfunction zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=\nca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if(\"function\"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g=\"function\"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&\n(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}\nfunction Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if(\"function\"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}\nvar Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;\nc=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}\nfunction Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;\"object\"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Mg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}\nfunction Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;\nfunction Pg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}\nfunction Qg(a,b){if(\"textarea\"!==a.type)throw Error(u(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\"));}\nfunction Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Tg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||\nnb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&\nm&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if(\"function\"!==typeof k)throw Error(u(150));h=k.call(h);\nif(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==\nq.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,\nk.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=\nd.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||\"Component\"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};\nfunction ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};\nfunction hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}\nvar jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}\nfunction oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}\nfunction th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&\n(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction yh(a){var b=th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}\nfunction Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}\nfunction Hh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}\nfunction zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,\nd)}}\nvar sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,\nb];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=\nc}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=\nwh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,\nb,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}\nfunction Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}\nfunction Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}\nfunction ai(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}\nfunction fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?(\"function\"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p=\"function\"===typeof m||\"function\"===\ntypeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?(\"function\"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):\n(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}\nfunction gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}\nvar ii={dehydrated:null,retryTime:0};\nfunction ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=\nb;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=\nc}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}\nfunction ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case \"together\":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;\nni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};\npi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case \"input\":f=zb(g,f);d=zb(g,d);a=[];break;case \"option\":f=Gb(g,f);d=Gb(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=Ib(g,f);d=Ib(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if(\"style\"===\nh)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]=\"\");else\"dangerouslySetInnerHTML\"!==h&&\"children\"!==h&&\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if(\"style\"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]=\"\");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),\nc[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else\"dangerouslySetInnerHTML\"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):\"children\"===h?g===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(h,\"\"+l):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push(\"style\",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};\nqi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));\nreturn null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case \"iframe\":case \"object\":case \"embed\":F(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<ac.length;a++)F(ac[a],d);break;case \"source\":F(\"error\",d);break;case \"img\":case \"image\":case \"link\":F(\"error\",d);F(\"load\",d);break;case \"form\":F(\"reset\",d);F(\"submit\",d);break;case \"details\":F(\"toggle\",d);break;case \"input\":Ab(d,f);F(\"invalid\",d);rd(c,\"onChange\");break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};F(\"invalid\",d);rd(c,\"onChange\");break;case \"textarea\":Jb(d,f),F(\"invalid\",d),rd(c,\"onChange\")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(a=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(a=[\"children\",\"\"+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case \"input\":xb(d);Eb(d,f,!0);break;case \"textarea\":xb(d);Lb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&\n(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?\"script\"===e?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),\"select\"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case \"iframe\":case \"object\":case \"embed\":F(\"load\",\na);h=d;break;case \"video\":case \"audio\":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case \"source\":F(\"error\",a);h=d;break;case \"img\":case \"image\":case \"link\":F(\"error\",a);F(\"load\",a);h=d;break;case \"form\":F(\"reset\",a);F(\"submit\",a);h=d;break;case \"details\":F(\"toggle\",a);h=d;break;case \"input\":Ab(a,d);h=zb(a,d);F(\"invalid\",a);rd(c,\"onChange\");break;case \"option\":h=Gb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F(\"invalid\",a);rd(c,\"onChange\");break;case \"textarea\":Jb(a,\nd);h=Ib(a,d);F(\"invalid\",a);rd(c,\"onChange\");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];\"style\"===f?md(a,l):\"dangerouslySetInnerHTML\"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):\"children\"===f?\"string\"===typeof l?(\"textarea\"!==e||\"\"!==l)&&Rb(a,l):\"number\"===typeof l&&Rb(a,\"\"+l):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case \"input\":xb(a);Eb(a,d,!1);\nbreak;case \"textarea\":xb(a);Lb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+rb(d.value));break;case \"select\":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(u(166));\nc=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=\ne,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&\n64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,\ne.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!f.alternate)return b=\nb.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,\nb.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}\nvar Bi=\"function\"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}\nfunction Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}\nfunction Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}\nfunction Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;\ncase 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}\nfunction Ki(a,b,c){\"function\"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;\"function\"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}\nfunction Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}\nfunction Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}\nfunction Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}\nfunction Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=\nf,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}\nfunction Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?md(c,h):\"dangerouslySetInnerHTML\"===g?Qb(c,h):\"children\"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case \"input\":Cb(c,d);break;\ncase \"textarea\":Kb(c,d);break;case \"select\":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?\nd=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null,f.style.display=ld(\"display\",e));else if(6===a.tag)a.stateNode.nodeValue=d?\"\":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=\nf;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nvar Wi=\"function\"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}\nfunction $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nvar bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}\nfunction Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}\nfunction Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}\nfunction xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}\nfunction zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}\nfunction Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=\nb;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}\nfunction Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;\nc===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=\nd;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=\nHd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}\nfunction yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}\nfunction Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}\nfunction Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}\nfunction Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&\"object\"===typeof h&&\"function\"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=\nnull,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;\nbreak a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+qb(g))}S!==\njj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&(\"function\"===typeof w.getDerivedStateFromError||null!==ub&&\"function\"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}\nfunction Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}\nfunction Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==\na.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}\nfunction Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=\nd-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if(\"selectionStart\"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,\nm=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=\nnull;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,\"\");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&(\"function\"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=\n-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),\"selectionStart\"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&\n(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,\ntop:w.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}\"function\"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=\nnull;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;\"function\"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}\nfunction Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}\nfunction Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}\nfunction Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;\nRj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;\nif(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,\nb,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=\nnull,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);\ncase 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:\nnull,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,\nb,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==\nk){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=\ng}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,\nb,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}\nfunction Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}\nfunction bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if(\"function\"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}\nfunction Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,\nfirstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Ug(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bi(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case db:g=\n10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,\"\"));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}\nfunction Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}\nfunction Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}\nfunction yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}\nfunction bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===\nd?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}\nfunction fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};\nfunction gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}\nfunction ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nwc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};\nza=function(a,b,c){switch(b){case \"input\":Cb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case \"textarea\":Kb(a,c);break;case \"select\":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;\nGa=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};\n(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:\"16.14.0\",\nrendererPackageName:\"react-dom\"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if(\"function\"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};\nexports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};\nexports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version=\"16.14.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.19.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var f,g,h,k,l;\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout;if(\"undefined\"!==typeof console){var A=window.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\");\"function\"!==typeof A&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\")}if(\"object\"===\ntypeof w&&\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=\nfunction(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}\nfunction M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;\nfunction V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}\nfunction X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}\nfunction Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};\nexports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};\nexports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn\");\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","//**************************************************************************************\r\n/**\r\n * Making UTC date from local date\r\n * @param {Date} date Date to convert from\r\n * @returns {Date}\r\n */\r\nexport function getUTCDate(date)\r\n{\r\n\t// noinspection NestedFunctionCallJS, MagicNumberJS\r\n\treturn new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Get value for input parameters, or set a default value\r\n * @param {Object} parameters\r\n * @param {string} name\r\n * @param defaultValue\r\n */\r\nexport function getParametersValue(parameters, name, defaultValue)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tif((parameters instanceof Object) === false)\r\n\t\treturn defaultValue;\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(name in parameters)\r\n\t\treturn parameters[name];\r\n\t\r\n\treturn defaultValue;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Converts \"ArrayBuffer\" into a hexdecimal string\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} [inputOffset=0]\r\n * @param {number} [inputLength=inputBuffer.byteLength]\r\n * @param {boolean} [insertSpace=false]\r\n * @returns {string}\r\n */\r\nexport function bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false)\r\n{\r\n\tlet result = \"\";\r\n\t\r\n\tfor(const item of (new Uint8Array(inputBuffer, inputOffset, inputLength)))\r\n\t{\r\n\t\t// noinspection ChainedFunctionCallJS\r\n\t\tconst str = item.toString(16).toUpperCase();\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(str.length === 1)\r\n\t\t\tresult += \"0\";\r\n\t\t\r\n\t\tresult += str;\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(insertSpace)\r\n\t\t\tresult += \" \";\r\n\t}\r\n\t\r\n\treturn result.trim();\r\n}\r\n//**************************************************************************************\r\n// noinspection JSValidateJSDoc, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Check input \"ArrayBuffer\" for common functions\r\n * @param {LocalBaseBlock} baseBlock\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} inputOffset\r\n * @param {number} inputLength\r\n * @returns {boolean}\r\n */\r\nexport function checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif((inputBuffer instanceof ArrayBuffer) === false)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputBuffer.byteLength === 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputOffset < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputLength < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif((inputBuffer.byteLength - inputOffset - inputLength) < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Convert number from 2^base to 2^10\r\n * @param {Uint8Array} inputBuffer\r\n * @param {number} inputBase\r\n * @returns {number}\r\n */\r\nexport function utilFromBase(inputBuffer, inputBase)\r\n{\r\n\tlet result = 0;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tif(inputBuffer.length === 1)\r\n\t\treturn inputBuffer[0];\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tfor(let i = (inputBuffer.length - 1); i >= 0; i--)\r\n\t\tresult += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n\t\r\n\treturn result;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Convert number from 2^10 to 2^base\r\n * @param {!number} value The number to convert\r\n * @param {!number} base The base for 2^base\r\n * @param {number} [reserved=0] Pre-defined number of bytes in output array (-1 = limited by function itself)\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilToBase(value, base, reserved = (-1))\r\n{\r\n\tconst internalReserved = reserved;\r\n\tlet internalValue = value;\r\n\t\r\n\tlet result = 0;\r\n\tlet biggest = Math.pow(2, base);\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(value < biggest)\r\n\t\t{\r\n\t\t\tlet retBuf;\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(internalReserved < 0)\r\n\t\t\t{\r\n\t\t\t\tretBuf = new ArrayBuffer(i);\r\n\t\t\t\tresult = i;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(internalReserved < i)\r\n\t\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(internalReserved);\r\n\t\t\t\t\r\n\t\t\t\tresult = internalReserved;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tfor(let j = (i - 1); j >= 0; j--)\r\n\t\t\t{\r\n\t\t\t\tconst basis = Math.pow(2, j * base);\r\n\t\t\t\t\r\n\t\t\t\tretView[result - j - 1] = Math.floor(internalValue / basis);\r\n\t\t\t\tinternalValue -= (retView[result - j - 1]) * basis;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbiggest *= Math.pow(2, base);\r\n\t}\r\n\t\r\n\treturn new ArrayBuffer(0);\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Concatenate two ArrayBuffers\r\n * @param {...ArrayBuffer} buffers Set of ArrayBuffer\r\n */\r\nexport function utilConcatBuf(...buffers)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const buffer of buffers)\r\n\t\toutputLength += buffer.byteLength;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const buffer of buffers)\r\n\t{\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tretView.set(new Uint8Array(buffer), prevLength);\r\n\t\tprevLength += buffer.byteLength;\r\n\t}\r\n\t\r\n\treturn retBuf;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Concatenate two Uint8Array\r\n * @param {...Uint8Array} views Set of Uint8Array\r\n */\r\nexport function utilConcatView(...views)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const view of views)\r\n\t\toutputLength += view.length;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const view of views)\r\n\t{\r\n\t\tretView.set(view, prevLength);\r\n\t\tprevLength += view.length;\r\n\t}\r\n\t\r\n\treturn retView;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Decoding of \"two complement\" values\r\n * The function must be called in scope of instance of \"hexBlock\" class (\"valueHex\" and \"warnings\" properties must be present)\r\n * @returns {number}\r\n */\r\nexport function utilDecodeTC()\r\n{\r\n\tconst buf = new Uint8Array(this.valueHex);\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(this.valueHex.byteLength >= 2)\r\n\t{\r\n\t\t//noinspection JSBitwiseOperatorUsage, ConstantOnRightSideOfComparisonJS, LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(condition1 || condition2)\r\n\t\t\tthis.warnings.push(\"Needlessly long format\");\r\n\t}\r\n\t\r\n\t//region Create big part of the integer\r\n\tconst bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst bigIntView = new Uint8Array(bigIntBuffer);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < this.valueHex.byteLength; i++)\r\n\t\tbigIntView[i] = 0;\r\n\t\r\n\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\tbigIntView[0] = (buf[0] & 0x80); // mask only the biggest bit\r\n\t\r\n\tconst bigInt = utilFromBase(bigIntView, 8);\r\n\t//endregion\r\n\t\r\n\t//region Create small part of the integer\r\n\tconst smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst smallIntView = new Uint8Array(smallIntBuffer);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let j = 0; j < this.valueHex.byteLength; j++)\r\n\t\tsmallIntView[j] = buf[j];\r\n\t\r\n\t// noinspection MagicNumberJS\r\n\tsmallIntView[0] &= 0x7F; // mask biggest bit\r\n\t\r\n\tconst smallInt = utilFromBase(smallIntView, 8);\r\n\t//endregion\r\n\t\r\n\treturn (smallInt - bigInt);\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Encode integer value to \"two complement\" format\r\n * @param {number} value Value to encode\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilEncodeTC(value)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConditionalExpressionJS\r\n\tconst modValue = (value < 0) ? (value * (-1)) : value;\r\n\tlet bigInt = 128;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(modValue <= bigInt)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(value < 0)\r\n\t\t\t{\r\n\t\t\t\tconst smallInt = bigInt - modValue;\r\n\t\t\t\t\r\n\t\t\t\tconst retBuf = utilToBase(smallInt, 8, i);\r\n\t\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tretView[0] |= 0x80;\r\n\t\t\t\t\r\n\t\t\t\treturn retBuf;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet retBuf = utilToBase(modValue, 8, i);\r\n\t\t\tlet retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t//noinspection JSBitwiseOperatorUsage, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\t\tif(retView[0] & 0x80)\r\n\t\t\t{\r\n\t\t\t\t//noinspection JSCheckFunctionSignatures\r\n\t\t\t\tconst tempBuf = retBuf.slice(0);\r\n\t\t\t\tconst tempView = new Uint8Array(tempBuf);\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n\t\t\t\t// noinspection ReuseOfLocalVariableJS\r\n\t\t\t\tretView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tfor(let k = 0; k < tempBuf.byteLength; k++)\r\n\t\t\t\t\tretView[k + 1] = tempView[k];\r\n\t\t\t\t\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tretView[0] = 0x00;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbigInt *= Math.pow(2, 8);\r\n\t}\r\n\t\r\n\treturn (new ArrayBuffer(0));\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS, ParameterNamingConventionJS\r\n/**\r\n * Compare two array buffers\r\n * @param {!ArrayBuffer} inputBuffer1\r\n * @param {!ArrayBuffer} inputBuffer2\r\n * @returns {boolean}\r\n */\r\nexport function isEqualBuffer(inputBuffer1, inputBuffer2)\r\n{\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(inputBuffer1.byteLength !== inputBuffer2.byteLength)\r\n\t\treturn false;\r\n\t\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tconst view1 = new Uint8Array(inputBuffer1);\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tconst view2 = new Uint8Array(inputBuffer2);\r\n\t\r\n\tfor(let i = 0; i < view1.length; i++)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(view1[i] !== view2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Pad input number with leade \"0\" if needed\r\n * @returns {string}\r\n * @param {number} inputNumber\r\n * @param {number} fullLength\r\n */\r\nexport function padNumber(inputNumber, fullLength)\r\n{\r\n\tconst str = inputNumber.toString(10);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(fullLength < str.length)\r\n\t\treturn \"\";\r\n\t\r\n\tconst dif = fullLength - str.length;\r\n\t\r\n\tconst padding = new Array(dif);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < dif; i++)\r\n\t\tpadding[i] = \"0\";\r\n\t\r\n\tconst paddingString = padding.join(\"\");\r\n\t\r\n\treturn paddingString.concat(str);\r\n}\r\n//**************************************************************************************\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionTooLongJS, FunctionNamingConventionJS\r\n/**\r\n * Encode string into BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} useUrlTemplate If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} skipPadding Skip BASE-64 padding or not\r\n * @param {boolean} skipLeadingZeros Skip leading zeros in input data or not\r\n * @returns {string}\r\n */\r\nexport function toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false)\r\n{\r\n\tlet i = 0;\r\n\t\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tlet flag1 = 0;\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tlet flag2 = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\t// noinspection ConditionalExpressionJS\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\tif(skipLeadingZeros)\r\n\t{\r\n\t\tlet nonZeroPosition = 0;\r\n\t\t\r\n\t\tfor(let i = 0; i < input.length; i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(input.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroPosition = i;\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tinput = input.slice(nonZeroPosition);\r\n\t}\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr1 = input.charCodeAt(i++);\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(i >= input.length)\r\n\t\t\tflag1 = 1;\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr2 = input.charCodeAt(i++);\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(i >= input.length)\r\n\t\t\tflag2 = 1;\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr3 = input.charCodeAt(i++);\r\n\t\t\r\n\t\t// noinspection LocalVariableNamingConventionJS\r\n\t\tconst enc1 = chr1 >> 2;\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tlet enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tlet enc4 = chr3 & 0x3F;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\tif(flag1 === 1)\r\n\t\t{\r\n\t\t\t// noinspection NestedAssignmentJS, AssignmentResultUsedJS, MagicNumberJS\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(flag2 === 1)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(skipPadding)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\t\tif(enc3 === 64)\r\n\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\t\t\tif(enc4 === 64)\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n\t\t\t\telse\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMoreThanThreeNegationsJS, FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionNamingConventionJS\r\n/**\r\n * Decode string from BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} [useUrlTemplate=false] If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} [cutTailZeros=false] If \"true\" then cut tailing zeroz from function result\r\n * @returns {string}\r\n */\r\nexport function fromBase64(input, useUrlTemplate = false, cutTailZeros = false)\r\n{\r\n\t// noinspection ConditionalExpressionJS\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\t//region Aux functions\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, NestedFunctionJS\r\n\tfunction indexof(toSearch)\r\n\t{\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, MagicNumberJS\r\n\t\tfor(let i = 0; i < 64; i++)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tif(template.charAt(i) === toSearch)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection MagicNumberJS\r\n\t\treturn 64;\r\n\t}\r\n\t\r\n\t// noinspection NestedFunctionJS\r\n\tfunction test(incoming)\r\n\t{\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConditionalExpressionJS, MagicNumberJS\r\n\t\treturn ((incoming === 64) ? 0x00 : incoming);\r\n\t}\r\n\t//endregion\r\n\t\r\n\tlet i = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc1 = indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc2 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc3 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc4 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t\r\n\t\t// noinspection LocalVariableNamingConventionJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n\t\t\r\n\t\toutput += String.fromCharCode(chr1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\tif(enc3 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr2);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\tif(enc4 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr3);\r\n\t}\r\n\t\r\n\tif(cutTailZeros)\r\n\t{\r\n\t\tconst outputLength = output.length;\r\n\t\tlet nonZeroStart = (-1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\tfor(let i = (outputLength - 1); i >= 0; i--)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(output.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroStart = i;\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS, NegatedIfStatementJS\r\n\t\tif(nonZeroStart !== (-1))\r\n\t\t\toutput = output.slice(0, nonZeroStart + 1);\r\n\t\telse\r\n\t\t\toutput = \"\";\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\nexport function arrayBufferToString(buffer)\r\n{\r\n\tlet resultString = \"\";\r\n\tconst view = new Uint8Array(buffer);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const element of view)\r\n\t\tresultString += String.fromCharCode(element);\r\n\t\r\n\treturn resultString;\r\n}\r\n//**************************************************************************************\r\nexport function stringToArrayBuffer(str)\r\n{\r\n\tconst stringLength = str.length;\r\n\t\r\n\tconst resultBuffer = new ArrayBuffer(stringLength);\r\n\tconst resultView = new Uint8Array(resultBuffer);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < stringLength; i++)\r\n\t\tresultView[i] = str.charCodeAt(i);\r\n\t\r\n\treturn resultBuffer;\r\n}\r\n//**************************************************************************************\r\nconst log2 = Math.log(2);\r\n//**************************************************************************************\r\n// noinspection FunctionNamingConventionJS\r\n/**\r\n * Get nearest to input length power of 2\r\n * @param {number} length Current length of existing array\r\n * @returns {number}\r\n */\r\nexport function nearestPowerOf2(length)\r\n{\r\n\tconst base = (Math.log(length) / log2);\r\n\t\r\n\tconst floor = Math.floor(base);\r\n\tconst round = Math.round(base);\r\n\t\r\n\t// noinspection ConditionalExpressionJS\r\n\treturn ((floor === round) ? floor : round);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Delete properties by name from specified object\r\n * @param {Object} object Object to delete properties from\r\n * @param {Array.<string>} propsArray Array of properties names\r\n */\r\nexport function clearProps(object, propsArray)\r\n{\r\n\tfor(const prop of propsArray)\r\n\t\tdelete object[prop];\r\n}\r\n//**************************************************************************************\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}